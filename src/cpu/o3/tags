!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Active	commit.hh	/^        Active,$/;"	e	enum:DefaultCommit::CommitStatus
Active	decode.hh	/^        Active,$/;"	e	enum:DefaultDecode::DecodeStatus
Active	fetch.hh	/^        Active,$/;"	e	enum:DefaultFetch::FetchStatus
Active	iew.hh	/^        Active,$/;"	e	enum:DefaultIEW::Status
Active	rename.hh	/^        Active,$/;"	e	enum:DefaultRename::RenameStatus
Aggressive	commit.hh	/^        Aggressive,$/;"	e	enum:DefaultCommit::CommitPolicy
BaseO3CPU	cpu.cc	/^BaseO3CPU::BaseO3CPU(BaseCPUParams *params)$/;"	f	class:BaseO3CPU
BaseO3CPU	cpu.hh	/^class BaseO3CPU : public BaseCPU$/;"	c
BaseO3DynInst	dyn_inst.hh	/^class BaseO3DynInst : public BaseDynInst<Impl>$/;"	c
BaseO3DynInst	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::BaseO3DynInst(const StaticInstPtr &_staticInst,$/;"	f	class:BaseO3DynInst
BaseO3DynInst	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::BaseO3DynInst(const StaticInstPtr &staticInst,$/;"	f	class:BaseO3DynInst
Blocked	cpu.hh	/^        Blocked,$/;"	e	enum:FullO3CPU::Status
Blocked	decode.hh	/^        Blocked,$/;"	e	enum:DefaultDecode::ThreadStatus
Blocked	fetch.hh	/^        Blocked,$/;"	e	enum:DefaultFetch::ThreadStatus
Blocked	iew.hh	/^        Blocked,$/;"	e	enum:DefaultIEW::StageStatus
Blocked	rename.hh	/^        Blocked,$/;"	e	enum:DefaultRename::ThreadStatus
Branch	fetch.hh	/^        Branch,$/;"	e	enum:DefaultFetch::FetchPriority
CCReg	dyn_inst.hh	/^    typedef TheISA::CCReg   CCReg;$/;"	t	class:BaseO3DynInst
CCReg	regfile.hh	/^    typedef TheISA::CCReg CCReg;$/;"	t	class:PhysRegFile
CPUPol	commit.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultCommit
CPUPol	decode.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultDecode
CPUPol	fetch.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultFetch
CPUPol	iew.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultIEW
CPUPol	impl.hh	/^    typedef SimpleCPUPolicy<O3CPUImpl> CPUPol;$/;"	t	struct:O3CPUImpl
CPUPol	rename.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultRename
CPUPolicy	cpu.hh	/^    typedef typename Impl::CPUPol CPUPolicy;$/;"	t	class:FullO3CPU
CPUType	impl.hh	/^    typedef O3CPU CPUType;$/;"	t	struct:O3CPUImpl
Commit	cpu_policy.hh	/^    typedef DefaultCommit<Impl> Commit;$/;"	t	struct:SimpleCPUPolicy
Commit	rename.hh	/^    typedef typename CPUPol::Commit Commit;$/;"	t	class:DefaultRename
CommitIdx	cpu.hh	/^        CommitIdx,$/;"	e	enum:FullO3CPU::StageIdx
CommitPolicy	commit.hh	/^    enum CommitPolicy {$/;"	g	class:DefaultCommit
CommitStatus	commit.hh	/^    enum CommitStatus{$/;"	g	class:DefaultCommit
DcachePort	cpu.hh	/^        DcachePort(LSQ<Impl> *_lsq, FullO3CPU<Impl>* _cpu)$/;"	f	class:FullO3CPU::DcachePort
DcachePort	cpu.hh	/^    class DcachePort : public MasterPort$/;"	c	class:FullO3CPU
Decode	cpu_policy.hh	/^    typedef DefaultDecode<Impl> Decode;$/;"	t	struct:SimpleCPUPolicy
DecodeIdx	cpu.hh	/^        DecodeIdx,$/;"	e	enum:FullO3CPU::StageIdx
DecodeStatus	decode.hh	/^    enum DecodeStatus {$/;"	g	class:DefaultDecode
DecodeStruct	cpu.hh	/^    typedef typename CPUPolicy::DecodeStruct DecodeStruct;$/;"	t	class:FullO3CPU
DecodeStruct	cpu_policy.hh	/^    typedef DefaultDecodeDefaultRename<Impl> DecodeStruct;$/;"	t	struct:SimpleCPUPolicy
DecodeStruct	decode.hh	/^    typedef typename CPUPol::DecodeStruct DecodeStruct;$/;"	t	class:DefaultDecode
DecodeStruct	rename.hh	/^    typedef typename CPUPol::DecodeStruct DecodeStruct;$/;"	t	class:DefaultRename
DefaultCommit	commit.hh	/^class DefaultCommit$/;"	c
DefaultCommit	commit_impl.hh	/^DefaultCommit<Impl>::DefaultCommit(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultCommit
DefaultDecode	decode.hh	/^class DefaultDecode$/;"	c
DefaultDecode	decode_impl.hh	/^DefaultDecode<Impl>::DefaultDecode(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultDecode
DefaultDecodeDefaultRename	comm.hh	/^struct DefaultDecodeDefaultRename {$/;"	s
DefaultFUPool	FUPool.py	/^class DefaultFUPool(FUPool):$/;"	c
DefaultFetch	fetch.hh	/^class DefaultFetch$/;"	c
DefaultFetch	fetch_impl.hh	/^DefaultFetch<Impl>::DefaultFetch(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultFetch
DefaultFetchDefaultDecode	comm.hh	/^struct DefaultFetchDefaultDecode {$/;"	s
DefaultIEW	iew.hh	/^class DefaultIEW$/;"	c
DefaultIEW	iew_impl.hh	/^DefaultIEW<Impl>::DefaultIEW(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultIEW
DefaultIEWDefaultCommit	comm.hh	/^struct DefaultIEWDefaultCommit {$/;"	s
DefaultRename	rename.hh	/^class DefaultRename$/;"	c
DefaultRename	rename_impl.hh	/^DefaultRename<Impl>::DefaultRename(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultRename
DefaultRenameDefaultIEW	comm.hh	/^struct DefaultRenameDefaultIEW {$/;"	s
DepEntry	dep_graph.hh	/^    typedef DependencyEntry<DynInstPtr> DepEntry;$/;"	t	class:DependencyGraph
DependencyEntry	dep_graph.hh	/^    DependencyEntry()$/;"	f	class:DependencyEntry
DependencyEntry	dep_graph.hh	/^class DependencyEntry$/;"	c
DependencyGraph	dep_graph.hh	/^    DependencyGraph()$/;"	f	class:DependencyGraph
DependencyGraph	dep_graph.hh	/^class DependencyGraph$/;"	c
DerivO3CPU	O3CPU.py	/^class DerivO3CPU(BaseCPU):$/;"	c
DerivO3CPU	deriv.hh	/^    DerivO3CPU(DerivO3CPUParams *p)$/;"	f	class:DerivO3CPU
DerivO3CPU	deriv.hh	/^class DerivO3CPU : public FullO3CPU<O3CPUImpl>$/;"	c
DynInst	fetch.hh	/^    typedef typename Impl::DynInst DynInst;$/;"	t	class:DefaultFetch
DynInst	impl.hh	/^    typedef BaseO3DynInst<O3CPUImpl> DynInst;$/;"	t	struct:O3CPUImpl
DynInstPtr	comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultDecodeDefaultRename
DynInstPtr	comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultFetchDefaultDecode
DynInstPtr	comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultIEWDefaultCommit
DynInstPtr	comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultRenameDefaultIEW
DynInstPtr	comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:IssueStruct
DynInstPtr	comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:TimeBufStruct
DynInstPtr	commit.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultCommit
DynInstPtr	cpu.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:FullO3CPU
DynInstPtr	decode.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultDecode
DynInstPtr	fetch.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultFetch
DynInstPtr	iew.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultIEW
DynInstPtr	impl.hh	/^    typedef RefCountingPtr<DynInst> DynInstPtr;$/;"	t	struct:O3CPUImpl
DynInstPtr	inst_queue.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:InstructionQueue
DynInstPtr	lsq.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:LSQ
DynInstPtr	lsq_unit.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:LSQUnit
DynInstPtr	mem_dep_unit.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:MemDepUnit
DynInstPtr	probe/elastic_trace.hh	/^    typedef typename O3CPUImpl::DynInstPtr DynInstPtr;$/;"	t	class:ElasticTrace
DynInstPtr	rename.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultRename
DynInstPtr	rob.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:ROB
Dynamic	inst_queue.hh	/^        Dynamic,$/;"	e	enum:InstructionQueue::IQPolicy
Dynamic	lsq.hh	/^        Dynamic,$/;"	e	enum:LSQ::LSQPolicy
Dynamic	rob.hh	/^        Dynamic,$/;"	e	enum:ROB::ROBPolicy
ElasticTrace	probe/ElasticTrace.py	/^class ElasticTrace(ProbeListenerObject):$/;"	c
ElasticTrace	probe/elastic_trace.cc	/^ElasticTrace::ElasticTrace(const ElasticTraceParams* params)$/;"	f	class:ElasticTrace
ElasticTrace	probe/elastic_trace.hh	/^class ElasticTrace : public ProbeListenerObject$/;"	c
ExtMachInst	dyn_inst.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:BaseO3DynInst
ExtMachInst	fetch.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:DefaultFetch
FP_ALU	FuncUnitConfig.py	/^class FP_ALU(FUDesc):$/;"	c
FP_MultDiv	FuncUnitConfig.py	/^class FP_MultDiv(FUDesc):$/;"	c
FUCompletion	inst_queue.hh	/^    class FUCompletion : public Event {$/;"	c	class:InstructionQueue
FUCompletion	inst_queue_impl.hh	/^InstructionQueue<Impl>::FUCompletion::FUCompletion(DynInstPtr &_inst,$/;"	f	class:InstructionQueue::FUCompletion
FUIdxQueue	fu_pool.hh	/^        FUIdxQueue()$/;"	f	class:FUPool::FUIdxQueue
FUIdxQueue	fu_pool.hh	/^    class FUIdxQueue {$/;"	c	class:FUPool
FUList	FUPool.py	/^    FUList = VectorParam.FUDesc("list of FU's for this pool")$/;"	v	class:FUPool
FUList	FUPool.py	/^    FUList = [ IntALU(), IntMultDiv(), FP_ALU(), FP_MultDiv(), ReadPort(),$/;"	v	class:DefaultFUPool
FUPool	FUPool.py	/^class FUPool(SimObject):$/;"	c
FUPool	fu_pool.cc	/^FUPool::FUPool(const Params *p)$/;"	f	class:FUPool
FUPool	fu_pool.hh	/^class FUPool : public SimObject$/;"	c
Fetch	commit.hh	/^    typedef typename CPUPol::Fetch Fetch;$/;"	t	class:DefaultCommit
Fetch	cpu_policy.hh	/^    typedef DefaultFetch<Impl> Fetch;$/;"	t	struct:SimpleCPUPolicy
FetchIdx	cpu.hh	/^        FetchIdx,$/;"	e	enum:FullO3CPU::StageIdx
FetchPriority	fetch.hh	/^    enum FetchPriority {$/;"	g	class:DefaultFetch
FetchStatus	fetch.hh	/^    enum FetchStatus {$/;"	g	class:DefaultFetch
FetchStruct	commit.hh	/^    typedef typename CPUPol::FetchStruct FetchStruct;$/;"	t	class:DefaultCommit
FetchStruct	cpu.hh	/^    typedef typename CPUPolicy::FetchStruct FetchStruct;$/;"	t	class:FullO3CPU
FetchStruct	cpu_policy.hh	/^    typedef DefaultFetchDefaultDecode<Impl> FetchStruct;$/;"	t	struct:SimpleCPUPolicy
FetchStruct	decode.hh	/^    typedef typename CPUPol::FetchStruct FetchStruct;$/;"	t	class:DefaultDecode
FetchStruct	fetch.hh	/^    typedef typename CPUPol::FetchStruct FetchStruct;$/;"	t	class:DefaultFetch
FetchTranslation	fetch.hh	/^        FetchTranslation(DefaultFetch<Impl> *_fetch)$/;"	f	class:DefaultFetch::FetchTranslation
FetchTranslation	fetch.hh	/^    class FetchTranslation : public BaseTLB::Translation$/;"	c	class:DefaultFetch
FetchTrapPending	commit.hh	/^        FetchTrapPending,$/;"	e	enum:DefaultCommit::ThreadStatus
Fetching	fetch.hh	/^        Fetching,$/;"	e	enum:DefaultFetch::ThreadStatus
FinishTranslationEvent	fetch.hh	/^        FinishTranslationEvent(DefaultFetch<Impl> *_fetch)$/;"	f	class:DefaultFetch::FinishTranslationEvent
FinishTranslationEvent	fetch.hh	/^    class FinishTranslationEvent : public Event$/;"	c	class:DefaultFetch
FloatReg	dyn_inst.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:BaseO3DynInst
FloatReg	regfile.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:PhysRegFile
FloatRegBits	dyn_inst.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:BaseO3DynInst
FloatRegBits	regfile.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:PhysRegFile
FreeEntries	rename.hh	/^    struct FreeEntries {$/;"	s	class:DefaultRename
FreeList	cpu_policy.hh	/^    typedef UnifiedFreeList FreeList;$/;"	t	struct:SimpleCPUPolicy
FreeList	rename.hh	/^    typedef typename CPUPol::FreeList FreeList;$/;"	t	class:DefaultRename
FullO3CPU	cpu.cc	/^FullO3CPU<Impl>::FullO3CPU(DerivO3CPUParams *params)$/;"	f	class:FullO3CPU
FullO3CPU	cpu.hh	/^class FullO3CPU : public BaseO3CPU$/;"	c
FullSource	rename.hh	/^    enum FullSource {$/;"	g	class:DefaultRename
Halted	cpu.hh	/^        Halted,$/;"	e	enum:FullO3CPU::Status
IEW	commit.hh	/^    typedef typename CPUPol::IEW IEW;$/;"	t	class:DefaultCommit
IEW	cpu_policy.hh	/^    typedef DefaultIEW<Impl> IEW;$/;"	t	struct:SimpleCPUPolicy
IEW	inst_queue.hh	/^    typedef typename Impl::CPUPol::IEW IEW;$/;"	t	class:InstructionQueue
IEW	lsq.hh	/^    typedef typename Impl::CPUPol::IEW IEW;$/;"	t	class:LSQ
IEW	lsq_unit.hh	/^    typedef typename Impl::CPUPol::IEW IEW;$/;"	t	class:LSQUnit
IEW	rename.hh	/^    typedef typename CPUPol::IEW IEW;$/;"	t	class:DefaultRename
IEWIdx	cpu.hh	/^        IEWIdx,$/;"	e	enum:FullO3CPU::StageIdx
IEWStruct	commit.hh	/^    typedef typename CPUPol::IEWStruct IEWStruct;$/;"	t	class:DefaultCommit
IEWStruct	cpu.hh	/^    typedef typename CPUPolicy::IEWStruct IEWStruct;$/;"	t	class:FullO3CPU
IEWStruct	cpu_policy.hh	/^    typedef DefaultIEWDefaultCommit<Impl> IEWStruct;$/;"	t	struct:SimpleCPUPolicy
IEWStruct	iew.hh	/^    typedef typename CPUPol::IEWStruct IEWStruct;$/;"	t	class:DefaultIEW
IQ	cpu_policy.hh	/^    typedef InstructionQueue<Impl> IQ;$/;"	t	struct:SimpleCPUPolicy
IQ	fetch.hh	/^        IQ,$/;"	e	enum:DefaultFetch::FetchPriority
IQ	iew.hh	/^    typedef typename CPUPol::IQ IQ;$/;"	t	class:DefaultIEW
IQ	rename.hh	/^        IQ,$/;"	e	enum:DefaultRename::FullSource
IQPolicy	inst_queue.hh	/^    enum IQPolicy {$/;"	g	class:InstructionQueue
IcacheAccessComplete	fetch.hh	/^        IcacheAccessComplete,$/;"	e	enum:DefaultFetch::ThreadStatus
IcachePort	cpu.hh	/^        IcachePort(DefaultFetch<Impl> *_fetch, FullO3CPU<Impl>* _cpu)$/;"	f	class:FullO3CPU::IcachePort
IcachePort	cpu.hh	/^    class IcachePort : public MasterPort$/;"	c	class:FullO3CPU
IcacheWaitResponse	fetch.hh	/^        IcacheWaitResponse,$/;"	e	enum:DefaultFetch::ThreadStatus
IcacheWaitRetry	fetch.hh	/^        IcacheWaitRetry,$/;"	e	enum:DefaultFetch::ThreadStatus
Idle	commit.hh	/^        Idle,$/;"	e	enum:DefaultCommit::ThreadStatus
Idle	cpu.hh	/^        Idle,$/;"	e	enum:FullO3CPU::Status
Idle	decode.hh	/^        Idle,$/;"	e	enum:DefaultDecode::ThreadStatus
Idle	fetch.hh	/^        Idle,$/;"	e	enum:DefaultFetch::ThreadStatus
Idle	iew.hh	/^        Idle,$/;"	e	enum:DefaultIEW::StageStatus
Idle	rename.hh	/^        Idle,$/;"	e	enum:DefaultRename::ThreadStatus
Idle	rob.hh	/^        Idle,$/;"	e	enum:ROB::Status
ImplState	cpu.hh	/^    typedef O3ThreadState<Impl> ImplState;$/;"	t	class:FullO3CPU
Inactive	commit.hh	/^        Inactive$/;"	e	enum:DefaultCommit::CommitStatus
Inactive	decode.hh	/^        Inactive$/;"	e	enum:DefaultDecode::DecodeStatus
Inactive	fetch.hh	/^        Inactive$/;"	e	enum:DefaultFetch::FetchStatus
Inactive	iew.hh	/^        Inactive$/;"	e	enum:DefaultIEW::Status
Inactive	rename.hh	/^        Inactive$/;"	e	enum:DefaultRename::RenameStatus
InstExecInfo	probe/elastic_trace.hh	/^        InstExecInfo()$/;"	f	struct:ElasticTrace::InstExecInfo
InstExecInfo	probe/elastic_trace.hh	/^    struct InstExecInfo$/;"	s	class:ElasticTrace
InstIt	rob.hh	/^    typedef typename std::list<DynInstPtr>::iterator InstIt;$/;"	t	class:ROB
InstQueue	rename.hh	/^    typedef std::deque<DynInstPtr> InstQueue;$/;"	t	class:DefaultRename
InstructionQueue	inst_queue.hh	/^class InstructionQueue$/;"	c
InstructionQueue	inst_queue_impl.hh	/^InstructionQueue<Impl>::InstructionQueue(O3CPU *cpu_ptr, IEW *iew_ptr,$/;"	f	class:InstructionQueue
IntALU	FuncUnitConfig.py	/^class IntALU(FUDesc):$/;"	c
IntMultDiv	FuncUnitConfig.py	/^class IntMultDiv(FUDesc):$/;"	c
IntReg	dyn_inst.hh	/^    typedef TheISA::IntReg   IntReg;$/;"	t	class:BaseO3DynInst
IntReg	regfile.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:PhysRegFile
IprPort	FuncUnitConfig.py	/^class IprPort(FUDesc):$/;"	c
IssueStruct	comm.hh	/^struct IssueStruct {$/;"	s
IssueStruct	cpu_policy.hh	/^    typedef ::IssueStruct<Impl> IssueStruct;$/;"	t	struct:SimpleCPUPolicy
IssueStruct	iew.hh	/^    typedef typename CPUPol::IssueStruct IssueStruct;$/;"	t	class:DefaultIEW
IssueStruct	inst_queue.hh	/^    typedef typename Impl::CPUPol::IssueStruct IssueStruct;$/;"	t	class:InstructionQueue
IssueStruct	lsq_unit.hh	/^    typedef typename Impl::CPUPol::IssueStruct IssueStruct;$/;"	t	class:LSQUnit
ItlbWait	fetch.hh	/^        ItlbWait,$/;"	e	enum:DefaultFetch::ThreadStatus
Kernel	thread_context.hh	/^namespace Kernel {$/;"	n
LFST	store_set.hh	/^    std::vector<InstSeqNum> LFST;$/;"	m	class:StoreSet
LFSTSize	O3CPU.py	/^    LFSTSize = Param.Unsigned(1024, "Last fetched store table size")$/;"	v	class:DerivO3CPU
LFSTSize	store_set.hh	/^    int LFSTSize;$/;"	m	class:StoreSet
LQ	rename.hh	/^        LQ,$/;"	e	enum:DefaultRename::FullSource
LQEntries	O3CPU.py	/^    LQEntries = Param.Unsigned(32, "Number of load queue entries")$/;"	v	class:DerivO3CPU
LQEntries	lsq.hh	/^    unsigned LQEntries;$/;"	m	class:LSQ
LQEntries	lsq_unit.hh	/^    unsigned LQEntries;$/;"	m	class:LSQUnit
LSQ	cpu_policy.hh	/^    typedef ::LSQ<Impl> LSQ;$/;"	t	struct:SimpleCPUPolicy
LSQ	fetch.hh	/^        LSQ$/;"	e	enum:DefaultFetch::FetchPriority
LSQ	iew.hh	/^    typedef typename CPUPol::LSQ LSQ;$/;"	t	class:DefaultIEW
LSQ	lsq.hh	/^class LSQ {$/;"	c
LSQ	lsq_impl.hh	/^LSQ<Impl>::LSQ(O3CPU *cpu_ptr, IEW *iew_ptr, DerivO3CPUParams *params)$/;"	f	class:LSQ
LSQ	lsq_unit.hh	/^    typedef typename Impl::CPUPol::LSQ LSQ;$/;"	t	class:LSQUnit
LSQCheckLoads	O3CPU.py	/^    LSQCheckLoads = Param.Bool(True,$/;"	v	class:DerivO3CPU
LSQDepCheckShift	O3CPU.py	/^    LSQDepCheckShift = Param.Unsigned(4, "Number of places to shift addr before check")$/;"	v	class:DerivO3CPU
LSQPolicy	lsq.hh	/^    enum LSQPolicy {$/;"	g	class:LSQ
LSQSenderState	lsq_unit.hh	/^        LSQSenderState()$/;"	f	class:LSQUnit::LSQSenderState
LSQSenderState	lsq_unit.hh	/^    class LSQSenderState : public Packet::SenderState$/;"	c	class:LSQUnit
LSQUnit	cpu_policy.hh	/^    typedef ::LSQUnit<Impl> LSQUnit;$/;"	t	struct:SimpleCPUPolicy
LSQUnit	lsq.hh	/^    typedef typename Impl::CPUPol::LSQUnit LSQUnit;$/;"	t	class:LSQ
LSQUnit	lsq_unit.hh	/^class LSQUnit {$/;"	c
LSQUnit	lsq_unit_impl.hh	/^LSQUnit<Impl>::LSQUnit()$/;"	f	class:LSQUnit
ListIt	cpu.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:FullO3CPU
ListIt	inst_queue.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:InstructionQueue
ListIt	mem_dep_unit.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:MemDepUnit
ListOrderEntry	inst_queue.hh	/^    struct ListOrderEntry {$/;"	s	class:InstructionQueue
ListOrderIt	inst_queue.hh	/^    typedef typename std::list<ListOrderEntry>::iterator ListOrderIt;$/;"	t	class:InstructionQueue
MachInst	dyn_inst.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:BaseO3DynInst
MachInst	fetch.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:DefaultFetch
MachInst	impl.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	struct:O3CPUImpl
MaxInstDestRegs	dyn_inst.hh	/^        MaxInstDestRegs = TheISA::MaxInstDestRegs       \/\/< Max dest regs$/;"	e	enum:BaseO3DynInst::__anon1
MaxInstSrcRegs	dyn_inst.hh	/^        MaxInstSrcRegs = TheISA::MaxInstSrcRegs,        \/\/< Max source regs$/;"	e	enum:BaseO3DynInst::__anon1
MaxThreads	impl.hh	/^      MaxThreads = 4$/;"	e	enum:O3CPUImpl::__anon3
MaxWidth	impl.hh	/^      MaxWidth = 8,$/;"	e	enum:O3CPUImpl::__anon3
MemDepEntry	mem_dep_unit.hh	/^        MemDepEntry(DynInstPtr &new_inst)$/;"	f	class:MemDepUnit::MemDepEntry
MemDepEntry	mem_dep_unit.hh	/^    class MemDepEntry {$/;"	c	class:MemDepUnit
MemDepEntryPtr	mem_dep_unit.hh	/^    typedef std::shared_ptr<MemDepEntry> MemDepEntryPtr;$/;"	t	class:MemDepUnit
MemDepHash	mem_dep_unit.hh	/^    typedef std::unordered_map<InstSeqNum, MemDepEntryPtr, SNHash> MemDepHash;$/;"	t	class:MemDepUnit
MemDepHashIt	mem_dep_unit.hh	/^    typedef typename MemDepHash::iterator MemDepHashIt;$/;"	t	class:MemDepUnit
MemDepUnit	cpu_policy.hh	/^    typedef ::MemDepUnit<StoreSet, Impl> MemDepUnit;$/;"	t	struct:SimpleCPUPolicy
MemDepUnit	inst_queue.hh	/^    typedef typename Impl::CPUPol::MemDepUnit MemDepUnit;$/;"	t	class:InstructionQueue
MemDepUnit	mem_dep_unit.hh	/^class MemDepUnit$/;"	c
MemDepUnit	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::MemDepUnit()$/;"	f	class:MemDepUnit
MemDepUnit	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::MemDepUnit(DerivO3CPUParams *params)$/;"	f	class:MemDepUnit
MiscReg	dyn_inst.hh	/^    typedef TheISA::MiscReg  MiscReg;$/;"	t	class:BaseO3DynInst
NONE	rename.hh	/^        NONE$/;"	e	enum:DefaultRename::FullSource
NVecElems	rename_map.hh	/^    static constexpr uint32_t NVecElems = TheISA::NumVecElemPerVecReg;$/;"	m	class:UnifiedRenameMap
NoCapableFU	fu_pool.hh	/^    static constexpr auto NoCapableFU = -2;$/;"	m	class:FUPool
NoFreeFU	fu_pool.hh	/^    static constexpr auto NoFreeFU = -1;$/;"	m	class:FUPool
NoGoodAddr	fetch.hh	/^        NoGoodAddr$/;"	e	enum:DefaultFetch::ThreadStatus
NonSpecMapIt	inst_queue.hh	/^    typedef typename std::map<InstSeqNum, DynInstPtr>::iterator NonSpecMapIt;$/;"	t	class:InstructionQueue
NumStages	cpu.hh	/^        NumStages };$/;"	e	enum:FullO3CPU::StageIdx
NumVecElemPerVecReg	dyn_inst.hh	/^    static constexpr auto NumVecElemPerVecReg = TheISA::NumVecElemPerVecReg;$/;"	m	class:BaseO3DynInst
NumVecElemPerVecReg	regfile.hh	/^    static constexpr auto NumVecElemPerVecReg = TheISA::NumVecElemPerVecReg;$/;"	m	class:PhysRegFile
O3CPU	commit.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultCommit
O3CPU	cpu.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:FullO3CPU
O3CPU	decode.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultDecode
O3CPU	dyn_inst.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:BaseO3DynInst
O3CPU	fetch.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultFetch
O3CPU	iew.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultIEW
O3CPU	impl.hh	/^    typedef FullO3CPU<O3CPUImpl> O3CPU;$/;"	t	struct:O3CPUImpl
O3CPU	inst_queue.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:InstructionQueue
O3CPU	lsq.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:LSQ
O3CPU	lsq_unit.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:LSQUnit
O3CPU	rename.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultRename
O3CPU	rob.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:ROB
O3CPU	thread_context.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:O3ThreadContext
O3CPU	thread_state.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	struct:O3ThreadState
O3CPUImpl	impl.hh	/^struct O3CPUImpl$/;"	s
O3Checker	O3Checker.py	/^class O3Checker(CheckerCPU):$/;"	c
O3Checker	checker.hh	/^    O3Checker(Params *p)$/;"	f	class:O3Checker
O3Checker	checker.hh	/^class O3Checker : public Checker<O3CPUImpl>$/;"	c
O3ThreadContext	thread_context.hh	/^class O3ThreadContext : public ThreadContext$/;"	c
O3ThreadState	thread_state.hh	/^    O3ThreadState(O3CPU *_cpu, int _thread_num, Process *_process)$/;"	f	struct:O3ThreadState
O3ThreadState	thread_state.hh	/^struct O3ThreadState : public ThreadState {$/;"	s
OldestReady	commit.hh	/^        OldestReady$/;"	e	enum:DefaultCommit::CommitPolicy
Params	fu_pool.hh	/^    typedef FUPoolParams Params;$/;"	t	class:FUPool
Partitioned	inst_queue.hh	/^        Partitioned,$/;"	e	enum:InstructionQueue::IQPolicy
Partitioned	lsq.hh	/^        Partitioned,$/;"	e	enum:LSQ::LSQPolicy
Partitioned	rob.hh	/^        Partitioned,$/;"	e	enum:ROB::ROBPolicy
PhysFloatReg	regfile.hh	/^    } PhysFloatReg;$/;"	t	class:PhysRegFile	typeref:union:PhysRegFile::__anon2
PhysRegFile	regfile.cc	/^PhysRegFile::PhysRegFile(unsigned _numPhysicalIntRegs,$/;"	f	class:PhysRegFile
PhysRegFile	regfile.hh	/^class PhysRegFile$/;"	c
PhysRegId	comm.hh	/^    explicit PhysRegId() : RegId(IntRegClass, -1), flatIdx(-1) {}$/;"	f	class:PhysRegId
PhysRegId	comm.hh	/^    explicit PhysRegId(RegClass _regClass, PhysRegIndex _regIdx,$/;"	f	class:PhysRegId
PhysRegId	comm.hh	/^class PhysRegId : private RegId {$/;"	c
QuiescePending	fetch.hh	/^        QuiescePending,$/;"	e	enum:DefaultFetch::ThreadStatus
ROB	commit.hh	/^    typedef typename CPUPol::ROB ROB;$/;"	t	class:DefaultCommit
ROB	cpu_policy.hh	/^    typedef ::ROB<Impl> ROB;$/;"	t	struct:SimpleCPUPolicy
ROB	rename.hh	/^        ROB,$/;"	e	enum:DefaultRename::FullSource
ROB	rob.hh	/^class ROB$/;"	c
ROB	rob_impl.hh	/^ROB<Impl>::ROB(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:ROB
ROBPolicy	rob.hh	/^    enum ROBPolicy{$/;"	g	class:ROB
ROBSquashing	commit.hh	/^        ROBSquashing,$/;"	e	enum:DefaultCommit::ThreadStatus
ROBSquashing	rob.hh	/^        ROBSquashing$/;"	e	enum:ROB::Status
RdWrPort	FuncUnitConfig.py	/^class RdWrPort(FUDesc):$/;"	c
ReadPort	FuncUnitConfig.py	/^class ReadPort(FUDesc):$/;"	c
ReadyInstQueue	inst_queue.hh	/^    ReadyInstQueue;$/;"	t	class:InstructionQueue
Record	probe/elastic_trace.hh	/^    typedef ProtoMessage::InstDepRecord Record;$/;"	t	class:ElasticTrace
RecordType	probe/elastic_trace.hh	/^    typedef ProtoMessage::InstDepRecord::RecordType RecordType;$/;"	t	class:ElasticTrace
Rename	cpu_policy.hh	/^    typedef DefaultRename<Impl> Rename;$/;"	t	struct:SimpleCPUPolicy
RenameHistory	rename.hh	/^        RenameHistory(InstSeqNum _instSeqNum, const RegId& _archReg,$/;"	f	struct:DefaultRename::RenameHistory
RenameHistory	rename.hh	/^    struct RenameHistory {$/;"	s	class:DefaultRename
RenameIdx	cpu.hh	/^        RenameIdx,$/;"	e	enum:FullO3CPU::StageIdx
RenameInfo	rename_map.hh	/^    typedef SimpleRenameMap::RenameInfo RenameInfo;$/;"	t	class:UnifiedRenameMap
RenameInfo	rename_map.hh	/^    typedef std::pair<PhysRegIdPtr, PhysRegIdPtr> RenameInfo;$/;"	t	class:SimpleRenameMap
RenameMap	commit.hh	/^    typedef typename CPUPol::RenameMap RenameMap;$/;"	t	class:DefaultCommit
RenameMap	cpu_policy.hh	/^    typedef UnifiedRenameMap RenameMap;$/;"	t	struct:SimpleCPUPolicy
RenameMap	iew.hh	/^    typedef typename CPUPol::RenameMap RenameMap;$/;"	t	class:DefaultIEW
RenameMap	rename.hh	/^    typedef typename CPUPol::RenameMap RenameMap;$/;"	t	class:DefaultRename
RenameStatus	rename.hh	/^    enum RenameStatus {$/;"	g	class:DefaultRename
RenameStruct	commit.hh	/^    typedef typename CPUPol::RenameStruct RenameStruct;$/;"	t	class:DefaultCommit
RenameStruct	cpu.hh	/^    typedef typename CPUPolicy::RenameStruct RenameStruct;$/;"	t	class:FullO3CPU
RenameStruct	cpu_policy.hh	/^    typedef DefaultRenameDefaultIEW<Impl> RenameStruct;$/;"	t	struct:SimpleCPUPolicy
RenameStruct	iew.hh	/^    typedef typename CPUPol::RenameStruct RenameStruct;$/;"	t	class:DefaultIEW
RenameStruct	rename.hh	/^    typedef typename CPUPol::RenameStruct RenameStruct;$/;"	t	class:DefaultRename
RoundRobin	commit.hh	/^        RoundRobin,$/;"	e	enum:DefaultCommit::CommitPolicy
RoundRobin	fetch.hh	/^        RoundRobin,$/;"	e	enum:DefaultFetch::FetchPriority
Running	commit.hh	/^        Running,$/;"	e	enum:DefaultCommit::ThreadStatus
Running	cpu.hh	/^        Running,$/;"	e	enum:FullO3CPU::Status
Running	decode.hh	/^        Running,$/;"	e	enum:DefaultDecode::ThreadStatus
Running	fetch.hh	/^        Running,$/;"	e	enum:DefaultFetch::ThreadStatus
Running	iew.hh	/^        Running,$/;"	e	enum:DefaultIEW::StageStatus
Running	rename.hh	/^        Running,$/;"	e	enum:DefaultRename::ThreadStatus
Running	rob.hh	/^        Running,$/;"	e	enum:ROB::Status
SIMD_Unit	FuncUnitConfig.py	/^class SIMD_Unit(FUDesc):$/;"	c
SNHash	mem_dep_unit.hh	/^struct SNHash {$/;"	s
SQ	rename.hh	/^        SQ,$/;"	e	enum:DefaultRename::FullSource
SQEntries	O3CPU.py	/^    SQEntries = Param.Unsigned(32, "Number of store queue entries")$/;"	v	class:DerivO3CPU
SQEntries	lsq.hh	/^    unsigned SQEntries;$/;"	m	class:LSQ
SQEntries	lsq_unit.hh	/^    unsigned SQEntries;$/;"	m	class:LSQUnit
SQEntry	lsq_unit.hh	/^        SQEntry()$/;"	f	struct:LSQUnit::SQEntry
SQEntry	lsq_unit.hh	/^        SQEntry(DynInstPtr &_inst)$/;"	f	struct:LSQUnit::SQEntry
SQEntry	lsq_unit.hh	/^    struct SQEntry {$/;"	s	class:LSQUnit
SSID	store_set.hh	/^    typedef unsigned SSID;$/;"	t	class:StoreSet
SSIT	store_set.hh	/^    std::vector<SSID> SSIT;$/;"	m	class:StoreSet
SSITSize	O3CPU.py	/^    SSITSize = Param.Unsigned(1024, "Store set ID table size")$/;"	v	class:DerivO3CPU
SSITSize	store_set.hh	/^    int SSITSize;$/;"	m	class:StoreSet
Scoreboard	scoreboard.cc	/^Scoreboard::Scoreboard(const std::string &_my_name,$/;"	f	class:Scoreboard
Scoreboard	scoreboard.hh	/^class Scoreboard$/;"	c
SeqNumMapIt	store_set.hh	/^    typedef std::map<InstSeqNum, int, ltseqnum>::iterator SeqNumMapIt;$/;"	t	class:StoreSet
SeqNumRegPair	probe/elastic_trace.hh	/^    typedef typename std::pair<InstSeqNum, PhysRegIndex> SeqNumRegPair;$/;"	t	class:ElasticTrace
SeqNumRegPair	rename.hh	/^    typedef typename std::pair<InstSeqNum, PhysRegIdPtr> SeqNumRegPair;$/;"	t	class:DefaultRename
SerializeStall	rename.hh	/^        SerializeStall$/;"	e	enum:DefaultRename::ThreadStatus
SimpleCPUPolicy	cpu_policy.hh	/^struct SimpleCPUPolicy$/;"	s
SimpleFreeList	free_list.hh	/^    SimpleFreeList() {};$/;"	f	class:SimpleFreeList
SimpleFreeList	free_list.hh	/^class SimpleFreeList$/;"	c
SimpleRenameMap	rename_map.cc	/^SimpleRenameMap::SimpleRenameMap()$/;"	f	class:SimpleRenameMap
SimpleRenameMap	rename_map.hh	/^class SimpleRenameMap$/;"	c
SimpleTrace	probe/SimpleTrace.py	/^class SimpleTrace(ProbeListenerObject):$/;"	c
SimpleTrace	probe/simple_trace.hh	/^    SimpleTrace(const SimpleTraceParams *params):$/;"	f	class:SimpleTrace
SimpleTrace	probe/simple_trace.hh	/^class SimpleTrace : public ProbeListenerObject {$/;"	c
SingleThread	fetch.hh	/^        SingleThread,$/;"	e	enum:DefaultFetch::FetchPriority
SquashAfterPending	commit.hh	/^        SquashAfterPending, \/\/< Committing instructions before a squash.$/;"	e	enum:DefaultCommit::ThreadStatus
Squashing	decode.hh	/^        Squashing,$/;"	e	enum:DefaultDecode::ThreadStatus
Squashing	fetch.hh	/^        Squashing,$/;"	e	enum:DefaultFetch::ThreadStatus
Squashing	iew.hh	/^        Squashing,$/;"	e	enum:DefaultIEW::StageStatus
Squashing	rename.hh	/^        Squashing,$/;"	e	enum:DefaultRename::ThreadStatus
StageIdx	cpu.hh	/^    enum StageIdx {$/;"	g	class:FullO3CPU
StageStatus	iew.hh	/^    enum StageStatus {$/;"	g	class:DefaultIEW
Stalls	decode.hh	/^    struct Stalls {$/;"	s	class:DefaultDecode
Stalls	fetch.hh	/^    struct Stalls {$/;"	s	class:DefaultFetch
Stalls	rename.hh	/^    struct Stalls {$/;"	s	class:DefaultRename
StartSquash	decode.hh	/^        StartSquash,$/;"	e	enum:DefaultDecode::ThreadStatus
StartSquash	iew.hh	/^        StartSquash,$/;"	e	enum:DefaultIEW::StageStatus
StartSquash	rename.hh	/^        StartSquash,$/;"	e	enum:DefaultRename::ThreadStatus
Status	cpu.hh	/^    enum Status {$/;"	g	class:FullO3CPU
Status	iew.hh	/^    enum Status {$/;"	g	class:DefaultIEW
Status	rob.hh	/^    enum Status {$/;"	g	class:ROB
Status	thread_state.hh	/^    typedef ThreadContext::Status Status;$/;"	t	struct:O3ThreadState
StoreSet	store_set.cc	/^StoreSet::StoreSet(uint64_t clear_period, int _SSIT_size, int _LFST_size)$/;"	f	class:StoreSet
StoreSet	store_set.hh	/^    StoreSet() { };$/;"	f	class:StoreSet
StoreSet	store_set.hh	/^class StoreSet$/;"	c
SwitchedOut	cpu.hh	/^        SwitchedOut$/;"	e	enum:FullO3CPU::Status
Thread	commit.hh	/^    typedef O3ThreadState<Impl> Thread;$/;"	t	class:DefaultCommit
Thread	cpu.hh	/^    typedef O3ThreadState<Impl> Thread;$/;"	t	class:FullO3CPU
ThreadStatus	commit.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultCommit
ThreadStatus	decode.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultDecode
ThreadStatus	fetch.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultFetch
ThreadStatus	rename.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultRename
Threshold	inst_queue.hh	/^        Threshold$/;"	e	enum:InstructionQueue::IQPolicy
Threshold	lsq.hh	/^        Threshold$/;"	e	enum:LSQ::LSQPolicy
Threshold	rob.hh	/^        Threshold$/;"	e	enum:ROB::ROBPolicy
TimeBufStruct	comm.hh	/^struct TimeBufStruct {$/;"	s
TimeStruct	commit.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultCommit
TimeStruct	cpu.hh	/^    typedef typename CPUPolicy::TimeStruct TimeStruct;$/;"	t	class:FullO3CPU
TimeStruct	cpu_policy.hh	/^    typedef TimeBufStruct<Impl> TimeStruct;$/;"	t	struct:SimpleCPUPolicy
TimeStruct	decode.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultDecode
TimeStruct	fetch.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultFetch
TimeStruct	iew.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultIEW
TimeStruct	inst_queue.hh	/^    typedef typename Impl::CPUPol::TimeStruct TimeStruct;$/;"	t	class:InstructionQueue
TimeStruct	rename.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultRename
TraceInfo	probe/elastic_trace.hh	/^        TraceInfo()$/;"	f	struct:ElasticTrace::TraceInfo
TraceInfo	probe/elastic_trace.hh	/^    struct TraceInfo$/;"	s	class:ElasticTrace
TrapPending	commit.hh	/^        TrapPending,$/;"	e	enum:DefaultCommit::ThreadStatus
TrapPending	fetch.hh	/^        TrapPending,$/;"	e	enum:DefaultFetch::ThreadStatus
Unblocking	decode.hh	/^        Unblocking$/;"	e	enum:DefaultDecode::ThreadStatus
Unblocking	iew.hh	/^        Unblocking$/;"	e	enum:DefaultIEW::StageStatus
Unblocking	rename.hh	/^        Unblocking,$/;"	e	enum:DefaultRename::ThreadStatus
UnifiedFreeList	free_list.cc	/^UnifiedFreeList::UnifiedFreeList(const std::string &_my_name,$/;"	f	class:UnifiedFreeList
UnifiedFreeList	free_list.hh	/^class UnifiedFreeList$/;"	c
UnifiedRenameMap	rename_map.hh	/^    UnifiedRenameMap() : regFile(nullptr) {};$/;"	f	class:UnifiedRenameMap
UnifiedRenameMap	rename_map.hh	/^class UnifiedRenameMap$/;"	c
UnmapInfo	rob.hh	/^    typedef std::pair<RegIndex, PhysRegIndex> UnmapInfo;$/;"	t	class:ROB
WritePort	FuncUnitConfig.py	/^class WritePort(FUDesc):$/;"	c
WritebackEvent	lsq_unit.hh	/^    class WritebackEvent : public Event {$/;"	c	class:LSQUnit
WritebackEvent	lsq_unit_impl.hh	/^LSQUnit<Impl>::WritebackEvent::WritebackEvent(DynInstPtr &_inst, PacketPtr _pkt,$/;"	f	class:LSQUnit::WritebackEvent
__CPU_O3_CHECKER_HH__	checker.hh	44;"	d
__CPU_O3_COMMIT_HH__	commit.hh	45;"	d
__CPU_O3_COMMIT_IMPL_HH__	commit_impl.hh	45;"	d
__CPU_O3_COMM_HH__	comm.hh	46;"	d
__CPU_O3_CPU_HH__	cpu.hh	48;"	d
__CPU_O3_CPU_POLICY_HH__	cpu_policy.hh	33;"	d
__CPU_O3_DECODE_HH__	decode.hh	44;"	d
__CPU_O3_DECODE_IMPL_HH__	decode_impl.hh	44;"	d
__CPU_O3_DEP_GRAPH_HH__	dep_graph.hh	44;"	d
__CPU_O3_DERIV_HH__	deriv.hh	32;"	d
__CPU_O3_DYN_INST_HH__	dyn_inst.hh	45;"	d
__CPU_O3_DYN_INST_IMPL_HH__	dyn_inst_impl.hh	44;"	d
__CPU_O3_FETCH_HH__	fetch.hh	45;"	d
__CPU_O3_FETCH_IMPL_HH__	fetch_impl.hh	46;"	d
__CPU_O3_FREE_LIST_HH__	free_list.hh	45;"	d
__CPU_O3_FU_POOL_HH__	fu_pool.hh	44;"	d
__CPU_O3_IEW_HH__	iew.hh	44;"	d
__CPU_O3_IEW_IMPL_IMPL_HH__	iew_impl.hh	45;"	d
__CPU_O3_IMPL_HH__	impl.hh	32;"	d
__CPU_O3_INST_QUEUE_HH__	inst_queue.hh	45;"	d
__CPU_O3_INST_QUEUE_IMPL_HH__	inst_queue_impl.hh	46;"	d
__CPU_O3_LSQ_HH__	lsq.hh	45;"	d
__CPU_O3_LSQ_IMPL_HH__	lsq_impl.hh	45;"	d
__CPU_O3_LSQ_UNIT_HH__	lsq_unit.hh	46;"	d
__CPU_O3_LSQ_UNIT_IMPL_HH__	lsq_unit_impl.hh	47;"	d
__CPU_O3_MEM_DEP_UNIT_HH__	mem_dep_unit.hh	44;"	d
__CPU_O3_MEM_DEP_UNIT_IMPL_HH__	mem_dep_unit_impl.hh	44;"	d
__CPU_O3_PROBE_ELASTIC_TRACE_HH__	probe/elastic_trace.hh	51;"	d
__CPU_O3_PROBE_SIMPLE_TRACE_HH__	probe/simple_trace.hh	47;"	d
__CPU_O3_REGFILE_HH__	regfile.hh	46;"	d
__CPU_O3_RENAME_HH__	rename.hh	45;"	d
__CPU_O3_RENAME_IMPL_HH__	rename_impl.hh	46;"	d
__CPU_O3_RENAME_MAP_HH__	rename_map.hh	46;"	d
__CPU_O3_ROB_HH__	rob.hh	45;"	d
__CPU_O3_ROB_IMPL_HH__	rob_impl.hh	45;"	d
__CPU_O3_SCOREBOARD_HH__	scoreboard.hh	35;"	d
__CPU_O3_STORE_SET_HH__	store_set.hh	32;"	d
__CPU_O3_THREAD_CONTEXT_HH__	thread_context.hh	45;"	d
__CPU_O3_THREAD_CONTEXT_IMPL_HH__	thread_context_impl.hh	46;"	d
__CPU_O3_THREAD_STATE_HH__	thread_state.hh	44;"	d
_defaultNumPhysCCRegs	O3CPU.py	/^    _defaultNumPhysCCRegs = 0$/;"	v	class:DerivO3CPU
_destMiscRegIdx	dyn_inst.hh	/^    std::array<short, TheISA::MaxMiscDestRegs> _destMiscRegIdx;$/;"	m	class:BaseO3DynInst
_name	free_list.hh	/^    const std::string _name;$/;"	m	class:UnifiedFreeList
_name	mem_dep_unit.hh	/^    std::string _name;$/;"	m	class:MemDepUnit
_name	scoreboard.hh	/^    const std::string _name;$/;"	m	class:Scoreboard
_nextStatus	commit.hh	/^    CommitStatus _nextStatus;$/;"	m	class:DefaultCommit
_numDestMiscRegs	dyn_inst.hh	/^    uint8_t _numDestMiscRegs;$/;"	m	class:BaseO3DynInst
_status	commit.hh	/^    CommitStatus _status;$/;"	m	class:DefaultCommit
_status	cpu.hh	/^    Status _status;$/;"	m	class:FullO3CPU
_status	decode.hh	/^    DecodeStatus _status;$/;"	m	class:DefaultDecode
_status	fetch.hh	/^    FetchStatus _status;$/;"	m	class:DefaultFetch
_status	iew.hh	/^    Status _status;$/;"	m	class:DefaultIEW
_status	rename.hh	/^    RenameStatus _status;$/;"	m	class:DefaultRename
activate	thread_context_impl.hh	/^O3ThreadContext<Impl>::activate()$/;"	f	class:O3ThreadContext
activateContext	cpu.cc	/^FullO3CPU<Impl>::activateContext(ThreadID tid)$/;"	f	class:FullO3CPU
activateStage	cpu.hh	/^    void activateStage(const StageIdx idx)$/;"	f	class:FullO3CPU
activateStage	iew_impl.hh	/^DefaultIEW<Impl>::activateStage()$/;"	f	class:DefaultIEW
activateThread	cpu.cc	/^FullO3CPU<Impl>::activateThread(ThreadID tid)$/;"	f	class:FullO3CPU
activeThreads	commit.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultCommit
activeThreads	cpu.hh	/^    std::list<ThreadID> activeThreads;$/;"	m	class:FullO3CPU
activeThreads	decode.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultDecode
activeThreads	fetch.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultFetch
activeThreads	iew.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultIEW
activeThreads	inst_queue.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:InstructionQueue
activeThreads	lsq.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:LSQ
activeThreads	rename.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultRename
activeThreads	rob.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:ROB
activity	O3CPU.py	/^    activity = Param.Unsigned(0, "Initial count")$/;"	v	class:DerivO3CPU
activityRec	cpu.hh	/^    ActivityRecorder activityRec;$/;"	m	class:FullO3CPU
activityThisCycle	cpu.hh	/^    void activityThisCycle() { activityRec.activity(); }$/;"	f	class:FullO3CPU
activityThisCycle	iew_impl.hh	/^DefaultIEW<Impl>::activityThisCycle()$/;"	f	class:DefaultIEW
addCCReg	free_list.hh	/^    void addCCReg(PhysRegIdPtr freed_reg) { ccList.addReg(freed_reg); }$/;"	f	class:UnifiedFreeList
addCheckerCpu	O3CPU.py	/^    def addCheckerCpu(self):$/;"	m	class:DerivO3CPU
addCommittedInst	probe/elastic_trace.cc	/^ElasticTrace::addCommittedInst(const DynInstPtr &head_inst)$/;"	f	class:ElasticTrace
addDepTraceRecord	probe/elastic_trace.cc	/^ElasticTrace::addDepTraceRecord(const DynInstPtr &head_inst,$/;"	f	class:ElasticTrace
addFU	fu_pool.cc	/^FUPool::FUIdxQueue::addFU(int fu_idx)$/;"	f	class:FUPool::FUIdxQueue
addFloatReg	free_list.hh	/^    void addFloatReg(PhysRegIdPtr freed_reg) { floatList.addReg(freed_reg); }$/;"	f	class:UnifiedFreeList
addIfReady	inst_queue_impl.hh	/^InstructionQueue<Impl>::addIfReady(DynInstPtr &inst)$/;"	f	class:InstructionQueue
addInst	cpu.cc	/^FullO3CPU<Impl>::addInst(DynInstPtr &inst)$/;"	f	class:FullO3CPU
addIntReg	free_list.hh	/^    void addIntReg(PhysRegIdPtr freed_reg) { intList.addReg(freed_reg); }$/;"	f	class:UnifiedFreeList
addReadyMemInst	inst_queue_impl.hh	/^InstructionQueue<Impl>::addReadyMemInst(DynInstPtr &ready_inst)$/;"	f	class:InstructionQueue
addReg	free_list.hh	/^    void addReg(PhysRegIdPtr reg) { freeRegs.push(reg); }$/;"	f	class:SimpleFreeList
addReg	free_list.hh	/^UnifiedFreeList::addReg(PhysRegIdPtr freed_reg)$/;"	f	class:UnifiedFreeList
addRegs	free_list.hh	/^    addRegs(InputIt first, InputIt last) {$/;"	f	class:SimpleFreeList
addRegs	free_list.hh	/^UnifiedFreeList::addRegs(InputIt first, InputIt last)$/;"	f	class:UnifiedFreeList
addSquashedInst	probe/elastic_trace.cc	/^ElasticTrace::addSquashedInst(const DynInstPtr &head_inst)$/;"	f	class:ElasticTrace
addToDependents	inst_queue_impl.hh	/^InstructionQueue<Impl>::addToDependents(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
addToOrderList	inst_queue_impl.hh	/^InstructionQueue<Impl>::addToOrderList(OpClass op_class)$/;"	f	class:InstructionQueue
addToProducers	inst_queue_impl.hh	/^InstructionQueue<Impl>::addToProducers(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
addVecElem	free_list.hh	/^    void addVecElem(PhysRegIdPtr freed_reg) {$/;"	f	class:UnifiedFreeList
addVecReg	free_list.hh	/^    void addVecReg(PhysRegIdPtr freed_reg) { vecList.addReg(freed_reg); }$/;"	f	class:UnifiedFreeList
allProbesReg	probe/elastic_trace.hh	/^    bool allProbesReg;$/;"	m	class:ElasticTrace
archReg	rename.hh	/^        RegId archReg;$/;"	m	struct:DefaultRename::RenameHistory
asid	probe/elastic_trace.hh	/^        uint32_t asid;$/;"	m	struct:ElasticTrace::TraceInfo
assignRobDep	probe/elastic_trace.cc	/^ElasticTrace::assignRobDep(TraceInfo* past_record, TraceInfo* new_record) {$/;"	f	class:ElasticTrace
avoidQuiesceLiveLock	commit.hh	/^    bool avoidQuiesceLiveLock;$/;"	m	class:DefaultCommit
backComSize	O3CPU.py	/^    backComSize = Param.Unsigned(5, "Time buffer size for backwards communication")$/;"	v	class:DerivO3CPU
bdelayDoneSeqNum	decode.hh	/^    Addr bdelayDoneSeqNum[Impl::MaxThreads];$/;"	m	class:DefaultDecode
begin	rename_map.hh	/^    const_iterator begin() const { return map.begin(); }$/;"	f	class:SimpleRenameMap
begin	rename_map.hh	/^    iterator begin() { return map.begin(); }$/;"	f	class:SimpleRenameMap
block	decode_impl.hh	/^DefaultDecode<Impl>::block(ThreadID tid)$/;"	f	class:DefaultDecode
block	iew_impl.hh	/^DefaultIEW<Impl>::block(ThreadID tid)$/;"	f	class:DefaultIEW
block	rename_impl.hh	/^DefaultRename<Impl>::block(ThreadID tid)$/;"	f	class:DefaultRename
blockMemInst	iew_impl.hh	/^DefaultIEW<Impl>::blockMemInst(DynInstPtr& inst)$/;"	f	class:DefaultIEW
blockMemInst	inst_queue_impl.hh	/^InstructionQueue<Impl>::blockMemInst(DynInstPtr &blocked_inst)$/;"	f	class:InstructionQueue
blockThisCycle	rename.hh	/^    bool blockThisCycle;$/;"	m	class:DefaultRename
blockedMemInsts	inst_queue.hh	/^    std::list<DynInstPtr> blockedMemInsts;$/;"	m	class:InstructionQueue
branchAddr	comm.hh	/^        uint64_t branchAddr;$/;"	m	struct:TimeBufStruct::decodeComm
branchCount	comm.hh	/^        unsigned branchCount;$/;"	m	struct:TimeBufStruct::decodeComm
branchCount	fetch_impl.hh	/^DefaultFetch<Impl>::branchCount()$/;"	f	class:DefaultFetch
branchMispredict	comm.hh	/^        bool branchMispredict;$/;"	m	struct:TimeBufStruct::decodeComm
branchMispredict	comm.hh	/^    bool branchMispredict[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
branchMispredicts	commit.hh	/^    Stats::Scalar branchMispredicts;$/;"	m	class:DefaultCommit
branchMispredicts	iew.hh	/^    Stats::Formula branchMispredicts;$/;"	m	class:DefaultIEW
branchPred	O3CPU.py	/^    branchPred = Param.BranchPredictor(TournamentBP(numThreads =$/;"	v	class:DerivO3CPU
branchPred	fetch.hh	/^    BPredUnit *branchPred;$/;"	m	class:DefaultFetch
branchRate	fetch.hh	/^    Stats::Formula branchRate;$/;"	m	class:DefaultFetch
branchTaken	comm.hh	/^        bool branchTaken; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
branchTaken	comm.hh	/^        bool branchTaken;$/;"	m	struct:TimeBufStruct::decodeComm
branchTaken	comm.hh	/^    bool branchTaken[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
buildInst	fetch_impl.hh	/^DefaultFetch<Impl>::buildInst(ThreadID tid, StaticInstPtr staticInst,$/;"	f	class:DefaultFetch
cacheBlkSize	fetch.hh	/^    unsigned int cacheBlkSize;$/;"	m	class:DefaultFetch
cacheBlockMask	lsq_unit.hh	/^    Addr cacheBlockMask;$/;"	m	class:LSQUnit
cacheBlocked	fetch.hh	/^    bool cacheBlocked;$/;"	m	class:DefaultFetch
cacheBlocked	lsq_unit.hh	/^        bool cacheBlocked;$/;"	m	class:LSQUnit::LSQSenderState
cacheStorePorts	O3CPU.py	/^    cacheStorePorts = Param.Unsigned(200, "Cache Ports. "$/;"	v	class:DerivO3CPU
cacheStorePorts	lsq_unit.hh	/^    int cacheStorePorts;$/;"	m	class:LSQUnit
cacheUnblocked	iew_impl.hh	/^DefaultIEW<Impl>::cacheUnblocked()$/;"	f	class:DefaultIEW
cacheUnblocked	inst_queue_impl.hh	/^InstructionQueue<Impl>::cacheUnblocked()$/;"	f	class:InstructionQueue
calcEA	dyn_inst.hh	/^    Fault calcEA()$/;"	f	class:BaseO3DynInst
calcFreeIQEntries	rename_impl.hh	/^DefaultRename<Impl>::calcFreeIQEntries(ThreadID tid)$/;"	f	class:DefaultRename
calcFreeLQEntries	rename_impl.hh	/^DefaultRename<Impl>::calcFreeLQEntries(ThreadID tid)$/;"	f	class:DefaultRename
calcFreeROBEntries	rename_impl.hh	/^DefaultRename<Impl>::calcFreeROBEntries(ThreadID tid)$/;"	f	class:DefaultRename
calcFreeSQEntries	rename_impl.hh	/^DefaultRename<Impl>::calcFreeSQEntries(ThreadID tid)$/;"	f	class:DefaultRename
calcIndex	store_set.hh	/^    inline int calcIndex(Addr PC)$/;"	f	class:StoreSet
calcSSID	store_set.hh	/^    inline SSID calcSSID(Addr PC)$/;"	f	class:StoreSet
canCommit	rob_impl.hh	/^ROB<Impl>::canCommit()$/;"	f	class:ROB
canHandleInterrupts	commit.hh	/^    bool canHandleInterrupts;$/;"	m	class:DefaultCommit
canRename	rename_map.hh	/^    bool canRename(uint32_t intRegs, uint32_t floatRegs, uint32_t vectorRegs,$/;"	f	class:UnifiedRenameMap
canWB	lsq_unit.hh	/^        bool canWB;$/;"	m	struct:LSQUnit::SQEntry
capabilityList	fu_pool.hh	/^    std::bitset<Num_OpClasses> capabilityList;$/;"	m	class:FUPool
cbegin	rename_map.hh	/^    const_iterator cbegin() const { return map.cbegin(); }$/;"	f	class:SimpleRenameMap
ccList	free_list.hh	/^    SimpleFreeList ccList;$/;"	m	class:UnifiedFreeList
ccMap	rename_map.hh	/^    SimpleRenameMap ccMap;$/;"	m	class:UnifiedRenameMap
ccRegFile	regfile.hh	/^    std::vector<CCReg> ccRegFile;$/;"	m	class:PhysRegFile
ccRegIds	regfile.hh	/^    std::vector<PhysRegId> ccRegIds;$/;"	m	class:PhysRegFile
ccRegfileReads	cpu.hh	/^    Stats::Scalar ccRegfileReads;$/;"	m	class:FullO3CPU
ccRegfileWrites	cpu.hh	/^    Stats::Scalar ccRegfileWrites;$/;"	m	class:FullO3CPU
cend	rename_map.hh	/^    const_iterator cend() const { return map.cend(); }$/;"	f	class:SimpleRenameMap
changedROBEntries	commit_impl.hh	/^DefaultCommit<Impl>::changedROBEntries()$/;"	f	class:DefaultCommit
changedROBNumEntries	commit.hh	/^    bool changedROBNumEntries[Impl::MaxThreads];$/;"	m	class:DefaultCommit
checkClear	store_set.cc	/^StoreSet::checkClear()$/;"	f	class:StoreSet
checkEmptyROB	commit.hh	/^    bool checkEmptyROB[Impl::MaxThreads];$/;"	m	class:DefaultCommit
checkInst	store_set.cc	/^StoreSet::checkInst(Addr PC)$/;"	f	class:StoreSet
checkInterrupt	fetch.hh	/^    checkInterrupt(Addr pc)$/;"	f	class:DefaultFetch
checkLoads	lsq_unit.hh	/^    bool checkLoads;$/;"	m	class:LSQUnit
checkMisprediction	iew_impl.hh	/^DefaultIEW<Impl>::checkMisprediction(DynInstPtr &inst)$/;"	f	class:DefaultIEW
checkSignalsAndUpdate	decode_impl.hh	/^DefaultDecode<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultDecode
checkSignalsAndUpdate	fetch_impl.hh	/^DefaultFetch<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultFetch
checkSignalsAndUpdate	iew_impl.hh	/^DefaultIEW<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultIEW
checkSignalsAndUpdate	rename_impl.hh	/^DefaultRename<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultRename
checkSnoop	lsq_unit_impl.hh	/^LSQUnit<Impl>::checkSnoop(PacketPtr pkt)$/;"	f	class:LSQUnit
checkStall	decode_impl.hh	/^DefaultDecode<Impl>::checkStall(ThreadID tid) const$/;"	f	class:DefaultDecode
checkStall	fetch_impl.hh	/^DefaultFetch<Impl>::checkStall(ThreadID tid) const$/;"	f	class:DefaultFetch
checkStall	iew_impl.hh	/^DefaultIEW<Impl>::checkStall(ThreadID tid)$/;"	f	class:DefaultIEW
checkStall	rename_impl.hh	/^DefaultRename<Impl>::checkStall(ThreadID tid)$/;"	f	class:DefaultRename
checkViolations	lsq_unit_impl.hh	/^LSQUnit<Impl>::checkViolations(int load_idx, DynInstPtr &inst)$/;"	f	class:LSQUnit
checker	cpu.hh	/^    Checker<Impl> *checker;$/;"	m	class:FullO3CPU
cleanUpRemovedInsts	cpu.cc	/^FullO3CPU<Impl>::cleanUpRemovedInsts()$/;"	f	class:FullO3CPU
clear	store_set.cc	/^StoreSet::clear()$/;"	f	class:StoreSet
clearArchRegs	thread_context_impl.hh	/^O3ThreadContext<Impl>::clearArchRegs()$/;"	f	class:O3ThreadContext
clearFetchFault	comm.hh	/^    bool clearFetchFault;$/;"	m	struct:DefaultFetchDefaultDecode
clearInst	dep_graph.hh	/^    void clearInst(PhysRegIndex idx)$/;"	f	class:DependencyGraph
clearInterrupt	comm.hh	/^        bool clearInterrupt; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
clearLQ	lsq_unit_impl.hh	/^LSQUnit<Impl>::clearLQ()$/;"	f	class:LSQUnit
clearPeriod	store_set.hh	/^    uint64_t clearPeriod;$/;"	m	class:StoreSet
clearSQ	lsq_unit_impl.hh	/^LSQUnit<Impl>::clearSQ()$/;"	f	class:LSQUnit
clearTempStoreUntil	probe/elastic_trace.cc	/^ElasticTrace::clearTempStoreUntil(const DynInstPtr head_inst)$/;"	f	class:ElasticTrace
commit	commit_impl.hh	/^DefaultCommit<Impl>::commit()$/;"	f	class:DefaultCommit
commit	cpu.hh	/^    typename CPUPolicy::Commit commit;$/;"	m	class:FullO3CPU
commit	inst_queue_impl.hh	/^InstructionQueue<Impl>::commit(const InstSeqNum &inst, ThreadID tid)$/;"	f	class:InstructionQueue
commit	probe/elastic_trace.hh	/^        bool commit;$/;"	m	struct:ElasticTrace::TraceInfo
commit	rename.hh	/^        bool commit;$/;"	m	struct:DefaultRename::Stalls
commitComm	comm.hh	/^    struct commitComm {$/;"	s	struct:TimeBufStruct
commitDrained	cpu.cc	/^FullO3CPU<Impl>::commitDrained(ThreadID tid)$/;"	f	class:FullO3CPU
commitEligibleSamples	commit.hh	/^    Stats::Scalar commitEligibleSamples;$/;"	m	class:DefaultCommit
commitHead	commit_impl.hh	/^DefaultCommit<Impl>::commitHead(DynInstPtr &head_inst, unsigned inst_num)$/;"	f	class:DefaultCommit
commitInfo	comm.hh	/^    commitComm commitInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
commitInsts	commit_impl.hh	/^DefaultCommit<Impl>::commitInsts()$/;"	f	class:DefaultCommit
commitLoad	lsq_unit_impl.hh	/^LSQUnit<Impl>::commitLoad()$/;"	f	class:LSQUnit
commitLoads	lsq.hh	/^    void commitLoads(InstSeqNum &youngest_inst, ThreadID tid)$/;"	f	class:LSQ
commitLoads	lsq_unit_impl.hh	/^LSQUnit<Impl>::commitLoads(InstSeqNum &youngest_inst)$/;"	f	class:LSQUnit
commitNonSpecStalls	commit.hh	/^    Stats::Scalar commitNonSpecStalls;$/;"	m	class:DefaultCommit
commitPolicy	commit.hh	/^    CommitPolicy commitPolicy;$/;"	m	class:DefaultCommit
commitRenameMap	cpu.hh	/^    typename CPUPolicy::RenameMap commitRenameMap[Impl::MaxThreads];$/;"	m	class:FullO3CPU
commitSquashedInsts	commit.hh	/^    Stats::Scalar commitSquashedInsts;$/;"	m	class:DefaultCommit
commitStatus	commit.hh	/^    ThreadStatus commitStatus[Impl::MaxThreads];$/;"	m	class:DefaultCommit
commitStores	lsq.hh	/^    void commitStores(InstSeqNum &youngest_inst, ThreadID tid)$/;"	f	class:LSQ
commitStores	lsq_unit_impl.hh	/^LSQUnit<Impl>::commitStores(InstSeqNum &youngest_inst)$/;"	f	class:LSQUnit
commitTick	dyn_inst.hh	/^    int32_t commitTick;$/;"	m	class:BaseO3DynInst
commitTick	probe/elastic_trace.hh	/^        Tick commitTick;$/;"	m	struct:ElasticTrace::TraceInfo
commitToDecodeDelay	O3CPU.py	/^    commitToDecodeDelay = Param.Cycles(1, "Commit to decode delay")$/;"	v	class:DerivO3CPU
commitToDecodeDelay	decode.hh	/^    Cycles commitToDecodeDelay;$/;"	m	class:DefaultDecode
commitToFetchDelay	O3CPU.py	/^    commitToFetchDelay = Param.Cycles(1, "Commit to fetch delay")$/;"	v	class:DerivO3CPU
commitToFetchDelay	fetch.hh	/^    Cycles commitToFetchDelay;$/;"	m	class:DefaultFetch
commitToIEWDelay	O3CPU.py	/^    commitToIEWDelay = Param.Cycles(1, "Commit to "$/;"	v	class:DerivO3CPU
commitToIEWDelay	commit.hh	/^    const Cycles commitToIEWDelay;$/;"	m	class:DefaultCommit
commitToIEWDelay	iew.hh	/^    Cycles commitToIEWDelay;$/;"	m	class:DefaultIEW
commitToIEWDelay	inst_queue.hh	/^    Cycles commitToIEWDelay;$/;"	m	class:InstructionQueue
commitToRenameDelay	O3CPU.py	/^    commitToRenameDelay = Param.Cycles(1, "Commit to rename delay")$/;"	v	class:DerivO3CPU
commitToRenameDelay	rename.hh	/^    unsigned commitToRenameDelay;$/;"	m	class:DefaultRename
commitWidth	O3CPU.py	/^    commitWidth = Param.Unsigned(8, "Commit width")$/;"	v	class:DerivO3CPU
commitWidth	commit.hh	/^    const unsigned commitWidth;$/;"	m	class:DefaultCommit
commitWidth	rename.hh	/^    unsigned commitWidth;$/;"	m	class:DefaultRename
commit_ptr	rename.hh	/^    Commit *commit_ptr;$/;"	m	class:DefaultRename
committed	lsq_unit.hh	/^        bool committed;$/;"	m	struct:LSQUnit::SQEntry
committedInsts	cpu.hh	/^    Stats::Vector committedInsts;$/;"	m	class:FullO3CPU
committedOps	cpu.hh	/^    Stats::Vector committedOps;$/;"	m	class:FullO3CPU
committedStores	commit.hh	/^    bool committedStores[Impl::MaxThreads];$/;"	m	class:DefaultCommit
compDelay	probe/elastic_trace.hh	/^        int64_t compDelay;$/;"	m	struct:ElasticTrace::TraceInfo
compDelayPhysRegDep	probe/elastic_trace.cc	/^ElasticTrace::compDelayPhysRegDep(TraceInfo* past_record,$/;"	f	class:ElasticTrace
compDelayRob	probe/elastic_trace.cc	/^ElasticTrace::compDelayRob(TraceInfo* past_record, TraceInfo* new_record)$/;"	f	class:ElasticTrace
complete	lsq_unit.hh	/^        inline bool complete() { return --outstanding == 0; }$/;"	f	class:LSQUnit::LSQSenderState
completeAcc	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::completeAcc(PacketPtr pkt)$/;"	f	class:BaseO3DynInst
completeBarrier	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::completeBarrier(DynInstPtr &inst)$/;"	f	class:MemDepUnit
completeDataAccess	lsq_unit_impl.hh	/^LSQUnit<Impl>::completeDataAccess(PacketPtr pkt)$/;"	f	class:LSQUnit
completeMemInst	inst_queue_impl.hh	/^InstructionQueue<Impl>::completeMemInst(DynInstPtr &completed_inst)$/;"	f	class:InstructionQueue
completeStore	lsq_unit_impl.hh	/^LSQUnit<Impl>::completeStore(int store_idx)$/;"	f	class:LSQUnit
completeTick	dyn_inst.hh	/^    int32_t completeTick;$/;"	m	class:BaseO3DynInst
completed	lsq_unit.hh	/^        bool completed;$/;"	m	struct:LSQUnit::SQEntry
completed	mem_dep_unit.hh	/^        bool completed;$/;"	m	class:MemDepUnit::MemDepEntry
completed	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::completed(DynInstPtr &inst)$/;"	f	class:MemDepUnit
conditionalSquash	thread_context.hh	/^    inline void conditionalSquash()$/;"	f	class:O3ThreadContext
conflictingLoads	mem_dep_unit.hh	/^    Stats::Scalar conflictingLoads;$/;"	m	class:MemDepUnit
conflictingStores	mem_dep_unit.hh	/^    Stats::Scalar conflictingStores;$/;"	m	class:MemDepUnit
consumerInst	iew.hh	/^    Stats::Vector consumerInst;$/;"	m	class:DefaultIEW
contextId	thread_context.hh	/^    virtual ContextID contextId() const { return thread->contextId(); }$/;"	f	class:O3ThreadContext
copyArchRegs	thread_context_impl.hh	/^O3ThreadContext<Impl>::copyArchRegs(ThreadContext *tc)$/;"	f	class:O3ThreadContext
count	FuncUnitConfig.py	/^    count = 0$/;"	v	class:ReadPort
count	FuncUnitConfig.py	/^    count = 0$/;"	v	class:WritePort
count	FuncUnitConfig.py	/^    count = 1$/;"	v	class:IprPort
count	FuncUnitConfig.py	/^    count = 2$/;"	v	class:FP_MultDiv
count	FuncUnitConfig.py	/^    count = 4$/;"	v	class:FP_ALU
count	FuncUnitConfig.py	/^    count = 4$/;"	v	class:RdWrPort
count	FuncUnitConfig.py	/^    count = 4$/;"	v	class:SIMD_Unit
count	FuncUnitConfig.py	/^    count = 6$/;"	v	class:IntALU
count	FuncUnitConfig.py	/^    count=2$/;"	v	class:IntMultDiv
count	inst_queue.hh	/^    unsigned count[Impl::MaxThreads];$/;"	m	class:InstructionQueue
countInsts	inst_queue_impl.hh	/^InstructionQueue<Impl>::countInsts()$/;"	f	class:InstructionQueue
countInsts	rob_impl.hh	/^ROB<Impl>::countInsts()$/;"	f	class:ROB
countInsts	rob_impl.hh	/^ROB<Impl>::countInsts(ThreadID tid)$/;"	f	class:ROB
cpi	cpu.hh	/^    Stats::Formula cpi;$/;"	m	class:FullO3CPU
cpu	commit.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultCommit
cpu	cpu.hh	/^        FullO3CPU<Impl> *cpu;$/;"	m	class:FullO3CPU::DcachePort
cpu	decode.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultDecode
cpu	fetch.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultFetch
cpu	iew.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultIEW
cpu	inst_queue.hh	/^    O3CPU *cpu;$/;"	m	class:InstructionQueue
cpu	lsq.hh	/^    O3CPU *cpu;$/;"	m	class:LSQ
cpu	lsq_unit.hh	/^    O3CPU *cpu;$/;"	m	class:LSQUnit
cpu	probe/elastic_trace.hh	/^    FullO3CPU<O3CPUImpl>* cpu;$/;"	m	class:ElasticTrace
cpu	rename.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultRename
cpu	rob.hh	/^    O3CPU *cpu;$/;"	m	class:ROB
cpu	thread_context.hh	/^    O3CPU *cpu;$/;"	m	class:O3ThreadContext
cpu	thread_state.hh	/^    O3CPU *cpu;$/;"	m	struct:O3ThreadState
cpuId	thread_context.hh	/^    virtual int cpuId() const { return cpu->cpuId(); }$/;"	f	class:O3ThreadContext
cpuWaitList	cpu.hh	/^    std::list<int> cpuWaitList;$/;"	m	class:FullO3CPU
create	checker.cc	/^O3CheckerParams::create()$/;"	f	class:O3CheckerParams
create	deriv.cc	/^DerivO3CPUParams::create()$/;"	f	class:DerivO3CPUParams
create	fu_pool.cc	/^FUPoolParams::create()$/;"	f	class:FUPoolParams
create	probe/elastic_trace.cc	/^ElasticTraceParams::create()$/;"	f	class:ElasticTraceParams
create	probe/simple_trace.cc	/^SimpleTraceParams::create()$/;"	f	class:SimpleTraceParams
cxx_header	FUPool.py	/^    cxx_header = "cpu\/o3\/fu_pool.hh"$/;"	v	class:FUPool
cxx_header	O3CPU.py	/^    cxx_header = 'cpu\/o3\/deriv.hh'$/;"	v	class:DerivO3CPU
cxx_header	O3Checker.py	/^    cxx_header = 'cpu\/o3\/checker.hh'$/;"	v	class:O3Checker
cxx_header	probe/ElasticTrace.py	/^    cxx_header = 'cpu\/o3\/probe\/elastic_trace.hh'$/;"	v	class:ElasticTrace
cxx_header	probe/SimpleTrace.py	/^    cxx_header = 'cpu\/o3\/probe\/simple_trace.hh'$/;"	v	class:SimpleTrace
d	regfile.hh	/^        FloatReg d;$/;"	m	union:PhysRegFile::__anon2
data	lsq_unit.hh	/^        char data[16];$/;"	m	struct:LSQUnit::SQEntry
dataDepTraceFile	probe/ElasticTrace.py	/^                                    "data dependency tracing")$/;"	v	class:ElasticTrace
dataTraceStream	probe/elastic_trace.hh	/^    ProtoOutputStream* dataTraceStream;$/;"	m	class:ElasticTrace
dcacheInterface	inst_queue.hh	/^    MemInterface *dcacheInterface;$/;"	m	class:InstructionQueue
dcachePort	cpu.hh	/^    DcachePort dcachePort;$/;"	m	class:FullO3CPU
dcachePort	lsq_unit.hh	/^    MasterPort *dcachePort;$/;"	m	class:LSQUnit
deactivateStage	cpu.hh	/^    void deactivateStage(const StageIdx idx)$/;"	f	class:FullO3CPU
deactivateStage	iew_impl.hh	/^DefaultIEW<Impl>::deactivateStage()$/;"	f	class:DefaultIEW
deactivateThread	commit_impl.hh	/^DefaultCommit<Impl>::deactivateThread(ThreadID tid)$/;"	f	class:DefaultCommit
deactivateThread	cpu.cc	/^FullO3CPU<Impl>::deactivateThread(ThreadID tid)$/;"	f	class:FullO3CPU
deactivateThread	fetch_impl.hh	/^DefaultFetch<Impl>::deactivateThread(ThreadID tid)$/;"	f	class:DefaultFetch
decode	cpu.hh	/^    typename CPUPolicy::Decode decode;$/;"	m	class:FullO3CPU
decode	decode_impl.hh	/^DefaultDecode<Impl>::decode(bool &status_change, ThreadID tid)$/;"	f	class:DefaultDecode
decode	fetch.hh	/^        bool decode;$/;"	m	struct:DefaultFetch::Stalls
decodeBlock	comm.hh	/^    bool decodeBlock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
decodeBlockedCycles	decode.hh	/^    Stats::Scalar decodeBlockedCycles;$/;"	m	class:DefaultDecode
decodeBranchMispred	decode.hh	/^    Stats::Scalar decodeBranchMispred;$/;"	m	class:DefaultDecode
decodeBranchResolved	decode.hh	/^    Stats::Scalar decodeBranchResolved;$/;"	m	class:DefaultDecode
decodeComm	comm.hh	/^    struct decodeComm {$/;"	s	struct:TimeBufStruct
decodeControlMispred	decode.hh	/^    Stats::Scalar decodeControlMispred;$/;"	m	class:DefaultDecode
decodeDecodedInsts	decode.hh	/^    Stats::Scalar decodeDecodedInsts;$/;"	m	class:DefaultDecode
decodeIdleCycles	decode.hh	/^    Stats::Scalar decodeIdleCycles;$/;"	m	class:DefaultDecode
decodeInfo	comm.hh	/^    decodeComm decodeInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
decodeInsts	decode_impl.hh	/^DefaultDecode<Impl>::decodeInsts(ThreadID tid)$/;"	f	class:DefaultDecode
decodeQueue	cpu.hh	/^    TimeBuffer<DecodeStruct> decodeQueue;$/;"	m	class:FullO3CPU
decodeQueue	decode.hh	/^    TimeBuffer<DecodeStruct> *decodeQueue;$/;"	m	class:DefaultDecode
decodeQueue	rename.hh	/^    TimeBuffer<DecodeStruct> *decodeQueue;$/;"	m	class:DefaultRename
decodeRunCycles	decode.hh	/^    Stats::Scalar decodeRunCycles;$/;"	m	class:DefaultDecode
decodeSquashCycles	decode.hh	/^    Stats::Scalar decodeSquashCycles;$/;"	m	class:DefaultDecode
decodeSquashedInsts	decode.hh	/^    Stats::Scalar decodeSquashedInsts;$/;"	m	class:DefaultDecode
decodeStatus	decode.hh	/^    ThreadStatus decodeStatus[Impl::MaxThreads];$/;"	m	class:DefaultDecode
decodeTick	dyn_inst.hh	/^    int32_t decodeTick;  \/\/ instruction enters decode phase$/;"	m	class:BaseO3DynInst
decodeToFetchDelay	O3CPU.py	/^    decodeToFetchDelay = Param.Cycles(1, "Decode to fetch delay")$/;"	v	class:DerivO3CPU
decodeToFetchDelay	fetch.hh	/^    Cycles decodeToFetchDelay;$/;"	m	class:DefaultFetch
decodeToRenameDelay	O3CPU.py	/^    decodeToRenameDelay = Param.Cycles(1, "Decode to rename delay")$/;"	v	class:DerivO3CPU
decodeToRenameDelay	rename.hh	/^    int decodeToRenameDelay;$/;"	m	class:DefaultRename
decodeUnblock	comm.hh	/^    bool decodeUnblock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
decodeUnblockCycles	decode.hh	/^    Stats::Scalar decodeUnblockCycles;$/;"	m	class:DefaultDecode
decodeWidth	O3CPU.py	/^    decodeWidth = Param.Unsigned(8, "Decode width")$/;"	v	class:DerivO3CPU
decodeWidth	decode.hh	/^    unsigned decodeWidth;$/;"	m	class:DefaultDecode
decodeWidth	fetch.hh	/^    unsigned decodeWidth;$/;"	m	class:DefaultFetch
decoder	fetch.hh	/^    TheISA::Decoder *decoder[Impl::MaxThreads];$/;"	m	class:DefaultFetch
decrLdIdx	lsq_unit_impl.hh	/^LSQUnit<Impl>::decrLdIdx(int &load_idx) const$/;"	f	class:LSQUnit
decrStIdx	lsq_unit_impl.hh	/^LSQUnit<Impl>::decrStIdx(int &store_idx) const$/;"	f	class:LSQUnit
deferMemInst	inst_queue_impl.hh	/^InstructionQueue<Impl>::deferMemInst(DynInstPtr &deferred_inst)$/;"	f	class:InstructionQueue
deferredMemInsts	inst_queue.hh	/^    std::list<DynInstPtr> deferredMemInsts;$/;"	m	class:InstructionQueue
delayedCommit	fetch.hh	/^    bool delayedCommit[Impl::MaxThreads];$/;"	m	class:DefaultFetch
demapDataPage	cpu.hh	/^    void demapDataPage(Addr vaddr, uint64_t asn)$/;"	f	class:FullO3CPU
demapInstPage	cpu.hh	/^    void demapInstPage(Addr vaddr, uint64_t asn)$/;"	f	class:FullO3CPU
demapPage	cpu.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:FullO3CPU
depCheckShift	lsq_unit.hh	/^    unsigned depCheckShift;$/;"	m	class:LSQUnit
depPred	mem_dep_unit.hh	/^    MemDepPred depPred;$/;"	m	class:MemDepUnit
depTrace	probe/elastic_trace.hh	/^    std::vector<TraceInfo*> depTrace;$/;"	m	class:ElasticTrace
depTraceItr	probe/elastic_trace.hh	/^    typedef typename std::vector<TraceInfo*>::iterator depTraceItr;$/;"	t	class:ElasticTrace
depTraceRevItr	probe/elastic_trace.hh	/^    typedef typename std::reverse_iterator<depTraceItr> depTraceRevItr;$/;"	t	class:ElasticTrace
depWindowSize	probe/ElasticTrace.py	/^                                    "dependencies")$/;"	v	class:ElasticTrace
depWindowSize	probe/elastic_trace.hh	/^    uint32_t depWindowSize;$/;"	m	class:ElasticTrace
dependGraph	dep_graph.hh	/^    DepEntry *dependGraph;$/;"	m	class:DependencyGraph
dependGraph	inst_queue.hh	/^    DependencyGraph<DynInstPtr> dependGraph;$/;"	m	class:InstructionQueue
dependInsts	mem_dep_unit.hh	/^        std::vector<MemDepEntryPtr> dependInsts;$/;"	m	class:MemDepUnit::MemDepEntry
description	fetch.hh	/^        const char *description() const$/;"	f	class:DefaultFetch::FinishTranslationEvent
description	inst_queue_impl.hh	/^InstructionQueue<Impl>::FUCompletion::description() const$/;"	f	class:InstructionQueue::FUCompletion
description	lsq_unit_impl.hh	/^LSQUnit<Impl>::WritebackEvent::description() const$/;"	f	class:LSQUnit::WritebackEvent
dispatch	iew_impl.hh	/^DefaultIEW<Impl>::dispatch(ThreadID tid)$/;"	f	class:DefaultIEW
dispatchInsts	iew_impl.hh	/^DefaultIEW<Impl>::dispatchInsts(ThreadID tid)$/;"	f	class:DefaultIEW
dispatchStatus	iew.hh	/^    StageStatus dispatchStatus[Impl::MaxThreads];$/;"	m	class:DefaultIEW
dispatchTick	dyn_inst.hh	/^    int32_t dispatchTick;$/;"	m	class:BaseO3DynInst
dispatchWidth	O3CPU.py	/^    dispatchWidth = Param.Unsigned(8, "Dispatch width")$/;"	v	class:DerivO3CPU
dispatchWidth	iew.hh	/^    unsigned dispatchWidth;$/;"	m	class:DefaultIEW
dispatched	comm.hh	/^        unsigned dispatched;$/;"	m	struct:TimeBufStruct::iewComm
dispatchedToLQ	comm.hh	/^        unsigned dispatchedToLQ;$/;"	m	struct:TimeBufStruct::iewComm
dispatchedToSQ	comm.hh	/^        unsigned dispatchedToSQ;$/;"	m	struct:TimeBufStruct::iewComm
doSquash	fetch_impl.hh	/^DefaultFetch<Impl>::doSquash(const TheISA::PCState &newPC,$/;"	f	class:DefaultFetch
doSquash	inst_queue_impl.hh	/^InstructionQueue<Impl>::doSquash(ThreadID tid)$/;"	f	class:InstructionQueue
doSquash	rename_impl.hh	/^DefaultRename<Impl>::doSquash(const InstSeqNum &squashed_seq_num, ThreadID tid)$/;"	f	class:DefaultRename
doSquash	rob_impl.hh	/^ROB<Impl>::doSquash(ThreadID tid)$/;"	f	class:ROB
doneSeqNum	comm.hh	/^        InstSeqNum doneSeqNum; \/\/ *F, I$/;"	m	struct:TimeBufStruct::commitComm
doneSeqNum	comm.hh	/^        InstSeqNum doneSeqNum;$/;"	m	struct:TimeBufStruct::decodeComm
doneSquashing	rob.hh	/^    bool doneSquashing[Impl::MaxThreads];$/;"	m	class:ROB
drain	commit_impl.hh	/^DefaultCommit<Impl>::drain()$/;"	f	class:DefaultCommit
drain	cpu.cc	/^FullO3CPU<Impl>::drain()$/;"	f	class:FullO3CPU
drain	fetch.hh	/^        bool drain;$/;"	m	struct:DefaultFetch::Stalls
drainImminent	commit.hh	/^    bool drainImminent;$/;"	m	class:DefaultCommit
drainPending	commit.hh	/^    bool drainPending;$/;"	m	class:DefaultCommit
drainResume	commit_impl.hh	/^DefaultCommit<Impl>::drainResume()$/;"	f	class:DefaultCommit
drainResume	cpu.cc	/^FullO3CPU<Impl>::drainResume()$/;"	f	class:FullO3CPU
drainResume	fetch_impl.hh	/^DefaultFetch<Impl>::drainResume()$/;"	f	class:DefaultFetch
drainSanityCheck	commit_impl.hh	/^DefaultCommit<Impl>::drainSanityCheck() const$/;"	f	class:DefaultCommit
drainSanityCheck	cpu.cc	/^FullO3CPU<Impl>::drainSanityCheck() const$/;"	f	class:FullO3CPU
drainSanityCheck	decode_impl.hh	/^DefaultDecode<Impl>::drainSanityCheck() const$/;"	f	class:DefaultDecode
drainSanityCheck	fetch_impl.hh	/^DefaultFetch<Impl>::drainSanityCheck() const$/;"	f	class:DefaultFetch
drainSanityCheck	iew_impl.hh	/^DefaultIEW<Impl>::drainSanityCheck() const$/;"	f	class:DefaultIEW
drainSanityCheck	inst_queue_impl.hh	/^InstructionQueue<Impl>::drainSanityCheck() const$/;"	f	class:InstructionQueue
drainSanityCheck	lsq_impl.hh	/^LSQ<Impl>::drainSanityCheck() const$/;"	f	class:LSQ
drainSanityCheck	lsq_unit_impl.hh	/^LSQUnit<Impl>::drainSanityCheck() const$/;"	f	class:LSQUnit
drainSanityCheck	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::drainSanityCheck() const$/;"	f	class:MemDepUnit
drainSanityCheck	rename_impl.hh	/^DefaultRename<Impl>::drainSanityCheck() const$/;"	f	class:DefaultRename
drainSanityCheck	rob_impl.hh	/^ROB<Impl>::drainSanityCheck() const$/;"	f	class:ROB
drainStall	fetch_impl.hh	/^DefaultFetch<Impl>::drainStall(ThreadID tid)$/;"	f	class:DefaultFetch
dtb	cpu.hh	/^    TheISA::TLB * dtb;$/;"	m	class:FullO3CPU
dummyInst	rob.hh	/^    DynInstPtr dummyInst;$/;"	m	class:ROB
dump	dep_graph.hh	/^DependencyGraph<DynInstPtr>::dump()$/;"	f	class:DependencyGraph
dump	fu_pool.cc	/^FUPool::dump()$/;"	f	class:FUPool
dump	store_set.cc	/^StoreSet::dump()$/;"	f	class:StoreSet
dumpFuncProfile	thread_context_impl.hh	/^O3ThreadContext<Impl>::dumpFuncProfile()$/;"	f	class:O3ThreadContext
dumpFuncProfile	thread_state.hh	/^    void dumpFuncProfile()$/;"	f	struct:O3ThreadState
dumpHistory	rename_impl.hh	/^DefaultRename<Impl>::dumpHistory()$/;"	f	class:DefaultRename
dumpInsts	cpu.cc	/^FullO3CPU<Impl>::dumpInsts()$/;"	f	class:FullO3CPU
dumpInsts	inst_queue_impl.hh	/^InstructionQueue<Impl>::dumpInsts()$/;"	f	class:InstructionQueue
dumpInsts	lsq.hh	/^    void dumpInsts(ThreadID tid) const$/;"	f	class:LSQ
dumpInsts	lsq_impl.hh	/^LSQ<Impl>::dumpInsts() const$/;"	f	class:LSQ
dumpInsts	lsq_unit_impl.hh	/^LSQUnit<Impl>::dumpInsts() const$/;"	f	class:LSQUnit
dumpLists	inst_queue_impl.hh	/^InstructionQueue<Impl>::dumpLists()$/;"	f	class:InstructionQueue
dumpLists	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::dumpLists()$/;"	f	class:MemDepUnit
elemId	comm.hh	/^    static PhysRegId elemId(const PhysRegId* vid, ElemIndex elem)$/;"	f	class:PhysRegId
empty	dep_graph.hh	/^    bool empty(PhysRegIndex idx) const { return !dependGraph[idx].next; }$/;"	f	class:DependencyGraph
empty	dep_graph.hh	/^DependencyGraph<DynInstPtr>::empty() const$/;"	f	class:DependencyGraph
emptyROB	comm.hh	/^        bool emptyROB; \/\/ *R$/;"	m	struct:TimeBufStruct::commitComm
emptyROB	rename.hh	/^    bool emptyROB[Impl::MaxThreads];$/;"	m	class:DefaultRename
emptyRenameInsts	iew_impl.hh	/^DefaultIEW<Impl>::emptyRenameInsts(ThreadID tid)$/;"	f	class:DefaultIEW
end	rename_map.hh	/^    const_iterator end() const { return map.end(); }$/;"	f	class:SimpleRenameMap
end	rename_map.hh	/^    iterator end() { return map.end(); }$/;"	f	class:SimpleRenameMap
entryAmount	inst_queue_impl.hh	/^InstructionQueue<Impl>::entryAmount(ThreadID num_threads)$/;"	f	class:InstructionQueue
entryAmount	lsq_impl.hh	/^LSQ<Impl>::entryAmount(ThreadID num_threads)$/;"	f	class:LSQ
entryAmount	rob_impl.hh	/^ROB<Impl>::entryAmount(ThreadID num_threads)$/;"	f	class:ROB
exeStatus	iew.hh	/^    StageStatus exeStatus;$/;"	m	class:DefaultIEW
execute	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::execute()$/;"	f	class:BaseO3DynInst
executeInsts	iew_impl.hh	/^DefaultIEW<Impl>::executeInsts()$/;"	f	class:DefaultIEW
executeLoad	lsq_impl.hh	/^LSQ<Impl>::executeLoad(DynInstPtr &inst)$/;"	f	class:LSQ
executeLoad	lsq_unit.hh	/^    Fault executeLoad(int lq_idx) { panic("Not implemented"); return NoFault; }$/;"	f	class:LSQUnit
executeLoad	lsq_unit_impl.hh	/^LSQUnit<Impl>::executeLoad(DynInstPtr &inst)$/;"	f	class:LSQUnit
executeStore	lsq_impl.hh	/^LSQ<Impl>::executeStore(DynInstPtr &inst)$/;"	f	class:LSQ
executeStore	lsq_unit_impl.hh	/^LSQUnit<Impl>::executeStore(DynInstPtr &store_inst)$/;"	f	class:LSQUnit
executeTick	probe/elastic_trace.hh	/^        Tick executeTick;$/;"	m	struct:ElasticTrace::InstExecInfo
executeTick	probe/elastic_trace.hh	/^        Tick executeTick;$/;"	m	struct:ElasticTrace::TraceInfo
fault	fetch.hh	/^        Fault fault;$/;"	m	class:DefaultFetch::FinishTranslationEvent
fetch	cpu.hh	/^        DefaultFetch<Impl> *fetch;$/;"	m	class:FullO3CPU::IcachePort
fetch	cpu.hh	/^    typename CPUPolicy::Fetch fetch;$/;"	m	class:FullO3CPU
fetch	fetch.hh	/^        DefaultFetch<Impl> *fetch;$/;"	m	class:DefaultFetch::FetchTranslation
fetch	fetch.hh	/^        DefaultFetch<Impl> *fetch;$/;"	m	class:DefaultFetch::FinishTranslationEvent
fetch	fetch_impl.hh	/^DefaultFetch<Impl>::fetch(bool &status_change)$/;"	f	class:DefaultFetch
fetchBlockedCycles	fetch.hh	/^    Stats::Scalar fetchBlockedCycles;$/;"	m	class:DefaultFetch
fetchBuffer	fetch.hh	/^    uint8_t *fetchBuffer[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchBufferAlignPC	fetch.hh	/^    Addr fetchBufferAlignPC(Addr addr)$/;"	f	class:DefaultFetch
fetchBufferMask	fetch.hh	/^    Addr fetchBufferMask;$/;"	m	class:DefaultFetch
fetchBufferPC	fetch.hh	/^    Addr fetchBufferPC[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchBufferSize	O3CPU.py	/^    fetchBufferSize = Param.Unsigned(64, "Fetch buffer size in bytes")$/;"	v	class:DerivO3CPU
fetchBufferSize	fetch.hh	/^    unsigned fetchBufferSize;$/;"	m	class:DefaultFetch
fetchBufferValid	fetch.hh	/^    bool fetchBufferValid[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchCacheLine	fetch_impl.hh	/^DefaultFetch<Impl>::fetchCacheLine(Addr vaddr, ThreadID tid, Addr pc)$/;"	f	class:DefaultFetch
fetchCycles	fetch.hh	/^    Stats::Scalar fetchCycles;$/;"	m	class:DefaultFetch
fetchFault	comm.hh	/^    Fault fetchFault;$/;"	m	struct:DefaultFetchDefaultDecode
fetchFaultSN	comm.hh	/^    InstSeqNum fetchFaultSN;$/;"	m	struct:DefaultFetchDefaultDecode
fetchIcacheSquashes	fetch.hh	/^    Stats::Scalar fetchIcacheSquashes;$/;"	m	class:DefaultFetch
fetchIcacheWaitRetryStallCycles	fetch.hh	/^    Stats::Scalar fetchIcacheWaitRetryStallCycles;$/;"	m	class:DefaultFetch
fetchIdleCycles	fetch.hh	/^    Stats::Scalar fetchIdleCycles;$/;"	m	class:DefaultFetch
fetchInstsValid	decode_impl.hh	/^DefaultDecode<Impl>::fetchInstsValid()$/;"	f	class:DefaultDecode
fetchMiscStallCycles	fetch.hh	/^    Stats::Scalar fetchMiscStallCycles;$/;"	m	class:DefaultFetch
fetchNisnDist	fetch.hh	/^    Stats::Distribution fetchNisnDist;$/;"	m	class:DefaultFetch
fetchNoActiveThreadStallCycles	fetch.hh	/^    Stats::Scalar fetchNoActiveThreadStallCycles;$/;"	m	class:DefaultFetch
fetchOffset	fetch.hh	/^    Addr fetchOffset[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchPendingDrainCycles	fetch.hh	/^    Stats::Scalar fetchPendingDrainCycles;$/;"	m	class:DefaultFetch
fetchPendingQuiesceStallCycles	fetch.hh	/^    Stats::Scalar fetchPendingQuiesceStallCycles;$/;"	m	class:DefaultFetch
fetchPendingTrapStallCycles	fetch.hh	/^    Stats::Scalar fetchPendingTrapStallCycles;$/;"	m	class:DefaultFetch
fetchPolicy	fetch.hh	/^    FetchPriority fetchPolicy;$/;"	m	class:DefaultFetch
fetchQueue	commit.hh	/^    TimeBuffer<FetchStruct> *fetchQueue;$/;"	m	class:DefaultCommit
fetchQueue	cpu.hh	/^    TimeBuffer<FetchStruct> fetchQueue;$/;"	m	class:FullO3CPU
fetchQueue	decode.hh	/^    TimeBuffer<FetchStruct> *fetchQueue;$/;"	m	class:DefaultDecode
fetchQueue	fetch.hh	/^    std::deque<DynInstPtr> fetchQueue[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchQueueSize	O3CPU.py	/^    fetchQueueSize = Param.Unsigned(32, "Fetch queue size in micro-ops "$/;"	v	class:DerivO3CPU
fetchQueueSize	fetch.hh	/^    unsigned fetchQueueSize;$/;"	m	class:DefaultFetch
fetchRate	fetch.hh	/^    Stats::Formula fetchRate;$/;"	m	class:DefaultFetch
fetchRedirect	iew.hh	/^    bool fetchRedirect[Impl::MaxThreads];$/;"	m	class:DefaultIEW
fetchReqTrace	probe/elastic_trace.cc	/^ElasticTrace::fetchReqTrace(const RequestPtr &req)$/;"	f	class:ElasticTrace
fetchSquashCycles	fetch.hh	/^    Stats::Scalar fetchSquashCycles;$/;"	m	class:DefaultFetch
fetchStatus	fetch.hh	/^    ThreadStatus fetchStatus[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchTick	dyn_inst.hh	/^    Tick fetchTick;      \/\/ instruction fetch is completed.$/;"	m	class:BaseO3DynInst
fetchTlbCycles	fetch.hh	/^    Stats::Scalar fetchTlbCycles;$/;"	m	class:DefaultFetch
fetchTlbSquashes	fetch.hh	/^    Stats::Scalar fetchTlbSquashes;$/;"	m	class:DefaultFetch
fetchToCommitDelay	commit.hh	/^    const Cycles fetchToCommitDelay;$/;"	m	class:DefaultCommit
fetchToDecodeDelay	O3CPU.py	/^    fetchToDecodeDelay = Param.Cycles(1, "Fetch to decode delay")$/;"	v	class:DerivO3CPU
fetchToDecodeDelay	decode.hh	/^    Cycles fetchToDecodeDelay;$/;"	m	class:DefaultDecode
fetchTrapLatency	O3CPU.py	/^    fetchTrapLatency = Param.Cycles(1, "Fetch trap latency")$/;"	v	class:DerivO3CPU
fetchWidth	O3CPU.py	/^    fetchWidth = Param.Unsigned(8, "Fetch width")$/;"	v	class:DerivO3CPU
fetchWidth	fetch.hh	/^    unsigned fetchWidth;$/;"	m	class:DefaultFetch
fetchedBranches	fetch.hh	/^    Stats::Scalar fetchedBranches;$/;"	m	class:DefaultFetch
fetchedCacheLines	fetch.hh	/^    Stats::Scalar fetchedCacheLines;$/;"	m	class:DefaultFetch
fetchedInsts	fetch.hh	/^    Stats::Scalar fetchedInsts;$/;"	m	class:DefaultFetch
findInHash	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::findInHash(const DynInstPtr &inst)$/;"	f	class:MemDepUnit
findInst	rob_impl.hh	/^ROB<Impl>::findInst(ThreadID tid, InstSeqNum squash_inst)$/;"	f	class:ROB
finish	fetch.hh	/^        finish(const Fault &fault, RequestPtr req, ThreadContext *tc,$/;"	f	class:DefaultFetch::FetchTranslation
finishTranslation	fetch_impl.hh	/^DefaultFetch<Impl>::finishTranslation(const Fault &fault, RequestPtr mem_req)$/;"	f	class:DefaultFetch
finishTranslationEvent	fetch.hh	/^    FinishTranslationEvent finishTranslationEvent;$/;"	m	class:DefaultFetch
firstWin	probe/elastic_trace.hh	/^    bool firstWin;$/;"	m	class:ElasticTrace
flatIdx	comm.hh	/^    PhysRegIndex flatIdx;$/;"	m	class:PhysRegId
flatIndex	comm.hh	/^    const PhysRegIndex& flatIndex() const { return flatIdx; }$/;"	f	class:PhysRegId
flattenRegId	thread_context_impl.hh	/^O3ThreadContext<Impl>::flattenRegId(const RegId& regId) const$/;"	f	class:O3ThreadContext
floatList	free_list.hh	/^    SimpleFreeList floatList;$/;"	m	class:UnifiedFreeList
floatMap	rename_map.hh	/^    SimpleRenameMap floatMap;$/;"	m	class:UnifiedRenameMap
floatRegFile	regfile.hh	/^    std::vector<PhysFloatReg> floatRegFile;$/;"	m	class:PhysRegFile
floatRegIds	regfile.hh	/^    std::vector<PhysRegId> floatRegIds;$/;"	m	class:PhysRegFile
flushTraces	probe/elastic_trace.cc	/^ElasticTrace::flushTraces()$/;"	f	class:ElasticTrace
forwardComSize	O3CPU.py	/^    forwardComSize = Param.Unsigned(5, "Time buffer size for forward communication")$/;"	v	class:DerivO3CPU
forwardOldRegs	dyn_inst.hh	/^    void forwardOldRegs()$/;"	f	class:BaseO3DynInst
fpAluAccesses	inst_queue.hh	/^    Stats::Scalar fpAluAccesses;$/;"	m	class:InstructionQueue
fpInstQueueReads	inst_queue.hh	/^    Stats::Scalar fpInstQueueReads;$/;"	m	class:InstructionQueue
fpInstQueueWakeupAccesses	inst_queue.hh	/^    Stats::Scalar fpInstQueueWakeupAccesses;$/;"	m	class:InstructionQueue
fpInstQueueWrites	inst_queue.hh	/^    Stats::Scalar fpInstQueueWrites;$/;"	m	class:InstructionQueue
fpRegfileReads	cpu.hh	/^    Stats::Scalar fpRegfileReads;$/;"	m	class:FullO3CPU
fpRegfileWrites	cpu.hh	/^    Stats::Scalar fpRegfileWrites;$/;"	m	class:FullO3CPU
fpRenameLookups	rename.hh	/^    Stats::Scalar fpRenameLookups;$/;"	m	class:DefaultRename
freeEntries	inst_queue.hh	/^    unsigned freeEntries;$/;"	m	class:InstructionQueue
freeEntries	rename.hh	/^    FreeEntries freeEntries[Impl::MaxThreads];$/;"	m	class:DefaultRename
freeFU	inst_queue.hh	/^        bool freeFU;$/;"	m	class:InstructionQueue::FUCompletion
freeIQEntries	comm.hh	/^        unsigned freeIQEntries;$/;"	m	struct:TimeBufStruct::iewComm
freeLQEntries	comm.hh	/^        unsigned freeLQEntries;$/;"	m	struct:TimeBufStruct::iewComm
freeList	cpu.hh	/^    typename CPUPolicy::FreeList freeList;$/;"	m	class:FullO3CPU
freeList	rename.hh	/^    FreeList *freeList;$/;"	m	class:DefaultRename
freeList	rename_map.hh	/^    SimpleFreeList *freeList;$/;"	m	class:SimpleRenameMap
freeROBEntries	comm.hh	/^        unsigned freeROBEntries; \/\/ *R$/;"	m	struct:TimeBufStruct::commitComm
freeRegs	free_list.hh	/^    std::queue<PhysRegIdPtr> freeRegs;$/;"	m	class:SimpleFreeList
freeSQEntries	comm.hh	/^        unsigned freeSQEntries;$/;"	m	struct:TimeBufStruct::iewComm
freeUnitNextCycle	fu_pool.cc	/^FUPool::freeUnitNextCycle(int fu_idx)$/;"	f	class:FUPool
fromCommit	decode.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultDecode
fromCommit	fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultFetch
fromCommit	iew.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultIEW
fromCommit	inst_queue.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:InstructionQueue
fromCommit	rename.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultRename
fromDecode	fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromDecode;$/;"	m	class:DefaultFetch
fromDecode	rename.hh	/^    typename TimeBuffer<DecodeStruct>::wire fromDecode;$/;"	m	class:DefaultRename
fromFetch	commit.hh	/^    typename TimeBuffer<FetchStruct>::wire fromFetch;$/;"	m	class:DefaultCommit
fromFetch	decode.hh	/^    typename TimeBuffer<FetchStruct>::wire fromFetch;$/;"	m	class:DefaultDecode
fromIEW	commit.hh	/^    typename TimeBuffer<IEWStruct>::wire fromIEW;$/;"	m	class:DefaultCommit
fromIEW	decode.hh	/^    typename TimeBuffer<TimeStruct>::wire fromIEW;$/;"	m	class:DefaultDecode
fromIEW	fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromIEW;$/;"	m	class:DefaultFetch
fromIEW	rename.hh	/^    typename TimeBuffer<TimeStruct>::wire fromIEW;$/;"	m	class:DefaultRename
fromIssue	iew.hh	/^    typename TimeBuffer<IssueStruct>::wire fromIssue;$/;"	m	class:DefaultIEW
fromIssue	lsq_unit.hh	/^    typename TimeBuffer<IssueStruct>::wire fromIssue;$/;"	m	class:LSQUnit
fromRename	commit.hh	/^    typename TimeBuffer<RenameStruct>::wire fromRename;$/;"	m	class:DefaultCommit
fromRename	decode.hh	/^    typename TimeBuffer<TimeStruct>::wire fromRename;$/;"	m	class:DefaultDecode
fromRename	fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromRename;$/;"	m	class:DefaultFetch
fromRename	iew.hh	/^    typename TimeBuffer<RenameStruct>::wire fromRename;$/;"	m	class:DefaultIEW
fuBusy	inst_queue.hh	/^    Stats::Vector fuBusy;$/;"	m	class:InstructionQueue
fuBusyRate	inst_queue.hh	/^    Stats::Formula fuBusyRate;$/;"	m	class:InstructionQueue
fuIdx	inst_queue.hh	/^        int fuIdx;$/;"	m	class:InstructionQueue::FUCompletion
fuListIterator	fu_pool.hh	/^    typedef std::vector<FuncUnit *>::iterator fuListIterator;$/;"	t	class:FUPool
fuPerCapList	fu_pool.hh	/^    FUIdxQueue fuPerCapList[Num_OpClasses];$/;"	m	class:FUPool
fuPool	O3CPU.py	/^    fuPool = Param.FUPool(DefaultFUPool(), "Functional Unit pool")$/;"	v	class:DerivO3CPU
fuPool	iew.hh	/^    FUPool *fuPool;$/;"	m	class:DefaultIEW
fuPool	inst_queue.hh	/^    FUPool *fuPool;$/;"	m	class:InstructionQueue
funcUnits	fu_pool.hh	/^    std::vector<FuncUnit *> funcUnits;$/;"	m	class:FUPool
funcUnitsIdx	fu_pool.hh	/^        std::vector<int> funcUnitsIdx;$/;"	m	class:FUPool::FUIdxQueue
generateTCEvent	commit_impl.hh	/^DefaultCommit<Impl>::generateTCEvent(ThreadID tid)$/;"	f	class:DefaultCommit
generateTrapEvent	commit_impl.hh	/^DefaultCommit<Impl>::generateTrapEvent(ThreadID tid, Fault inst_fault)$/;"	f	class:DefaultCommit
getAndIncrementInstSeq	cpu.hh	/^    InstSeqNum getAndIncrementInstSeq()$/;"	f	class:FullO3CPU
getBlockedMemInstToExecute	inst_queue_impl.hh	/^InstructionQueue<Impl>::getBlockedMemInstToExecute()$/;"	f	class:InstructionQueue
getCCList	free_list.hh	/^    SimpleFreeList *getCCList() { return &ccList; }$/;"	f	class:UnifiedFreeList
getCCReg	free_list.hh	/^    PhysRegIdPtr getCCReg() { return ccList.getReg(); }$/;"	f	class:UnifiedFreeList
getCheckerCpuPtr	thread_context.hh	/^    CheckerCPU *getCheckerCpuPtr() { return NULL; }$/;"	f	class:O3ThreadContext
getCommittingThread	commit_impl.hh	/^DefaultCommit<Impl>::getCommittingThread()$/;"	f	class:DefaultCommit
getCount	inst_queue.hh	/^    unsigned getCount(ThreadID tid) { return count[tid]; };$/;"	f	class:InstructionQueue
getCount	lsq.hh	/^    int getCount(ThreadID tid)$/;"	f	class:LSQ
getCount	lsq_impl.hh	/^LSQ<Impl>::getCount()$/;"	f	class:LSQ
getCount	lsq_unit.hh	/^    unsigned getCount() { return loads + stores; }$/;"	f	class:LSQUnit
getCpuPtr	thread_context.hh	/^    virtual BaseCPU *getCpuPtr() { return cpu; }$/;"	f	class:O3ThreadContext
getDTBPtr	thread_context.hh	/^    TheISA::TLB *getDTBPtr() { return cpu->dtb; }$/;"	f	class:O3ThreadContext
getDecoderPtr	thread_context.hh	/^    getDecoderPtr()$/;"	f	class:O3ThreadContext
getDeferredMemInstToExecute	inst_queue_impl.hh	/^InstructionQueue<Impl>::getDeferredMemInstToExecute()$/;"	f	class:InstructionQueue
getExecuteTick	probe/elastic_trace.cc	/^ElasticTrace::TraceInfo::getExecuteTick() const$/;"	f	class:ElasticTrace::TraceInfo
getFU	fu_pool.cc	/^FUPool::FUIdxQueue::getFU()$/;"	f	class:FUPool::FUIdxQueue
getFetchingThread	fetch_impl.hh	/^DefaultFetch<Impl>::getFetchingThread(FetchPriority &fetch_priority)$/;"	f	class:DefaultFetch
getFloatReg	free_list.hh	/^    PhysRegIdPtr getFloatReg() { return floatList.getReg(); }$/;"	f	class:UnifiedFreeList
getFreeTid	cpu.cc	/^FullO3CPU<Impl>::getFreeTid()$/;"	f	class:FullO3CPU
getITBPtr	thread_context.hh	/^    TheISA::TLB *getITBPtr() { return cpu->itb; }$/;"	f	class:O3ThreadContext
getInstToExecute	inst_queue_impl.hh	/^InstructionQueue<Impl>::getInstToExecute()$/;"	f	class:InstructionQueue
getInsts	commit_impl.hh	/^DefaultCommit<Impl>::getInsts()$/;"	f	class:DefaultCommit
getIntReg	free_list.hh	/^    PhysRegIdPtr getIntReg() { return intList.getReg(); }$/;"	f	class:UnifiedFreeList
getInterrupts	cpu.cc	/^FullO3CPU<Impl>::getInterrupts()$/;"	f	class:FullO3CPU
getKernelStats	thread_context.hh	/^    virtual TheISA::Kernel::Statistics *getKernelStats()$/;"	f	class:O3ThreadContext
getLoadHead	lsq.hh	/^    int getLoadHead(ThreadID tid)$/;"	f	class:LSQ
getLoadHead	lsq_unit.hh	/^    int getLoadHead() { return loadHead; }$/;"	f	class:LSQUnit
getLoadHeadSeqNum	lsq.hh	/^    InstSeqNum getLoadHeadSeqNum(ThreadID tid)$/;"	f	class:LSQ
getLoadHeadSeqNum	lsq_unit.hh	/^    InstSeqNum getLoadHeadSeqNum()$/;"	f	class:LSQUnit
getMaxEntries	rob.hh	/^    unsigned getMaxEntries(ThreadID tid)$/;"	f	class:ROB
getMemDepViolator	lsq.hh	/^    DynInstPtr getMemDepViolator(ThreadID tid)$/;"	f	class:LSQ
getMemDepViolator	lsq_unit_impl.hh	/^LSQUnit<Impl>::getMemDepViolator()$/;"	f	class:LSQUnit
getMemProxy	thread_context.hh	/^    virtual SETranslatingPortProxy &getMemProxy()$/;"	f	class:O3ThreadContext
getMiscRegId	regfile.hh	/^    PhysRegIdPtr getMiscRegId(RegIndex reg_idx) {$/;"	f	class:PhysRegFile
getOpLatency	fu_pool.hh	/^    Cycles getOpLatency(OpClass capability) {$/;"	f	class:FUPool
getPhysProxy	thread_context.hh	/^    virtual PortProxy &getPhysProxy() { return thread->getPhysProxy(); }$/;"	f	class:O3ThreadContext
getProcessPtr	thread_context.hh	/^    virtual Process *getProcessPtr() { return thread->getProcessPtr(); }$/;"	f	class:O3ThreadContext
getQuiesceEvent	thread_context.hh	/^    virtual EndQuiesceEvent *getQuiesceEvent()$/;"	f	class:O3ThreadContext
getReg	free_list.hh	/^    PhysRegIdPtr getReg()$/;"	f	class:SimpleFreeList
getReg	scoreboard.hh	/^    bool getReg(PhysRegIdPtr phys_reg) const$/;"	f	class:Scoreboard
getStoreHead	lsq.hh	/^    int getStoreHead(ThreadID tid)$/;"	f	class:LSQ
getStoreHead	lsq_unit.hh	/^    int getStoreHead() { return storeHead; }$/;"	f	class:LSQUnit
getStoreHeadSeqNum	lsq.hh	/^    InstSeqNum getStoreHeadSeqNum(ThreadID tid)$/;"	f	class:LSQ
getStoreHeadSeqNum	lsq_unit.hh	/^    InstSeqNum getStoreHeadSeqNum()$/;"	f	class:LSQUnit
getSystemPtr	thread_context.hh	/^    virtual System *getSystemPtr() { return cpu->system; }$/;"	f	class:O3ThreadContext
getTC	thread_state.hh	/^    ThreadContext *getTC() { return tc; }$/;"	f	struct:O3ThreadState
getThreadEntries	rob.hh	/^    unsigned getThreadEntries(ThreadID tid)$/;"	f	class:ROB
getTrueId	regfile.cc	/^PhysRegFile::getTrueId(PhysRegIdPtr reg)$/;"	f	class:PhysRegFile
getUnit	fu_pool.cc	/^FUPool::getUnit(OpClass capability)$/;"	f	class:FUPool
getVecElem	free_list.hh	/^    PhysRegIdPtr getVecElem() { return vecElemList.getReg(); }$/;"	f	class:UnifiedFreeList
getVecReg	free_list.hh	/^    PhysRegIdPtr getVecReg() { return vecList.getReg(); }$/;"	f	class:UnifiedFreeList
getVirtProxy	thread_context_impl.hh	/^O3ThreadContext<Impl>::getVirtProxy()$/;"	f	class:O3ThreadContext
getWritableVecReg	regfile.hh	/^    VecRegContainer& getWritableVecReg(PhysRegIdPtr phys_reg)$/;"	f	class:PhysRegFile
getWritableVecReg	thread_context.hh	/^    virtual VecRegContainer& getWritableVecReg(const RegId& id) {$/;"	f	class:O3ThreadContext
getWritableVecRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::getWritableVecRegFlat(int reg_id)$/;"	f	class:O3ThreadContext
getWritableVecRegOperand	dyn_inst.hh	/^    getWritableVecRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
globalSeqNum	cpu.hh	/^    InstSeqNum globalSeqNum;\/\/[Impl::MaxThreads];$/;"	m	class:FullO3CPU
halt	cpu.hh	/^    void halt() { panic("Halt not implemented!\\n"); }$/;"	f	class:FullO3CPU
halt	thread_context_impl.hh	/^O3ThreadContext<Impl>::halt()$/;"	f	class:O3ThreadContext
haltContext	cpu.cc	/^FullO3CPU<Impl>::haltContext(ThreadID tid)$/;"	f	class:FullO3CPU
handleInterrupt	commit_impl.hh	/^DefaultCommit<Impl>::handleInterrupt()$/;"	f	class:DefaultCommit
hasCompCompleted	probe/elastic_trace.cc	/^ElasticTrace::hasCompCompleted(TraceInfo* past_record,$/;"	f	class:ElasticTrace
hasFreeCCRegs	free_list.hh	/^    bool hasFreeCCRegs() const { return ccList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasFreeFloatRegs	free_list.hh	/^    bool hasFreeFloatRegs() const { return floatList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasFreeIntRegs	free_list.hh	/^    bool hasFreeIntRegs() const { return intList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasFreeRegs	free_list.hh	/^    bool hasFreeRegs() const { return !freeRegs.empty(); }$/;"	f	class:SimpleFreeList
hasFreeVecElems	free_list.hh	/^    bool hasFreeVecElems() const { return vecElemList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasFreeVecRegs	free_list.hh	/^    bool hasFreeVecRegs() const { return vecList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasLoadBeenSent	probe/elastic_trace.cc	/^ElasticTrace::hasLoadBeenSent(TraceInfo* past_record,$/;"	f	class:ElasticTrace
hasLoadCompleted	probe/elastic_trace.cc	/^ElasticTrace::hasLoadCompleted(TraceInfo* past_record,$/;"	f	class:ElasticTrace
hasPendingPkt	lsq_unit.hh	/^    bool hasPendingPkt;$/;"	m	class:LSQUnit
hasReadyInsts	inst_queue_impl.hh	/^InstructionQueue<Impl>::hasReadyInsts()$/;"	f	class:InstructionQueue
hasStoreCommitted	probe/elastic_trace.cc	/^ElasticTrace::hasStoreCommitted(TraceInfo* past_record,$/;"	f	class:ElasticTrace
hasStoresToWB	iew.hh	/^    bool hasStoresToWB() { return ldstQueue.hasStoresToWB(); }$/;"	f	class:DefaultIEW
hasStoresToWB	iew.hh	/^    bool hasStoresToWB(ThreadID tid) { return ldstQueue.hasStoresToWB(tid); }$/;"	f	class:DefaultIEW
hasStoresToWB	lsq.hh	/^    bool hasStoresToWB(ThreadID tid)$/;"	f	class:LSQ
hasStoresToWB	lsq_impl.hh	/^LSQ<Impl>::hasStoresToWB()$/;"	f	class:LSQ
hasStoresToWB	lsq_unit.hh	/^    bool hasStoresToWB() { return storesToWB; }$/;"	f	class:LSQUnit
head	rob.hh	/^    InstIt head;$/;"	m	class:ROB
historyBuffer	rename.hh	/^    std::list<RenameHistory> historyBuffer[Impl::MaxThreads];$/;"	m	class:DefaultRename
hwrei	cpu.cc	/^FullO3CPU<Impl>::hwrei(ThreadID tid)$/;"	f	class:FullO3CPU
hwrei	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::hwrei()$/;"	f	class:BaseO3DynInst
icachePort	cpu.hh	/^    IcachePort icachePort;$/;"	m	class:FullO3CPU
icacheStallCycles	fetch.hh	/^    Stats::Scalar icacheStallCycles;$/;"	m	class:DefaultFetch
id	mem_dep_unit.hh	/^    int id;$/;"	m	class:MemDepUnit
idleCycles	cpu.hh	/^    Stats::Scalar idleCycles;$/;"	m	class:FullO3CPU
idleRate	fetch.hh	/^    Stats::Formula idleRate;$/;"	m	class:DefaultFetch
idx	fu_pool.hh	/^        int idx;$/;"	m	class:FUPool::FUIdxQueue
idx	lsq_unit.hh	/^        uint8_t idx;$/;"	m	class:LSQUnit::LSQSenderState
iew	cpu.hh	/^    typename CPUPolicy::IEW iew;$/;"	m	class:FullO3CPU
iew	rename.hh	/^        bool iew;$/;"	m	struct:DefaultRename::Stalls
iewBlock	comm.hh	/^    bool iewBlock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
iewBlockCycles	iew.hh	/^    Stats::Scalar iewBlockCycles;$/;"	m	class:DefaultIEW
iewComm	comm.hh	/^    struct iewComm {$/;"	s	struct:TimeBufStruct
iewDispLoadInsts	iew.hh	/^    Stats::Scalar iewDispLoadInsts;$/;"	m	class:DefaultIEW
iewDispNonSpecInsts	iew.hh	/^    Stats::Scalar iewDispNonSpecInsts;$/;"	m	class:DefaultIEW
iewDispSquashedInsts	iew.hh	/^    Stats::Scalar iewDispSquashedInsts;$/;"	m	class:DefaultIEW
iewDispStoreInsts	iew.hh	/^    Stats::Scalar iewDispStoreInsts;$/;"	m	class:DefaultIEW
iewDispatchedInsts	iew.hh	/^    Stats::Scalar iewDispatchedInsts;$/;"	m	class:DefaultIEW
iewExecLoadInsts	iew.hh	/^    Stats::Vector iewExecLoadInsts;$/;"	m	class:DefaultIEW
iewExecRate	iew.hh	/^    Stats::Formula iewExecRate;$/;"	m	class:DefaultIEW
iewExecSquashedInsts	iew.hh	/^    Stats::Scalar iewExecSquashedInsts;$/;"	m	class:DefaultIEW
iewExecStoreInsts	iew.hh	/^    Stats::Formula iewExecStoreInsts;$/;"	m	class:DefaultIEW
iewExecutedBranches	iew.hh	/^    Stats::Vector iewExecutedBranches;$/;"	m	class:DefaultIEW
iewExecutedInsts	iew.hh	/^    Stats::Scalar iewExecutedInsts;$/;"	m	class:DefaultIEW
iewExecutedNop	iew.hh	/^    Stats::Vector iewExecutedNop;$/;"	m	class:DefaultIEW
iewExecutedRefs	iew.hh	/^    Stats::Vector iewExecutedRefs;$/;"	m	class:DefaultIEW
iewExecutedSwp	iew.hh	/^    Stats::Vector iewExecutedSwp;$/;"	m	class:DefaultIEW
iewIQFullEvents	iew.hh	/^    Stats::Scalar iewIQFullEvents;$/;"	m	class:DefaultIEW
iewIdleCycles	iew.hh	/^    Stats::Scalar iewIdleCycles;$/;"	m	class:DefaultIEW
iewInfo	comm.hh	/^    iewComm iewInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
iewInstsToCommit	iew.hh	/^    Stats::Vector iewInstsToCommit;$/;"	m	class:DefaultIEW
iewLSQFullEvents	iew.hh	/^    Stats::Scalar iewLSQFullEvents;$/;"	m	class:DefaultIEW
iewQueue	commit.hh	/^    TimeBuffer<IEWStruct> *iewQueue;$/;"	m	class:DefaultCommit
iewQueue	cpu.hh	/^    TimeBuffer<IEWStruct> iewQueue;$/;"	m	class:FullO3CPU
iewQueue	iew.hh	/^    TimeBuffer<IEWStruct> *iewQueue;$/;"	m	class:DefaultIEW
iewSquashCycles	iew.hh	/^    Stats::Scalar iewSquashCycles;$/;"	m	class:DefaultIEW
iewStage	commit.hh	/^    IEW *iewStage;$/;"	m	class:DefaultCommit
iewStage	inst_queue.hh	/^    IEW *iewStage;$/;"	m	class:InstructionQueue
iewStage	lsq.hh	/^    IEW *iewStage;$/;"	m	class:LSQ
iewStage	lsq_unit.hh	/^    IEW *iewStage;$/;"	m	class:LSQUnit
iewToCommitDelay	O3CPU.py	/^    iewToCommitDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to commit "$/;"	v	class:DerivO3CPU
iewToCommitDelay	commit.hh	/^    const Cycles iewToCommitDelay;$/;"	m	class:DefaultCommit
iewToDecodeDelay	O3CPU.py	/^    iewToDecodeDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to decode "$/;"	v	class:DerivO3CPU
iewToDecodeDelay	decode.hh	/^    Cycles iewToDecodeDelay;$/;"	m	class:DefaultDecode
iewToFetchDelay	O3CPU.py	/^    iewToFetchDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to fetch "$/;"	v	class:DerivO3CPU
iewToFetchDelay	fetch.hh	/^    Cycles iewToFetchDelay;$/;"	m	class:DefaultFetch
iewToRenameDelay	O3CPU.py	/^    iewToRenameDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to rename "$/;"	v	class:DerivO3CPU
iewToRenameDelay	rename.hh	/^    int iewToRenameDelay;$/;"	m	class:DefaultRename
iewUnblock	comm.hh	/^    bool iewUnblock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
iewUnblockCycles	iew.hh	/^    Stats::Scalar iewUnblockCycles;$/;"	m	class:DefaultIEW
iew_ptr	rename.hh	/^    IEW *iew_ptr;$/;"	m	class:DefaultRename
includeSquashInst	comm.hh	/^    bool includeSquashInst[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
incrFullStat	rename_impl.hh	/^DefaultRename<Impl>::incrFullStat(const FullSource &source)$/;"	f	class:DefaultRename
incrLdIdx	lsq_unit_impl.hh	/^LSQUnit<Impl>::incrLdIdx(int &load_idx) const$/;"	f	class:LSQUnit
incrStIdx	lsq_unit_impl.hh	/^LSQUnit<Impl>::incrStIdx(int &store_idx) const$/;"	f	class:LSQUnit
indexMask	store_set.hh	/^    int indexMask;$/;"	m	class:StoreSet
init	cpu.cc	/^FullO3CPU<Impl>::init()$/;"	f	class:FullO3CPU
init	lsq_unit_impl.hh	/^LSQUnit<Impl>::init(O3CPU *cpu_ptr, IEW *iew_ptr, DerivO3CPUParams *params,$/;"	f	class:LSQUnit
init	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::init(DerivO3CPUParams *params, ThreadID tid)$/;"	f	class:MemDepUnit
init	rename_map.cc	/^SimpleRenameMap::init(unsigned size, SimpleFreeList *_freeList,$/;"	f	class:SimpleRenameMap
init	rename_map.cc	/^UnifiedRenameMap::init(PhysRegFile *_regFile,$/;"	f	class:UnifiedRenameMap
init	store_set.cc	/^StoreSet::init(uint64_t clear_period, int _SSIT_size, int _LFST_size)$/;"	f	class:StoreSet
initFreeList	regfile.cc	/^PhysRegFile::initFreeList(UnifiedFreeList *freeList)$/;"	f	class:PhysRegFile
initMemProxies	thread_context.hh	/^    virtual void initMemProxies(ThreadContext *tc)$/;"	f	class:O3ThreadContext
initVars	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::initVars()$/;"	f	class:BaseO3DynInst
initiateAcc	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::initiateAcc()$/;"	f	class:BaseO3DynInst
insert	dep_graph.hh	/^DependencyGraph<DynInstPtr>::insert(PhysRegIndex idx, DynInstPtr &new_inst)$/;"	f	class:DependencyGraph
insert	inst_queue_impl.hh	/^InstructionQueue<Impl>::insert(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
insert	lsq_unit_impl.hh	/^LSQUnit<Impl>::insert(DynInstPtr &inst)$/;"	f	class:LSQUnit
insert	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::insert(DynInstPtr &inst)$/;"	f	class:MemDepUnit
insertBarrier	inst_queue_impl.hh	/^InstructionQueue<Impl>::insertBarrier(DynInstPtr &barr_inst)$/;"	f	class:InstructionQueue
insertBarrier	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::insertBarrier(DynInstPtr &barr_inst)$/;"	f	class:MemDepUnit
insertInst	rob_impl.hh	/^ROB<Impl>::insertInst(DynInstPtr &inst)$/;"	f	class:ROB
insertLoad	lsq_impl.hh	/^LSQ<Impl>::insertLoad(DynInstPtr &load_inst)$/;"	f	class:LSQ
insertLoad	lsq_unit_impl.hh	/^LSQUnit<Impl>::insertLoad(DynInstPtr &load_inst)$/;"	f	class:LSQUnit
insertLoad	store_set.cc	/^StoreSet::insertLoad(Addr load_PC, InstSeqNum load_seq_num)$/;"	f	class:StoreSet
insertNonSpec	inst_queue_impl.hh	/^InstructionQueue<Impl>::insertNonSpec(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
insertNonSpec	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::insertNonSpec(DynInstPtr &inst)$/;"	f	class:MemDepUnit
insertStore	lsq_impl.hh	/^LSQ<Impl>::insertStore(DynInstPtr &store_inst)$/;"	f	class:LSQ
insertStore	lsq_unit_impl.hh	/^LSQUnit<Impl>::insertStore(DynInstPtr &store_inst)$/;"	f	class:LSQUnit
insertStore	store_set.cc	/^StoreSet::insertStore(Addr store_PC, InstSeqNum store_seq_num, ThreadID tid)$/;"	f	class:StoreSet
insertThread	cpu.cc	/^FullO3CPU<Impl>::insertThread(ThreadID tid)$/;"	f	class:FullO3CPU
insertedLoads	mem_dep_unit.hh	/^    Stats::Scalar insertedLoads;$/;"	m	class:MemDepUnit
insertedStores	mem_dep_unit.hh	/^    Stats::Scalar insertedStores;$/;"	m	class:MemDepUnit
inst	dep_graph.hh	/^    DynInstPtr inst;$/;"	m	class:DependencyEntry
inst	inst_queue.hh	/^        DynInstPtr inst;$/;"	m	class:InstructionQueue::FUCompletion
inst	lsq_unit.hh	/^        DynInstPtr inst;$/;"	m	class:LSQUnit::LSQSenderState
inst	lsq_unit.hh	/^        DynInstPtr inst;$/;"	m	class:LSQUnit::WritebackEvent
inst	lsq_unit.hh	/^        DynInstPtr inst;$/;"	m	struct:LSQUnit::SQEntry
inst	mem_dep_unit.hh	/^        DynInstPtr inst;$/;"	m	class:MemDepUnit::MemDepEntry
instAddr	commit.hh	/^    Addr instAddr(ThreadID tid) { return pc[tid].instAddr(); }$/;"	f	class:DefaultCommit
instAddr	cpu.cc	/^FullO3CPU<Impl>::instAddr(ThreadID tid)$/;"	f	class:FullO3CPU
instAddr	thread_context.hh	/^    virtual Addr instAddr()$/;"	f	class:O3ThreadContext
instDone	cpu.cc	/^FullO3CPU<Impl>::instDone(ThreadID tid, DynInstPtr &inst)$/;"	f	class:FullO3CPU
instFetchTraceFile	probe/ElasticTrace.py	/^                                        "instruction fetch tracing")$/;"	v	class:ElasticTrace
instList	cpu.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:FullO3CPU
instList	inst_queue.hh	/^    std::list<DynInstPtr> instList[Impl::MaxThreads];$/;"	m	class:InstructionQueue
instList	mem_dep_unit.hh	/^    std::list<DynInstPtr> instList[Impl::MaxThreads];$/;"	m	class:MemDepUnit
instList	rob.hh	/^    std::list<DynInstPtr> instList[Impl::MaxThreads];$/;"	m	class:ROB
instNum	probe/elastic_trace.hh	/^        InstSeqNum instNum;$/;"	m	struct:ElasticTrace::TraceInfo
instQueue	iew.hh	/^    IQ instQueue;$/;"	m	class:DefaultIEW
instSeqNum	rename.hh	/^        InstSeqNum instSeqNum;$/;"	m	struct:DefaultRename::RenameHistory
instSize	fetch.hh	/^    int instSize;$/;"	m	class:DefaultFetch
instToCommit	iew_impl.hh	/^DefaultIEW<Impl>::instToCommit(DynInstPtr &inst)$/;"	f	class:DefaultIEW
instTraceStream	probe/elastic_trace.hh	/^    ProtoOutputStream* instTraceStream;$/;"	m	class:ElasticTrace
instcount	cpu.hh	/^    int instcount;$/;"	m	class:FullO3CPU
insts	comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultDecodeDefaultRename
insts	comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultFetchDefaultDecode
insts	comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultIEWDefaultCommit
insts	comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultRenameDefaultIEW
insts	comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:IssueStruct
insts	decode.hh	/^    std::queue<DynInstPtr> insts[Impl::MaxThreads];$/;"	m	class:DefaultDecode
insts	iew.hh	/^    std::queue<DynInstPtr> insts[Impl::MaxThreads];$/;"	m	class:DefaultIEW
insts	rename.hh	/^    InstQueue insts[Impl::MaxThreads];$/;"	m	class:DefaultRename
instsCommitted	commit.hh	/^    Stats::Vector instsCommitted;$/;"	m	class:DefaultCommit
instsInProgress	rename.hh	/^    int instsInProgress[Impl::MaxThreads];$/;"	m	class:DefaultRename
instsToExecute	inst_queue.hh	/^    std::list<DynInstPtr> instsToExecute;$/;"	m	class:InstructionQueue
instsToReplay	mem_dep_unit.hh	/^    std::list<DynInstPtr> instsToReplay;$/;"	m	class:MemDepUnit
intAluAccesses	inst_queue.hh	/^    Stats::Scalar intAluAccesses;$/;"	m	class:InstructionQueue
intInstQueueReads	inst_queue.hh	/^    Stats::Scalar intInstQueueReads;$/;"	m	class:InstructionQueue
intInstQueueWakeupAccesses	inst_queue.hh	/^    Stats::Scalar intInstQueueWakeupAccesses;$/;"	m	class:InstructionQueue
intInstQueueWrites	inst_queue.hh	/^    Stats::Scalar intInstQueueWrites;$/;"	m	class:InstructionQueue
intList	free_list.hh	/^    SimpleFreeList intList;$/;"	m	class:UnifiedFreeList
intRegFile	regfile.hh	/^    std::vector<IntReg> intRegFile;$/;"	m	class:PhysRegFile
intRegIds	regfile.hh	/^    std::vector<PhysRegId> intRegIds;$/;"	m	class:PhysRegFile
intRegfileReads	cpu.hh	/^    Stats::Scalar intRegfileReads;$/;"	m	class:FullO3CPU
intRegfileWrites	cpu.hh	/^    Stats::Scalar intRegfileWrites;$/;"	m	class:FullO3CPU
intRenameLookups	rename.hh	/^    Stats::Scalar intRenameLookups;$/;"	m	class:DefaultRename
interrupt	commit.hh	/^    Fault interrupt;$/;"	m	class:DefaultCommit
interruptPending	comm.hh	/^        bool interruptPending; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
interruptPending	fetch.hh	/^    bool interruptPending;$/;"	m	class:DefaultFetch
invAddrLoads	lsq_unit.hh	/^    Stats::Scalar invAddrLoads;$/;"	m	class:LSQUnit
invAddrSwpfs	lsq_unit.hh	/^    Stats::Scalar invAddrSwpfs;$/;"	m	class:LSQUnit
ipc	cpu.hh	/^    Stats::Formula ipc;$/;"	m	class:FullO3CPU
iqBranchInstsIssued	inst_queue.hh	/^    Stats::Scalar iqBranchInstsIssued;$/;"	m	class:InstructionQueue
iqCount	comm.hh	/^        unsigned iqCount;$/;"	m	struct:TimeBufStruct::iewComm
iqCount	fetch_impl.hh	/^DefaultFetch<Impl>::iqCount()$/;"	f	class:DefaultFetch
iqEntries	rename.hh	/^        unsigned iqEntries;$/;"	m	struct:DefaultRename::FreeEntries
iqFloatInstsIssued	inst_queue.hh	/^    Stats::Scalar iqFloatInstsIssued;$/;"	m	class:InstructionQueue
iqInstsAdded	inst_queue.hh	/^    Stats::Scalar iqInstsAdded;$/;"	m	class:InstructionQueue
iqInstsIssued	inst_queue.hh	/^    Stats::Scalar iqInstsIssued;$/;"	m	class:InstructionQueue
iqIntInstsIssued	inst_queue.hh	/^    Stats::Scalar iqIntInstsIssued;$/;"	m	class:InstructionQueue
iqMemInstsIssued	inst_queue.hh	/^    Stats::Scalar iqMemInstsIssued;$/;"	m	class:InstructionQueue
iqMiscInstsIssued	inst_queue.hh	/^    Stats::Scalar iqMiscInstsIssued;$/;"	m	class:InstructionQueue
iqNonSpecInstsAdded	inst_queue.hh	/^    Stats::Scalar iqNonSpecInstsAdded;$/;"	m	class:InstructionQueue
iqPolicy	inst_queue.hh	/^    IQPolicy iqPolicy;$/;"	m	class:InstructionQueue
iqPtr	inst_queue.hh	/^        InstructionQueue<Impl> *iqPtr;$/;"	m	class:InstructionQueue::FUCompletion
iqPtr	mem_dep_unit.hh	/^    InstructionQueue<Impl> *iqPtr;$/;"	m	class:MemDepUnit
iqSquashedInstsExamined	inst_queue.hh	/^    Stats::Scalar iqSquashedInstsExamined;$/;"	m	class:InstructionQueue
iqSquashedInstsIssued	inst_queue.hh	/^    Stats::Scalar iqSquashedInstsIssued;$/;"	m	class:InstructionQueue
iqSquashedNonSpecRemoved	inst_queue.hh	/^    Stats::Scalar iqSquashedNonSpecRemoved;$/;"	m	class:InstructionQueue
iqSquashedOperandsExamined	inst_queue.hh	/^    Stats::Scalar iqSquashedOperandsExamined;$/;"	m	class:InstructionQueue
isAllZeros	lsq_unit.hh	/^        bool isAllZeros;$/;"	m	struct:LSQUnit::SQEntry
isCCPhysReg	comm.hh	/^    bool isCCPhysReg() const { return isCCReg(); }$/;"	f	class:PhysRegId
isComp	probe/elastic_trace.hh	/^        bool isComp() const { return (type == Record::COMP); }$/;"	f	struct:ElasticTrace::TraceInfo
isDoneSquashing	rob.hh	/^    bool isDoneSquashing(ThreadID tid) const$/;"	f	class:ROB
isDrained	commit_impl.hh	/^DefaultCommit<Impl>::isDrained() const$/;"	f	class:DefaultCommit
isDrained	cpu.cc	/^FullO3CPU<Impl>::isDrained() const$/;"	f	class:FullO3CPU
isDrained	decode_impl.hh	/^DefaultDecode<Impl>::isDrained() const$/;"	f	class:DefaultDecode
isDrained	fetch_impl.hh	/^DefaultFetch<Impl>::isDrained() const$/;"	f	class:DefaultFetch
isDrained	fu_pool.cc	/^FUPool::isDrained() const$/;"	f	class:FUPool
isDrained	iew_impl.hh	/^DefaultIEW<Impl>::isDrained() const$/;"	f	class:DefaultIEW
isDrained	inst_queue_impl.hh	/^InstructionQueue<Impl>::isDrained() const$/;"	f	class:InstructionQueue
isDrained	lsq_impl.hh	/^LSQ<Impl>::isDrained() const$/;"	f	class:LSQ
isDrained	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::isDrained() const$/;"	f	class:MemDepUnit
isDrained	rename_impl.hh	/^DefaultRename<Impl>::isDrained() const$/;"	f	class:DefaultRename
isDraining	cpu.hh	/^    bool isDraining() const { return drainState() == DrainState::Draining; }$/;"	f	class:FullO3CPU
isEmpty	lsq_impl.hh	/^LSQ<Impl>::isEmpty() const$/;"	f	class:LSQ
isEmpty	lsq_unit.hh	/^    bool isEmpty() const { return lqEmpty() && sqEmpty(); }$/;"	f	class:LSQUnit
isEmpty	rob.hh	/^    bool isEmpty() const$/;"	f	class:ROB
isEmpty	rob.hh	/^    bool isEmpty(ThreadID tid) const$/;"	f	class:ROB
isFixedMapping	comm.hh	/^    bool isFixedMapping() const$/;"	f	class:PhysRegId
isFloatPhysReg	comm.hh	/^    bool isFloatPhysReg() const { return isFloatReg(); }$/;"	f	class:PhysRegId
isFull	inst_queue_impl.hh	/^InstructionQueue<Impl>::isFull()$/;"	f	class:InstructionQueue
isFull	inst_queue_impl.hh	/^InstructionQueue<Impl>::isFull(ThreadID tid)$/;"	f	class:InstructionQueue
isFull	lsq_impl.hh	/^LSQ<Impl>::isFull()$/;"	f	class:LSQ
isFull	lsq_impl.hh	/^LSQ<Impl>::isFull(ThreadID tid)$/;"	f	class:LSQ
isFull	lsq_unit.hh	/^    bool isFull() { return lqFull() || sqFull(); }$/;"	f	class:LSQUnit
isFull	rob.hh	/^    bool isFull()$/;"	f	class:ROB
isFull	rob.hh	/^    bool isFull(ThreadID tid)$/;"	f	class:ROB
isHeadReady	rob_impl.hh	/^ROB<Impl>::isHeadReady(ThreadID tid)$/;"	f	class:ROB
isIntPhysReg	comm.hh	/^    bool isIntPhysReg() const { return isIntReg(); }$/;"	f	class:PhysRegId
isLoad	lsq_unit.hh	/^        bool isLoad;$/;"	m	class:LSQUnit::LSQSenderState
isLoad	probe/elastic_trace.hh	/^        bool isLoad() const { return (type == Record::LOAD); }$/;"	f	struct:ElasticTrace::TraceInfo
isMiscPhysReg	comm.hh	/^    bool isMiscPhysReg() const { return isMiscReg(); }$/;"	f	class:PhysRegId
isPipelined	fu_pool.hh	/^    bool isPipelined(OpClass capability) {$/;"	f	class:FUPool
isSnooping	cpu.hh	/^        virtual bool isSnooping() const { return true; }$/;"	f	class:FullO3CPU::DcachePort
isSplit	lsq_unit.hh	/^        bool isSplit;$/;"	m	class:LSQUnit::LSQSenderState
isSplit	lsq_unit.hh	/^        bool isSplit;$/;"	m	struct:LSQUnit::SQEntry
isStalled	lsq_impl.hh	/^LSQ<Impl>::isStalled()$/;"	f	class:LSQ
isStalled	lsq_impl.hh	/^LSQ<Impl>::isStalled(ThreadID tid)$/;"	f	class:LSQ
isStalled	lsq_unit.hh	/^    bool isStalled()  { return stalled; }$/;"	f	class:LSQUnit
isStore	probe/elastic_trace.hh	/^        bool isStore() const { return (type == Record::STORE); }$/;"	f	struct:ElasticTrace::TraceInfo
isStoreBlocked	lsq_unit.hh	/^    bool isStoreBlocked;$/;"	m	class:LSQUnit
isVectorPhysElem	comm.hh	/^    bool isVectorPhysElem() const { return isVecElem(); }$/;"	f	class:PhysRegId
isVectorPhysReg	comm.hh	/^    bool isVectorPhysReg() const { return isVecReg(); }$/;"	f	class:PhysRegId
isa	cpu.hh	/^    std::vector<TheISA::ISA *> isa;$/;"	m	class:FullO3CPU
issue	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::issue(DynInstPtr &inst)$/;"	f	class:MemDepUnit
issuePipelinedIfetch	fetch.hh	/^    bool issuePipelinedIfetch[Impl::MaxThreads];$/;"	m	class:DefaultFetch
issueRate	inst_queue.hh	/^    Stats::Formula issueRate;$/;"	m	class:InstructionQueue
issueTick	dyn_inst.hh	/^    int32_t issueTick;$/;"	m	class:BaseO3DynInst
issueToExecQueue	iew.hh	/^    TimeBuffer<IssueStruct> issueToExecQueue;$/;"	m	class:DefaultIEW
issueToExecuteDelay	O3CPU.py	/^    issueToExecuteDelay = Param.Cycles(1, "Issue to execute delay (internal "$/;"	v	class:DerivO3CPU
issueToExecuteDelay	iew.hh	/^    Cycles issueToExecuteDelay;$/;"	m	class:DefaultIEW
issueToExecuteQueue	inst_queue.hh	/^    TimeBuffer<IssueStruct> *issueToExecuteQueue;$/;"	m	class:InstructionQueue
issueWidth	O3CPU.py	/^    issueWidth = Param.Unsigned(8, "Issue width")$/;"	v	class:DerivO3CPU
issueWidth	iew.hh	/^    unsigned issueWidth;$/;"	m	class:DefaultIEW
issued	store_set.cc	/^StoreSet::issued(Addr issued_PC, InstSeqNum issued_seq_num, bool is_store)$/;"	f	class:StoreSet
itb	cpu.hh	/^    TheISA::TLB * itb;$/;"	m	class:FullO3CPU
lastActivatedCycle	cpu.hh	/^    Tick lastActivatedCycle;$/;"	m	class:FullO3CPU
lastClearedSeqNum	probe/elastic_trace.hh	/^    InstSeqNum lastClearedSeqNum;$/;"	m	class:ElasticTrace
lastCommitedSeqNum	commit.hh	/^    InstSeqNum lastCommitedSeqNum[Impl::MaxThreads];$/;"	m	class:DefaultCommit
lastIcacheStall	fetch.hh	/^    Counter lastIcacheStall[Impl::MaxThreads];$/;"	m	class:DefaultFetch
lastRunningCycle	cpu.hh	/^    Cycles lastRunningCycle;$/;"	m	class:FullO3CPU
ldstQueue	iew.hh	/^    LSQ ldstQueue;$/;"	m	class:DefaultIEW
ldstqCount	comm.hh	/^        unsigned ldstqCount;$/;"	m	struct:TimeBufStruct::iewComm
listIt	mem_dep_unit.hh	/^        ListIt listIt;$/;"	m	class:MemDepUnit::MemDepEntry
listOrder	inst_queue.hh	/^    std::list<ListOrderEntry> listOrder;$/;"	m	class:InstructionQueue
loadBarrier	mem_dep_unit.hh	/^    bool loadBarrier;$/;"	m	class:MemDepUnit
loadBarrierSN	mem_dep_unit.hh	/^    InstSeqNum loadBarrierSN;$/;"	m	class:MemDepUnit
loadHead	lsq_unit.hh	/^    int loadHead;$/;"	m	class:LSQUnit
loadQueue	lsq_unit.hh	/^    std::vector<DynInstPtr> loadQueue;$/;"	m	class:LSQUnit
loadTail	lsq_unit.hh	/^    int loadTail;$/;"	m	class:LSQUnit
loads	lsq_unit.hh	/^    int loads;$/;"	m	class:LSQUnit
loadsInProgress	rename.hh	/^    int loadsInProgress[Impl::MaxThreads];$/;"	m	class:DefaultRename
lookup	rename_map.hh	/^    PhysRegIdPtr lookup(const RegId& arch_reg) const$/;"	f	class:SimpleRenameMap
lookup	rename_map.hh	/^    PhysRegIdPtr lookup(const RegId& arch_reg) const$/;"	f	class:UnifiedRenameMap
lookupAndUpdateNextPC	fetch_impl.hh	/^DefaultFetch<Impl>::lookupAndUpdateNextPC($/;"	f	class:DefaultFetch
lqEmpty	lsq_impl.hh	/^LSQ<Impl>::lqEmpty() const$/;"	f	class:LSQ
lqEmpty	lsq_unit.hh	/^    bool lqEmpty() const { return loads == 0; }$/;"	f	class:LSQUnit
lqEntries	rename.hh	/^        unsigned lqEntries;$/;"	m	struct:DefaultRename::FreeEntries
lqFull	lsq_impl.hh	/^LSQ<Impl>::lqFull()$/;"	f	class:LSQ
lqFull	lsq_impl.hh	/^LSQ<Impl>::lqFull(ThreadID tid)$/;"	f	class:LSQ
lqFull	lsq_unit.hh	/^    bool lqFull() { return loads >= (LQEntries - 1); }$/;"	f	class:LSQUnit
lsq	cpu.hh	/^        LSQ<Impl> *lsq;$/;"	m	class:FullO3CPU::DcachePort
lsq	lsq_unit.hh	/^    LSQ *lsq;$/;"	m	class:LSQUnit
lsqBlockedLoads	lsq_unit.hh	/^    Stats::Scalar lsqBlockedLoads;$/;"	m	class:LSQUnit
lsqCacheBlocked	lsq_unit.hh	/^    Stats::Scalar lsqCacheBlocked;$/;"	m	class:LSQUnit
lsqCount	fetch_impl.hh	/^DefaultFetch<Impl>::lsqCount()$/;"	f	class:DefaultFetch
lsqForwLoads	lsq_unit.hh	/^    Stats::Scalar lsqForwLoads;$/;"	m	class:LSQUnit
lsqID	lsq_unit.hh	/^    ThreadID lsqID;$/;"	m	class:LSQUnit
lsqIgnoredResponses	lsq_unit.hh	/^    Stats::Scalar lsqIgnoredResponses;$/;"	m	class:LSQUnit
lsqMemOrderViolation	lsq_unit.hh	/^    Stats::Scalar lsqMemOrderViolation;$/;"	m	class:LSQUnit
lsqPolicy	lsq.hh	/^    LSQPolicy lsqPolicy;$/;"	m	class:LSQ
lsqPtr	lsq_unit.hh	/^        LSQUnit<Impl> *lsqPtr;$/;"	m	class:LSQUnit::WritebackEvent
lsqRescheduledLoads	lsq_unit.hh	/^    Stats::Scalar lsqRescheduledLoads;$/;"	m	class:LSQUnit
lsqSquashedLoads	lsq_unit.hh	/^    Stats::Scalar lsqSquashedLoads;$/;"	m	class:LSQUnit
lsqSquashedStores	lsq_unit.hh	/^    Stats::Scalar lsqSquashedStores;$/;"	m	class:LSQUnit
ltseqnum	store_set.hh	/^struct ltseqnum {$/;"	s
macroop	fetch.hh	/^    StaticInstPtr macroop[Impl::MaxThreads];$/;"	m	class:DefaultFetch
mainPkt	lsq_unit.hh	/^        PacketPtr mainPkt;$/;"	m	class:LSQUnit::LSQSenderState
markCompletedInsts	commit_impl.hh	/^DefaultCommit<Impl>::markCompletedInsts()$/;"	f	class:DefaultCommit
markDelayed	fetch.hh	/^        markDelayed()$/;"	f	class:DefaultFetch::FetchTranslation
maxEntries	inst_queue.hh	/^    unsigned maxEntries[Impl::MaxThreads];$/;"	m	class:InstructionQueue
maxEntries	rob.hh	/^    unsigned maxEntries[Impl::MaxThreads];$/;"	m	class:ROB
maxLQEntries	lsq.hh	/^    unsigned maxLQEntries;$/;"	m	class:LSQ
maxNumDependents	probe/elastic_trace.hh	/^    Stats::Scalar maxNumDependents;$/;"	m	class:ElasticTrace
maxOpLatencies	fu_pool.hh	/^    std::array<Cycles, Num_OpClasses> maxOpLatencies;$/;"	m	class:FUPool
maxPhysRegDepMapSize	probe/elastic_trace.hh	/^    Stats::Scalar maxPhysRegDepMapSize;$/;"	m	class:ElasticTrace
maxSQEntries	lsq.hh	/^    unsigned maxSQEntries;$/;"	m	class:LSQ
maxTempStoreSize	probe/elastic_trace.hh	/^    Stats::Scalar maxTempStoreSize;$/;"	m	class:ElasticTrace
memAccess	dyn_inst.hh	/^    Fault memAccess()$/;"	f	class:BaseO3DynInst
memAllocCounter	dep_graph.hh	/^    unsigned memAllocCounter;$/;"	m	class:DependencyGraph
memDepHash	mem_dep_unit.hh	/^    MemDepHash memDepHash;$/;"	m	class:MemDepUnit
memDepReady	mem_dep_unit.hh	/^        bool memDepReady;$/;"	m	class:MemDepUnit::MemDepEntry
memDepUnit	inst_queue.hh	/^    MemDepUnit memDepUnit[Impl::MaxThreads];$/;"	m	class:InstructionQueue
memDepViolator	lsq_unit.hh	/^    DynInstPtr memDepViolator;$/;"	m	class:LSQUnit
memOpsPred	store_set.hh	/^    int memOpsPred;$/;"	m	class:StoreSet
memOrderViolationEvents	iew.hh	/^    Stats::Scalar memOrderViolationEvents;$/;"	m	class:DefaultIEW
memReq	fetch.hh	/^    RequestPtr memReq[Impl::MaxThreads];$/;"	m	class:DefaultFetch
memdep_count	mem_dep_unit.cc	/^MemDepUnit<StoreSet, O3CPUImpl>::MemDepEntry::memdep_count = 0;$/;"	m	class:MemDepUnit::MemDepEntry	file:
memdep_count	mem_dep_unit.hh	/^        static int memdep_count;$/;"	m	class:MemDepUnit::MemDepEntry
memdep_erase	mem_dep_unit.cc	/^MemDepUnit<StoreSet, O3CPUImpl>::MemDepEntry::memdep_erase = 0;$/;"	m	class:MemDepUnit::MemDepEntry	file:
memdep_erase	mem_dep_unit.hh	/^        static int memdep_erase;$/;"	m	class:MemDepUnit::MemDepEntry
memdep_insert	mem_dep_unit.cc	/^MemDepUnit<StoreSet, O3CPUImpl>::MemDepEntry::memdep_insert = 0;$/;"	m	class:MemDepUnit::MemDepEntry	file:
memdep_insert	mem_dep_unit.hh	/^        static int memdep_insert;$/;"	m	class:MemDepUnit::MemDepEntry
memory_mode	O3CPU.py	/^    def memory_mode(cls):$/;"	m	class:DerivO3CPU
microPC	commit.hh	/^    Addr microPC(ThreadID tid) { return pc[tid].microPC(); }$/;"	f	class:DefaultCommit
microPC	cpu.cc	/^FullO3CPU<Impl>::microPC(ThreadID tid)$/;"	f	class:FullO3CPU
microPC	thread_context.hh	/^    virtual MicroPC microPC()$/;"	f	class:O3ThreadContext
miscRegIds	regfile.hh	/^    std::vector<PhysRegId> miscRegIds;$/;"	m	class:PhysRegFile
miscRegfileReads	cpu.hh	/^    Stats::Scalar miscRegfileReads;$/;"	m	class:FullO3CPU
miscRegfileWrites	cpu.hh	/^    Stats::Scalar miscRegfileWrites;$/;"	m	class:FullO3CPU
mispredPC	comm.hh	/^        Addr mispredPC;$/;"	m	struct:TimeBufStruct::decodeComm
mispredPC	comm.hh	/^    Addr mispredPC[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
mispredictInst	comm.hh	/^        DynInstPtr mispredictInst;  \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
mispredictInst	comm.hh	/^        DynInstPtr mispredictInst;$/;"	m	struct:TimeBufStruct::decodeComm
mispredictInst	comm.hh	/^    DynInstPtr mispredictInst[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
moveToReady	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::moveToReady(MemDepEntryPtr &woken_inst_entry)$/;"	f	class:MemDepUnit
moveToYoungerInst	inst_queue_impl.hh	/^InstructionQueue<Impl>::moveToYoungerInst(ListOrderIt list_order_it)$/;"	f	class:InstructionQueue
name	commit_impl.hh	/^DefaultCommit<Impl>::name() const$/;"	f	class:DefaultCommit
name	decode_impl.hh	/^DefaultDecode<Impl>::name() const$/;"	f	class:DefaultDecode
name	fetch_impl.hh	/^DefaultFetch<Impl>::name() const$/;"	f	class:DefaultFetch
name	free_list.hh	/^    std::string name() const { return _name; };$/;"	f	class:UnifiedFreeList
name	iew_impl.hh	/^DefaultIEW<Impl>::name() const$/;"	f	class:DefaultIEW
name	inst_queue_impl.hh	/^InstructionQueue<Impl>::name() const$/;"	f	class:InstructionQueue
name	lsq_impl.hh	/^LSQ<Impl>::name() const$/;"	f	class:LSQ
name	lsq_unit_impl.hh	/^LSQUnit<Impl>::name() const$/;"	f	class:LSQUnit
name	mem_dep_unit.hh	/^        std::string name() const { return "memdepentry"; }$/;"	f	class:MemDepUnit::MemDepEntry
name	mem_dep_unit.hh	/^    std::string name() const { return _name; }$/;"	f	class:MemDepUnit
name	probe/elastic_trace.cc	/^ElasticTrace::name() const$/;"	f	class:ElasticTrace
name	probe/simple_trace.hh	/^    const std::string name() const { return ProbeListenerObject::name() + ".trace"; }$/;"	f	class:SimpleTrace
name	rename_impl.hh	/^DefaultRename<Impl>::name() const$/;"	f	class:DefaultRename
name	rob_impl.hh	/^ROB<Impl>::name() const$/;"	f	class:ROB
name	scoreboard.hh	/^    std::string name() const { return _name; };$/;"	f	class:Scoreboard
needsTSO	O3CPU.py	/^    needsTSO = Param.Bool(buildEnv['TARGET_ISA'] == 'x86',$/;"	v	class:DerivO3CPU
needsTSO	lsq_unit.hh	/^    bool needsTSO;$/;"	m	class:LSQUnit
newPhysReg	rename.hh	/^        PhysRegIdPtr newPhysReg;$/;"	m	struct:DefaultRename::RenameHistory
next	dep_graph.hh	/^    DependencyEntry<DynInstPtr> *next;$/;"	m	class:DependencyEntry
nextInstAddr	commit.hh	/^    Addr nextInstAddr(ThreadID tid) { return pc[tid].nextInstAddr(); }$/;"	f	class:DefaultCommit
nextInstAddr	cpu.cc	/^FullO3CPU<Impl>::nextInstAddr(ThreadID tid)$/;"	f	class:FullO3CPU
nextInstAddr	thread_context.hh	/^    virtual Addr nextInstAddr()$/;"	f	class:O3ThreadContext
nextPC	comm.hh	/^        TheISA::PCState nextPC;$/;"	m	struct:TimeBufStruct::decodeComm
noSquashFromTC	thread_state.hh	/^    bool noSquashFromTC;$/;"	m	struct:O3ThreadState
noWB	lsq_unit.hh	/^        bool noWB;$/;"	m	class:LSQUnit::LSQSenderState
nodesRemoved	dep_graph.hh	/^    uint64_t nodesRemoved;$/;"	m	class:DependencyGraph
nodesTraversed	dep_graph.hh	/^    uint64_t nodesTraversed;$/;"	m	class:DependencyGraph
nonSpecInstReady	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::nonSpecInstReady(DynInstPtr &inst)$/;"	f	class:MemDepUnit
nonSpecInsts	inst_queue.hh	/^    std::map<InstSeqNum, DynInstPtr> nonSpecInsts;$/;"	m	class:InstructionQueue
nonSpecSeqNum	comm.hh	/^        InstSeqNum nonSpecSeqNum; \/\/ *I$/;"	m	struct:TimeBufStruct::commitComm
numActiveThreads	cpu.hh	/^    int numActiveThreads()$/;"	f	class:FullO3CPU
numCCPhysRegs	regfile.hh	/^    unsigned numCCPhysRegs() const { return numPhysicalCCRegs; }$/;"	f	class:PhysRegFile
numCommittedDist	commit.hh	/^    Stats::Distribution numCommittedDist;$/;"	m	class:DefaultCommit
numDepts	probe/elastic_trace.hh	/^        uint32_t numDepts;$/;"	m	struct:ElasticTrace::TraceInfo
numEntries	dep_graph.hh	/^    int numEntries;$/;"	m	class:DependencyGraph
numEntries	inst_queue.hh	/^    unsigned numEntries;$/;"	m	class:InstructionQueue
numEntries	rob.hh	/^    unsigned numEntries;$/;"	m	class:ROB
numFU	fu_pool.hh	/^    int numFU;$/;"	m	class:FUPool
numFetchingThreads	fetch.hh	/^    ThreadID numFetchingThreads;$/;"	m	class:DefaultFetch
numFilteredNodes	probe/elastic_trace.hh	/^    Stats::Scalar numFilteredNodes;$/;"	m	class:ElasticTrace
numFloatPhysRegs	regfile.hh	/^    unsigned numFloatPhysRegs() const { return numPhysicalFloatRegs; }$/;"	f	class:PhysRegFile
numFreeCCEntries	rename_map.hh	/^    unsigned numFreeCCEntries() const { return ccMap.numFreeEntries(); }$/;"	f	class:UnifiedRenameMap
numFreeCCRegs	free_list.hh	/^    unsigned numFreeCCRegs() const { return ccList.numFreeRegs(); }$/;"	f	class:UnifiedFreeList
numFreeEntries	inst_queue_impl.hh	/^InstructionQueue<Impl>::numFreeEntries()$/;"	f	class:InstructionQueue
numFreeEntries	inst_queue_impl.hh	/^InstructionQueue<Impl>::numFreeEntries(ThreadID tid)$/;"	f	class:InstructionQueue
numFreeEntries	rename_map.hh	/^    unsigned numFreeEntries() const { return freeList->numFreeRegs(); }$/;"	f	class:SimpleRenameMap
numFreeEntries	rename_map.hh	/^    unsigned numFreeEntries() const$/;"	f	class:UnifiedRenameMap
numFreeEntries	rob_impl.hh	/^ROB<Impl>::numFreeEntries()$/;"	f	class:ROB
numFreeEntries	rob_impl.hh	/^ROB<Impl>::numFreeEntries(ThreadID tid)$/;"	f	class:ROB
numFreeFloatEntries	rename_map.hh	/^    unsigned numFreeFloatEntries() const { return floatMap.numFreeEntries(); }$/;"	f	class:UnifiedRenameMap
numFreeFloatRegs	free_list.hh	/^    unsigned numFreeFloatRegs() const { return floatList.numFreeRegs(); }$/;"	f	class:UnifiedFreeList
numFreeIntEntries	rename_map.hh	/^    unsigned numFreeIntEntries() const { return intMap.numFreeEntries(); }$/;"	f	class:UnifiedRenameMap
numFreeIntRegs	free_list.hh	/^    unsigned numFreeIntRegs() const { return intList.numFreeRegs(); }$/;"	f	class:UnifiedFreeList
numFreeLoadEntries	lsq_impl.hh	/^LSQ<Impl>::numFreeLoadEntries()$/;"	f	class:LSQ
numFreeLoadEntries	lsq_impl.hh	/^LSQ<Impl>::numFreeLoadEntries(ThreadID tid)$/;"	f	class:LSQ
numFreeLoadEntries	lsq_unit_impl.hh	/^LSQUnit<Impl>::numFreeLoadEntries()$/;"	f	class:LSQUnit
numFreeRegs	free_list.hh	/^    unsigned numFreeRegs() const { return freeRegs.size(); }$/;"	f	class:SimpleFreeList
numFreeStoreEntries	lsq_impl.hh	/^LSQ<Impl>::numFreeStoreEntries()$/;"	f	class:LSQ
numFreeStoreEntries	lsq_impl.hh	/^LSQ<Impl>::numFreeStoreEntries(ThreadID tid)$/;"	f	class:LSQ
numFreeStoreEntries	lsq_unit_impl.hh	/^LSQUnit<Impl>::numFreeStoreEntries()$/;"	f	class:LSQUnit
numFreeVecEntries	rename_map.hh	/^    unsigned numFreeVecEntries() const$/;"	f	class:UnifiedRenameMap
numFreeVecRegs	free_list.hh	/^    unsigned numFreeVecRegs() const { return vecList.numFreeRegs(); }$/;"	f	class:UnifiedFreeList
numIQEntries	O3CPU.py	/^    numIQEntries = Param.Unsigned(64, "Number of instruction queue entries")$/;"	v	class:DerivO3CPU
numInst	fetch.hh	/^    int numInst;$/;"	m	class:DefaultFetch
numInstsInROB	rob.hh	/^    int numInstsInROB;$/;"	m	class:ROB
numIntPhysRegs	regfile.hh	/^    unsigned numIntPhysRegs() const { return numPhysicalIntRegs; }$/;"	f	class:PhysRegFile
numIssueOrderDepLoads	probe/elastic_trace.hh	/^    Stats::Scalar numIssueOrderDepLoads;$/;"	m	class:ElasticTrace
numIssueOrderDepOther	probe/elastic_trace.hh	/^    Stats::Scalar numIssueOrderDepOther;$/;"	m	class:ElasticTrace
numIssueOrderDepStores	probe/elastic_trace.hh	/^    Stats::Scalar numIssueOrderDepStores;$/;"	m	class:ElasticTrace
numIssuedDist	inst_queue.hh	/^    Stats::Distribution numIssuedDist;$/;"	m	class:InstructionQueue
numLoads	lsq.hh	/^    int numLoads(ThreadID tid)$/;"	f	class:LSQ
numLoads	lsq_impl.hh	/^LSQ<Impl>::numLoads()$/;"	f	class:LSQ
numLoads	lsq_unit.hh	/^    int numLoads() { return loads; }$/;"	f	class:LSQUnit
numOrderDepStores	probe/elastic_trace.hh	/^    Stats::Scalar numOrderDepStores;$/;"	m	class:ElasticTrace
numPhysCCRegs	O3CPU.py	/^    numPhysCCRegs = Param.Unsigned(_defaultNumPhysCCRegs,$/;"	v	class:DerivO3CPU
numPhysFloatRegs	O3CPU.py	/^    numPhysFloatRegs = Param.Unsigned(256, "Number of physical floating point "$/;"	v	class:DerivO3CPU
numPhysIntRegs	O3CPU.py	/^    numPhysIntRegs = Param.Unsigned(256, "Number of physical integer registers")$/;"	v	class:DerivO3CPU
numPhysRegs	inst_queue.hh	/^    unsigned numPhysRegs;$/;"	m	class:InstructionQueue
numPhysRegs	scoreboard.hh	/^    unsigned numPhysRegs;$/;"	m	class:Scoreboard
numPhysVecRegs	O3CPU.py	/^    numPhysVecRegs = Param.Unsigned(256, "Number of physical vector "$/;"	v	class:DerivO3CPU
numPhysicalCCRegs	regfile.hh	/^    unsigned numPhysicalCCRegs;$/;"	m	class:PhysRegFile
numPhysicalFloatRegs	regfile.hh	/^    unsigned numPhysicalFloatRegs;$/;"	m	class:PhysRegFile
numPhysicalIntRegs	regfile.hh	/^    unsigned numPhysicalIntRegs;$/;"	m	class:PhysRegFile
numPhysicalVecElemRegs	regfile.hh	/^    unsigned numPhysicalVecElemRegs;$/;"	m	class:PhysRegFile
numPhysicalVecRegs	regfile.hh	/^    unsigned numPhysicalVecRegs;$/;"	m	class:PhysRegFile
numROBEntries	O3CPU.py	/^    numROBEntries = Param.Unsigned(192, "Number of reorder buffer entries")$/;"	v	class:DerivO3CPU
numROBFreeEntries	commit_impl.hh	/^DefaultCommit<Impl>::numROBFreeEntries(ThreadID tid)$/;"	f	class:DefaultCommit
numRegDep	probe/elastic_trace.hh	/^    Stats::Scalar numRegDep;$/;"	m	class:ElasticTrace
numRobs	O3CPU.py	/^    numRobs = Param.Unsigned(1, "Number of Reorder Buffers");$/;"	v	class:DerivO3CPU
numRobs	commit.hh	/^    unsigned numRobs;$/;"	m	class:DefaultCommit
numStores	lsq.hh	/^    int numStores(ThreadID tid)$/;"	f	class:LSQ
numStores	lsq_impl.hh	/^LSQ<Impl>::numStores()$/;"	f	class:LSQ
numStores	lsq_unit.hh	/^    int numStores() { return stores; }$/;"	f	class:LSQUnit
numStoresToWB	lsq.hh	/^    int numStoresToWB(ThreadID tid)$/;"	f	class:LSQ
numStoresToWB	lsq_unit.hh	/^    int numStoresToWB() { return storesToWB; }$/;"	f	class:LSQUnit
numThreads	commit.hh	/^    const ThreadID numThreads;$/;"	m	class:DefaultCommit
numThreads	decode.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultDecode
numThreads	fetch.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultFetch
numThreads	iew.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultIEW
numThreads	inst_queue.hh	/^    ThreadID numThreads;$/;"	m	class:InstructionQueue
numThreads	lsq.hh	/^    ThreadID numThreads;$/;"	m	class:LSQ
numThreads	rename.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultRename
numThreads	rob.hh	/^    ThreadID numThreads;$/;"	m	class:ROB
numVecElemPhysRegs	regfile.hh	/^    unsigned numVecElemPhysRegs() const { return numPhysicalVecElemRegs; }$/;"	f	class:PhysRegFile
numVecPhysRegs	regfile.hh	/^    unsigned numVecPhysRegs() const { return numPhysicalVecRegs; }$/;"	f	class:PhysRegFile
offsetBits	store_set.hh	/^    int offsetBits;$/;"	m	class:StoreSet
oldestInst	inst_queue.hh	/^        InstSeqNum oldestInst;$/;"	m	struct:InstructionQueue::ListOrderEntry
oldestReady	commit_impl.hh	/^DefaultCommit<Impl>::oldestReady()$/;"	f	class:DefaultCommit
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='FloatAdd', opLat=2),$/;"	v	class:FP_ALU
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='FloatMult', opLat=4),$/;"	v	class:FP_MultDiv
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='IntAlu') ]$/;"	v	class:IntALU
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='IntMult', opLat=3),$/;"	v	class:IntMultDiv
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='IprAccess', opLat = 3, pipelined = False) ]$/;"	v	class:IprPort
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='MemRead'), OpDesc(opClass='MemWrite'),$/;"	v	class:RdWrPort
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='MemRead'),$/;"	v	class:ReadPort
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='MemWrite'),$/;"	v	class:WritePort
opList	FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='SimdAdd'),$/;"	v	class:SIMD_Unit
operator !=	comm.hh	/^    bool operator!=(const PhysRegId& that) const {$/;"	f	class:PhysRegId
operator ()	inst_queue.hh	/^        bool operator() (const DynInstPtr &lhs, const DynInstPtr &rhs) const$/;"	f	struct:InstructionQueue::pqCompare
operator ()	mem_dep_unit.hh	/^    size_t operator() (const InstSeqNum &seq_num) const {$/;"	f	struct:SNHash
operator ()	store_set.hh	/^    bool operator()(const InstSeqNum &lhs, const InstSeqNum &rhs) const$/;"	f	struct:ltseqnum
operator <	comm.hh	/^    bool operator<(const PhysRegId& that) const {$/;"	f	class:PhysRegId
operator ==	comm.hh	/^    bool operator==(const PhysRegId& that) const {$/;"	f	class:PhysRegId
opsCommitted	commit.hh	/^    Stats::Vector opsCommitted;$/;"	m	class:DefaultCommit
outstanding	lsq_unit.hh	/^        uint8_t outstanding;$/;"	m	class:LSQUnit::LSQSenderState
override	cpu.hh	/^    Counter totalInsts() const override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    Counter totalOps() const override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    DrainState drain() override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    virtual void wakeup(ThreadID tid) override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void activateContext(ThreadID tid) override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void drainResume() override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void haltContext(ThreadID tid) override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void init() override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void regProbePoints() override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void regStats() override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void serializeThread(CheckpointOut &cp, ThreadID tid) const override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void startup() override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void suspendContext(ThreadID tid) override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void switchOut() override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void takeOverFrom(BaseCPU *oldCPU) override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void unserializeThread(CheckpointIn &cp, ThreadID tid) override;$/;"	m	class:FullO3CPU
override	cpu.hh	/^    void verifyMemoryMode() const override;$/;"	m	class:FullO3CPU
pc	comm.hh	/^        TheISA::PCState pc; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
pc	comm.hh	/^    TheISA::PCState pc[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
pc	commit.hh	/^    TheISA::PCState pc[Impl::MaxThreads];$/;"	m	class:DefaultCommit
pc	fetch.hh	/^    TheISA::PCState pc[Impl::MaxThreads];$/;"	m	class:DefaultFetch
pc	probe/elastic_trace.hh	/^        Addr pc;$/;"	m	struct:ElasticTrace::TraceInfo
pcState	commit.hh	/^    TheISA::PCState pcState(ThreadID tid) { return pc[tid]; }$/;"	f	class:DefaultCommit
pcState	commit.hh	/^    void pcState(const TheISA::PCState &val, ThreadID tid)$/;"	f	class:DefaultCommit
pcState	cpu.cc	/^FullO3CPU<Impl>::pcState(ThreadID tid)$/;"	f	class:FullO3CPU
pcState	cpu.cc	/^FullO3CPU<Impl>::pcState(const TheISA::PCState &val, ThreadID tid)$/;"	f	class:FullO3CPU
pcState	thread_context.hh	/^    virtual TheISA::PCState pcState()$/;"	f	class:O3ThreadContext
pcState	thread_context_impl.hh	/^O3ThreadContext<Impl>::pcState(const TheISA::PCState &val)$/;"	f	class:O3ThreadContext
pcStateNoRecord	thread_context_impl.hh	/^O3ThreadContext<Impl>::pcStateNoRecord(const TheISA::PCState &val)$/;"	f	class:O3ThreadContext
pendingPacket	lsq_unit.hh	/^        PacketPtr pendingPacket;$/;"	m	class:LSQUnit::LSQSenderState
pendingPkt	lsq_unit.hh	/^    PacketPtr pendingPkt;$/;"	m	class:LSQUnit
physAddr	probe/elastic_trace.hh	/^        Addr physAddr;$/;"	m	struct:ElasticTrace::TraceInfo
physRegDepList	probe/elastic_trace.hh	/^        std::list<InstSeqNum> physRegDepList;$/;"	m	struct:ElasticTrace::TraceInfo
physRegDepMap	probe/elastic_trace.hh	/^    std::unordered_map<PhysRegIndex, InstSeqNum> physRegDepMap;$/;"	m	class:ElasticTrace
physRegDepSet	probe/elastic_trace.hh	/^        std::set<InstSeqNum> physRegDepSet;$/;"	m	struct:ElasticTrace::InstExecInfo
pipelineIcacheAccesses	fetch_impl.hh	/^DefaultFetch<Impl>::pipelineIcacheAccesses(ThreadID tid)$/;"	f	class:DefaultFetch
pipelined	fu_pool.hh	/^    std::array<bool, Num_OpClasses> pipelined;$/;"	m	class:FUPool
pkt	lsq_unit.hh	/^        PacketPtr pkt;$/;"	m	class:LSQUnit::WritebackEvent
pktToSend	lsq_unit.hh	/^        bool pktToSend;$/;"	m	class:LSQUnit::LSQSenderState
pop	dep_graph.hh	/^DependencyGraph<DynInstPtr>::pop(PhysRegIndex idx)$/;"	f	class:DependencyGraph
ppCommit	commit.hh	/^    ProbePointArg<DynInstPtr> *ppCommit;$/;"	m	class:DefaultCommit
ppCommitStall	commit.hh	/^    ProbePointArg<DynInstPtr> *ppCommitStall;$/;"	m	class:DefaultCommit
ppDataAccessComplete	cpu.hh	/^    ProbePointArg<std::pair<DynInstPtr, PacketPtr> > *ppDataAccessComplete;$/;"	m	class:FullO3CPU
ppDispatch	iew.hh	/^    ProbePointArg<DynInstPtr> *ppDispatch;$/;"	m	class:DefaultIEW
ppExecute	iew.hh	/^    ProbePointArg<DynInstPtr> *ppExecute;$/;"	m	class:DefaultIEW
ppFetch	fetch.hh	/^    ProbePointArg<DynInstPtr> *ppFetch;$/;"	m	class:DefaultFetch
ppFetchRequestSent	fetch.hh	/^    ProbePointArg<RequestPtr> *ppFetchRequestSent;$/;"	m	class:DefaultFetch
ppInstAccessComplete	cpu.hh	/^    ProbePointArg<PacketPtr> *ppInstAccessComplete;$/;"	m	class:FullO3CPU
ppMispredict	iew.hh	/^    ProbePointArg<DynInstPtr> *ppMispredict;$/;"	m	class:DefaultIEW
ppRename	rename.hh	/^    ProbePointArg<DynInstPtr> *ppRename;$/;"	m	class:DefaultRename
ppSquash	commit.hh	/^    ProbePointArg<DynInstPtr> *ppSquash;$/;"	m	class:DefaultCommit
ppSquashInRename	rename.hh	/^    ProbePointArg<SeqNumRegPair> *ppSquashInRename;$/;"	m	class:DefaultRename
ppToCommit	iew.hh	/^    ProbePointArg<DynInstPtr> *ppToCommit;$/;"	m	class:DefaultIEW
pqCompare	inst_queue.hh	/^    struct pqCompare {$/;"	s	class:InstructionQueue
predIncorrect	comm.hh	/^        bool predIncorrect;$/;"	m	struct:TimeBufStruct::decodeComm
predictedBranches	fetch.hh	/^    Stats::Scalar predictedBranches;$/;"	m	class:DefaultFetch
predictedNotTakenIncorrect	iew.hh	/^    Stats::Scalar predictedNotTakenIncorrect;$/;"	m	class:DefaultIEW
predictedTakenIncorrect	iew.hh	/^    Stats::Scalar predictedTakenIncorrect;$/;"	m	class:DefaultIEW
prevPhysReg	rename.hh	/^        PhysRegIdPtr prevPhysReg;$/;"	m	struct:DefaultRename::RenameHistory
printAvailableInsts	iew_impl.hh	/^DefaultIEW<Impl>::printAvailableInsts()$/;"	f	class:DefaultIEW
priorityList	fetch.hh	/^    std::list<ThreadID> priorityList;$/;"	m	class:DefaultFetch
priority_list	commit.hh	/^    std::list<ThreadID> priority_list;$/;"	m	class:DefaultCommit
process	fetch.hh	/^        void process()$/;"	f	class:DefaultFetch::FinishTranslationEvent
process	inst_queue_impl.hh	/^InstructionQueue<Impl>::FUCompletion::process()$/;"	f	class:InstructionQueue::FUCompletion
process	lsq_unit_impl.hh	/^LSQUnit<Impl>::WritebackEvent::process()$/;"	f	class:LSQUnit::WritebackEvent
processCacheCompletion	fetch_impl.hh	/^DefaultFetch<Impl>::processCacheCompletion(PacketPtr pkt)$/;"	f	class:DefaultFetch
processFUCompletion	inst_queue_impl.hh	/^InstructionQueue<Impl>::processFUCompletion(DynInstPtr &inst, int fu_idx)$/;"	f	class:InstructionQueue
processFreeUnits	fu_pool.cc	/^FUPool::processFreeUnits()$/;"	f	class:FUPool
processInterrupts	cpu.cc	/^FullO3CPU<Impl>::processInterrupts(const Fault &interrupt)$/;"	f	class:FullO3CPU
processTrapEvent	commit_impl.hh	/^DefaultCommit<Impl>::processTrapEvent(ThreadID tid)$/;"	f	class:DefaultCommit
producerInst	iew.hh	/^    Stats::Vector producerInst;$/;"	m	class:DefaultIEW
profileClear	thread_context_impl.hh	/^O3ThreadContext<Impl>::profileClear()$/;"	f	class:O3ThreadContext
profileSample	thread_context_impl.hh	/^O3ThreadContext<Impl>::profileSample()$/;"	f	class:O3ThreadContext
profileStall	fetch_impl.hh	/^DefaultFetch<Impl>::profileStall(ThreadID tid) {$/;"	f	class:DefaultFetch
propagateInterrupt	commit_impl.hh	/^DefaultCommit<Impl>::propagateInterrupt()$/;"	f	class:DefaultCommit
q	regfile.hh	/^        FloatRegBits q;$/;"	m	union:PhysRegFile::__anon2
queueOnList	inst_queue.hh	/^    bool queueOnList[Num_OpClasses];$/;"	m	class:InstructionQueue
queueType	inst_queue.hh	/^        OpClass queueType;$/;"	m	struct:InstructionQueue::ListOrderEntry
quiesceCycles	cpu.hh	/^    Stats::Scalar quiesceCycles;$/;"	m	class:FullO3CPU
read	cpu.hh	/^    Fault read(RequestPtr &req, RequestPtr &sreqLow, RequestPtr &sreqHigh,$/;"	f	class:FullO3CPU
read	lsq.hh	/^LSQ<Impl>::read(RequestPtr req, RequestPtr sreqLow, RequestPtr sreqHigh,$/;"	f	class:LSQ
read	lsq_unit.hh	/^LSQUnit<Impl>::read(Request *req, Request *sreqLow, Request *sreqHigh,$/;"	f	class:LSQUnit
readArchCCReg	cpu.cc	/^FullO3CPU<Impl>::readArchCCReg(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readArchFloatReg	cpu.cc	/^FullO3CPU<Impl>::readArchFloatReg(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readArchFloatRegInt	cpu.cc	/^FullO3CPU<Impl>::readArchFloatRegInt(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readArchIntReg	cpu.cc	/^FullO3CPU<Impl>::readArchIntReg(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readArchVecLane	cpu.hh	/^    readArchVecLane(int reg_idx, int lId, ThreadID tid) const$/;"	f	class:FullO3CPU
readCCReg	cpu.cc	/^FullO3CPU<Impl>::readCCReg(PhysRegIdPtr phys_reg)$/;"	f	class:FullO3CPU
readCCReg	regfile.hh	/^    CCReg readCCReg(PhysRegIdPtr phys_reg)$/;"	f	class:PhysRegFile
readCCReg	thread_context.hh	/^    virtual CCReg readCCReg(int reg_idx) {$/;"	f	class:O3ThreadContext
readCCRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::readCCRegFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readCCRegOperand	dyn_inst.hh	/^    CCReg readCCRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readFloatReg	cpu.cc	/^FullO3CPU<Impl>::readFloatReg(PhysRegIdPtr phys_reg)$/;"	f	class:FullO3CPU
readFloatReg	regfile.hh	/^    FloatReg readFloatReg(PhysRegIdPtr phys_reg) const$/;"	f	class:PhysRegFile
readFloatReg	thread_context.hh	/^    virtual FloatReg readFloatReg(int reg_idx) {$/;"	f	class:O3ThreadContext
readFloatRegBits	cpu.cc	/^FullO3CPU<Impl>::readFloatRegBits(PhysRegIdPtr phys_reg)$/;"	f	class:FullO3CPU
readFloatRegBits	regfile.hh	/^    FloatRegBits readFloatRegBits(PhysRegIdPtr phys_reg) const$/;"	f	class:PhysRegFile
readFloatRegBits	thread_context.hh	/^    virtual FloatRegBits readFloatRegBits(int reg_idx) {$/;"	f	class:O3ThreadContext
readFloatRegBitsFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::readFloatRegBitsFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readFloatRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::readFloatRegFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readFloatRegOperand	dyn_inst.hh	/^    FloatReg readFloatRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readFloatRegOperandBits	dyn_inst.hh	/^    FloatRegBits readFloatRegOperandBits(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readFreeEntries	rename_impl.hh	/^DefaultRename<Impl>::readFreeEntries(ThreadID tid)$/;"	f	class:DefaultRename
readFuncExeInst	thread_context.hh	/^    virtual Counter readFuncExeInst() { return thread->funcExeInst; }$/;"	f	class:O3ThreadContext
readHeadInst	rob_impl.hh	/^ROB<Impl>::readHeadInst(ThreadID tid)$/;"	f	class:ROB
readIntReg	cpu.cc	/^FullO3CPU<Impl>::readIntReg(PhysRegIdPtr phys_reg)$/;"	f	class:FullO3CPU
readIntReg	regfile.hh	/^    uint64_t readIntReg(PhysRegIdPtr phys_reg) const$/;"	f	class:PhysRegFile
readIntReg	thread_context.hh	/^    virtual uint64_t readIntReg(int reg_idx) {$/;"	f	class:O3ThreadContext
readIntRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::readIntRegFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readIntRegOperand	dyn_inst.hh	/^    IntReg readIntRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readLastActivate	thread_context_impl.hh	/^O3ThreadContext<Impl>::readLastActivate()$/;"	f	class:O3ThreadContext
readLastSuspend	thread_context_impl.hh	/^O3ThreadContext<Impl>::readLastSuspend()$/;"	f	class:O3ThreadContext
readMiscReg	cpu.cc	/^FullO3CPU<Impl>::readMiscReg(int misc_reg, ThreadID tid)$/;"	f	class:FullO3CPU
readMiscReg	dyn_inst.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	class:BaseO3DynInst
readMiscReg	thread_context.hh	/^    virtual MiscReg readMiscReg(int misc_reg)$/;"	f	class:O3ThreadContext
readMiscRegNoEffect	cpu.cc	/^FullO3CPU<Impl>::readMiscRegNoEffect(int misc_reg, ThreadID tid) const$/;"	f	class:FullO3CPU
readMiscRegNoEffect	thread_context.hh	/^    virtual MiscReg readMiscRegNoEffect(int misc_reg) const$/;"	f	class:O3ThreadContext
readMiscRegOperand	dyn_inst.hh	/^    TheISA::MiscReg readMiscRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readReg	thread_context.hh	/^    virtual uint64_t readReg(int reg_idx) {$/;"	f	class:O3ThreadContext
readRegOtherThread	dyn_inst.hh	/^    MiscReg readRegOtherThread(const RegId& misc_reg, ThreadID tid)$/;"	f	class:BaseO3DynInst
readStCondFailures	thread_context.hh	/^    virtual unsigned readStCondFailures()$/;"	f	class:O3ThreadContext
readStallSignals	decode_impl.hh	/^DefaultDecode<Impl>::readStallSignals(ThreadID tid)$/;"	f	class:DefaultDecode
readStallSignals	rename_impl.hh	/^DefaultRename<Impl>::readStallSignals(ThreadID tid)$/;"	f	class:DefaultRename
readTailInst	rob_impl.hh	/^ROB<Impl>::readTailInst(ThreadID tid)$/;"	f	class:ROB
readVec16BitLaneOperand	dyn_inst.hh	/^    readVec16BitLaneOperand(const StaticInst *si, int idx) const$/;"	f	class:BaseO3DynInst
readVec16BitLaneReg	thread_context.hh	/^    readVec16BitLaneReg(const RegId& id) const$/;"	f	class:O3ThreadContext
readVec32BitLaneOperand	dyn_inst.hh	/^    readVec32BitLaneOperand(const StaticInst *si, int idx) const$/;"	f	class:BaseO3DynInst
readVec32BitLaneReg	thread_context.hh	/^    readVec32BitLaneReg(const RegId& id) const$/;"	f	class:O3ThreadContext
readVec64BitLaneOperand	dyn_inst.hh	/^    readVec64BitLaneOperand(const StaticInst *si, int idx) const$/;"	f	class:BaseO3DynInst
readVec64BitLaneReg	thread_context.hh	/^    readVec64BitLaneReg(const RegId& id) const$/;"	f	class:O3ThreadContext
readVec8BitLaneOperand	dyn_inst.hh	/^    readVec8BitLaneOperand(const StaticInst *si, int idx) const$/;"	f	class:BaseO3DynInst
readVec8BitLaneReg	thread_context.hh	/^    readVec8BitLaneReg(const RegId& id) const$/;"	f	class:O3ThreadContext
readVecElem	regfile.hh	/^    const VecElem& readVecElem(PhysRegIdPtr phys_reg) const$/;"	f	class:PhysRegFile
readVecElem	thread_context.hh	/^    virtual const VecElem& readVecElem(const RegId& reg) const {$/;"	f	class:O3ThreadContext
readVecElemFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::readVecElemFlat(const RegIndex& idx,$/;"	f	class:O3ThreadContext
readVecElemOperand	dyn_inst.hh	/^    VecElem readVecElemOperand(const StaticInst *si, int idx) const$/;"	f	class:BaseO3DynInst
readVecLane	cpu.hh	/^    readVecLane(PhysRegIdPtr phys_reg) const$/;"	f	class:FullO3CPU
readVecLane	regfile.hh	/^    readVecLane(PhysRegIdPtr phys_reg) const$/;"	f	class:PhysRegFile
readVecLaneFlat	thread_context.hh	/^    VecLaneT<VecElem, true> readVecLaneFlat(int idx, int lId) const$/;"	f	class:O3ThreadContext
readVecReg	regfile.hh	/^    const VecRegContainer& readVecReg(PhysRegIdPtr phys_reg) const$/;"	f	class:PhysRegFile
readVecReg	thread_context.hh	/^    virtual const VecRegContainer& readVecReg(const RegId& id) const {$/;"	f	class:O3ThreadContext
readVecRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::readVecRegFlat(int reg_id) const$/;"	f	class:O3ThreadContext
readVecRegOperand	dyn_inst.hh	/^    readVecRegOperand(const StaticInst *si, int idx) const$/;"	f	class:BaseO3DynInst
readyInsts	inst_queue.hh	/^    ReadyInstQueue readyInsts[Num_OpClasses];$/;"	m	class:InstructionQueue
readyIt	inst_queue.hh	/^    ListOrderIt readyIt[Num_OpClasses];$/;"	m	class:InstructionQueue
recordExecTick	probe/elastic_trace.cc	/^ElasticTrace::recordExecTick(const DynInstPtr &dyn_inst)$/;"	f	class:ElasticTrace
recordProducer	inst_queue.hh	/^    void recordProducer(DynInstPtr &inst)$/;"	f	class:InstructionQueue
recordToCommTick	probe/elastic_trace.cc	/^ElasticTrace::recordToCommTick(const DynInstPtr &dyn_inst)$/;"	f	class:ElasticTrace
recvFunctionalSnoop	cpu.hh	/^        virtual void recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:FullO3CPU::DcachePort
recvReqRetry	cpu.cc	/^FullO3CPU<Impl>::DcachePort::recvReqRetry()$/;"	f	class:FullO3CPU::DcachePort
recvReqRetry	cpu.cc	/^FullO3CPU<Impl>::IcachePort::recvReqRetry()$/;"	f	class:FullO3CPU::IcachePort
recvReqRetry	fetch_impl.hh	/^DefaultFetch<Impl>::recvReqRetry()$/;"	f	class:DefaultFetch
recvReqRetry	lsq_impl.hh	/^LSQ<Impl>::recvReqRetry()$/;"	f	class:LSQ
recvRetry	lsq_unit_impl.hh	/^LSQUnit<Impl>::recvRetry()$/;"	f	class:LSQUnit
recvTimingResp	cpu.cc	/^FullO3CPU<Impl>::DcachePort::recvTimingResp(PacketPtr pkt)$/;"	f	class:FullO3CPU::DcachePort
recvTimingResp	cpu.cc	/^FullO3CPU<Impl>::IcachePort::recvTimingResp(PacketPtr pkt)$/;"	f	class:FullO3CPU::IcachePort
recvTimingResp	lsq_impl.hh	/^LSQ<Impl>::recvTimingResp(PacketPtr pkt)$/;"	f	class:LSQ
recvTimingSnoopReq	cpu.cc	/^FullO3CPU<Impl>::DcachePort::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:FullO3CPU::DcachePort
recvTimingSnoopReq	lsq_impl.hh	/^LSQ<Impl>::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:LSQ
regEtraceListeners	probe/elastic_trace.cc	/^ElasticTrace::regEtraceListeners()$/;"	f	class:ElasticTrace
regEtraceListenersEvent	probe/elastic_trace.hh	/^    EventFunctionWrapper regEtraceListenersEvent;$/;"	m	class:ElasticTrace
regFile	cpu.hh	/^    PhysRegFile regFile;$/;"	m	class:FullO3CPU
regFile	free_list.hh	/^    PhysRegFile *regFile;$/;"	m	class:UnifiedFreeList
regFile	rename_map.hh	/^    PhysRegFile *regFile;$/;"	m	class:UnifiedRenameMap
regProbeListeners	probe/elastic_trace.cc	/^ElasticTrace::regProbeListeners()$/;"	f	class:ElasticTrace
regProbeListeners	probe/simple_trace.cc	/^void SimpleTrace::regProbeListeners()$/;"	f	class:SimpleTrace
regProbePoints	commit_impl.hh	/^DefaultCommit<Impl>::regProbePoints()$/;"	f	class:DefaultCommit
regProbePoints	cpu.cc	/^FullO3CPU<Impl>::regProbePoints()$/;"	f	class:FullO3CPU
regProbePoints	fetch_impl.hh	/^DefaultFetch<Impl>::regProbePoints()$/;"	f	class:DefaultFetch
regProbePoints	iew_impl.hh	/^DefaultIEW<Impl>::regProbePoints()$/;"	f	class:DefaultIEW
regProbePoints	rename_impl.hh	/^DefaultRename<Impl>::regProbePoints()$/;"	f	class:DefaultRename
regScoreBoard	scoreboard.hh	/^    std::vector<bool> regScoreBoard;$/;"	m	class:Scoreboard
regScoreboard	inst_queue.hh	/^    std::vector<bool> regScoreboard;$/;"	m	class:InstructionQueue
regStats	commit_impl.hh	/^DefaultCommit<Impl>::regStats()$/;"	f	class:DefaultCommit
regStats	cpu.cc	/^BaseO3CPU::regStats()$/;"	f	class:BaseO3CPU
regStats	cpu.cc	/^FullO3CPU<Impl>::regStats()$/;"	f	class:FullO3CPU
regStats	decode_impl.hh	/^DefaultDecode<Impl>::regStats()$/;"	f	class:DefaultDecode
regStats	fetch_impl.hh	/^DefaultFetch<Impl>::regStats()$/;"	f	class:DefaultFetch
regStats	iew_impl.hh	/^DefaultIEW<Impl>::regStats()$/;"	f	class:DefaultIEW
regStats	inst_queue_impl.hh	/^InstructionQueue<Impl>::regStats()$/;"	f	class:InstructionQueue
regStats	lsq_impl.hh	/^LSQ<Impl>::regStats()$/;"	f	class:LSQ
regStats	lsq_unit_impl.hh	/^LSQUnit<Impl>::regStats()$/;"	f	class:LSQUnit
regStats	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::regStats()$/;"	f	class:MemDepUnit
regStats	probe/elastic_trace.cc	/^ElasticTrace::regStats() {$/;"	f	class:ElasticTrace
regStats	rename_impl.hh	/^DefaultRename<Impl>::regStats()$/;"	f	class:DefaultRename
regStats	rob_impl.hh	/^ROB<Impl>::regStats()$/;"	f	class:ROB
regStats	thread_context_impl.hh	/^O3ThreadContext<Impl>::regStats(const std::string &name)$/;"	f	class:O3ThreadContext
regsReady	mem_dep_unit.hh	/^        bool regsReady;$/;"	m	class:MemDepUnit::MemDepEntry
regsReady	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::regsReady(DynInstPtr &inst)$/;"	f	class:MemDepUnit
remove	dep_graph.hh	/^DependencyGraph<DynInstPtr>::remove(PhysRegIndex idx,$/;"	f	class:DependencyGraph
removeEntries	lsq_impl.hh	/^LSQ<Impl>::removeEntries(ThreadID tid)$/;"	f	class:LSQ
removeFromHistory	rename_impl.hh	/^DefaultRename<Impl>::removeFromHistory(InstSeqNum inst_seq_num, ThreadID tid)$/;"	f	class:DefaultRename
removeFrontInst	cpu.cc	/^FullO3CPU<Impl>::removeFrontInst(DynInstPtr &inst)$/;"	f	class:FullO3CPU
removeInstsNotInROB	cpu.cc	/^FullO3CPU<Impl>::removeInstsNotInROB(ThreadID tid)$/;"	f	class:FullO3CPU
removeInstsThisCycle	cpu.hh	/^    bool removeInstsThisCycle;$/;"	m	class:FullO3CPU
removeInstsUntil	cpu.cc	/^FullO3CPU<Impl>::removeInstsUntil(const InstSeqNum &seq_num, ThreadID tid)$/;"	f	class:FullO3CPU
removeList	cpu.hh	/^    std::queue<ListIt> removeList;$/;"	m	class:FullO3CPU
removeRegDepMapEntry	probe/elastic_trace.cc	/^ElasticTrace::removeRegDepMapEntry(const SeqNumRegPair &inst_reg_pair)$/;"	f	class:ElasticTrace
removeThread	cpu.cc	/^FullO3CPU<Impl>::removeThread(ThreadID tid)$/;"	f	class:FullO3CPU
rename	cpu.hh	/^    typename CPUPolicy::Rename rename;$/;"	m	class:FullO3CPU
rename	decode.hh	/^        bool rename;$/;"	m	struct:DefaultDecode::Stalls
rename	rename_impl.hh	/^DefaultRename<Impl>::rename(bool &status_change, ThreadID tid)$/;"	f	class:DefaultRename
rename	rename_map.cc	/^SimpleRenameMap::rename(const RegId& arch_reg)$/;"	f	class:SimpleRenameMap
rename	rename_map.hh	/^    RenameInfo rename(const RegId& arch_reg)$/;"	f	class:UnifiedRenameMap
renameBlock	comm.hh	/^    bool renameBlock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
renameBlockCycles	rename.hh	/^    Stats::Scalar renameBlockCycles;$/;"	m	class:DefaultRename
renameComm	comm.hh	/^    struct renameComm {$/;"	s	struct:TimeBufStruct
renameCommittedMaps	rename.hh	/^    Stats::Scalar renameCommittedMaps;$/;"	m	class:DefaultRename
renameDestRegs	rename_impl.hh	/^DefaultRename<Impl>::renameDestRegs(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultRename
renameFullRegistersEvents	rename.hh	/^    Stats::Scalar renameFullRegistersEvents;$/;"	m	class:DefaultRename
renameIQFullEvents	rename.hh	/^    Stats::Scalar renameIQFullEvents;$/;"	m	class:DefaultRename
renameIdleCycles	rename.hh	/^    Stats::Scalar renameIdleCycles;$/;"	m	class:DefaultRename
renameInfo	comm.hh	/^    renameComm renameInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
renameInsts	rename_impl.hh	/^DefaultRename<Impl>::renameInsts(ThreadID tid)$/;"	f	class:DefaultRename
renameLQFullEvents	rename.hh	/^    Stats::Scalar renameLQFullEvents;$/;"	m	class:DefaultRename
renameMap	commit.hh	/^    RenameMap *renameMap[Impl::MaxThreads];$/;"	m	class:DefaultCommit
renameMap	cpu.hh	/^    typename CPUPolicy::RenameMap renameMap[Impl::MaxThreads];$/;"	m	class:FullO3CPU
renameMap	rename.hh	/^    RenameMap *renameMap[Impl::MaxThreads];$/;"	m	class:DefaultRename
renameQueue	commit.hh	/^    TimeBuffer<RenameStruct> *renameQueue;$/;"	m	class:DefaultCommit
renameQueue	cpu.hh	/^    TimeBuffer<RenameStruct> renameQueue;$/;"	m	class:FullO3CPU
renameQueue	iew.hh	/^    TimeBuffer<RenameStruct> *renameQueue;$/;"	m	class:DefaultIEW
renameQueue	rename.hh	/^    TimeBuffer<RenameStruct> *renameQueue;$/;"	m	class:DefaultRename
renameROBFullEvents	rename.hh	/^    Stats::Scalar renameROBFullEvents;$/;"	m	class:DefaultRename
renameRenameLookups	rename.hh	/^    Stats::Scalar renameRenameLookups;$/;"	m	class:DefaultRename
renameRenamedInsts	rename.hh	/^    Stats::Scalar renameRenamedInsts;$/;"	m	class:DefaultRename
renameRenamedOperands	rename.hh	/^    Stats::Scalar renameRenamedOperands;$/;"	m	class:DefaultRename
renameRunCycles	rename.hh	/^    Stats::Scalar renameRunCycles;$/;"	m	class:DefaultRename
renameSQFullEvents	rename.hh	/^    Stats::Scalar renameSQFullEvents;$/;"	m	class:DefaultRename
renameSerializeStallCycles	rename.hh	/^    Stats::Scalar renameSerializeStallCycles;$/;"	m	class:DefaultRename
renameSkidInsts	rename.hh	/^    Stats::Scalar renameSkidInsts;$/;"	m	class:DefaultRename
renameSquashCycles	rename.hh	/^    Stats::Scalar renameSquashCycles;$/;"	m	class:DefaultRename
renameSquashedInsts	rename.hh	/^    Stats::Scalar renameSquashedInsts;$/;"	m	class:DefaultRename
renameSrcRegs	rename_impl.hh	/^DefaultRename<Impl>::renameSrcRegs(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultRename
renameStatus	rename.hh	/^    ThreadStatus renameStatus[Impl::MaxThreads];$/;"	m	class:DefaultRename
renameTick	dyn_inst.hh	/^    int32_t renameTick;  \/\/ instruction enters rename phase$/;"	m	class:BaseO3DynInst
renameToDecodeDelay	O3CPU.py	/^    renameToDecodeDelay = Param.Cycles(1, "Rename to decode delay")$/;"	v	class:DerivO3CPU
renameToDecodeDelay	decode.hh	/^    Cycles renameToDecodeDelay;$/;"	m	class:DefaultDecode
renameToFetchDelay	O3CPU.py	/^    renameToFetchDelay = Param.Cycles(1 ,"Rename to fetch delay")$/;"	v	class:DerivO3CPU
renameToFetchDelay	fetch.hh	/^    Cycles renameToFetchDelay;$/;"	m	class:DefaultFetch
renameToIEWDelay	O3CPU.py	/^    renameToIEWDelay = Param.Cycles(2, "Rename to "$/;"	v	class:DerivO3CPU
renameToIEWDelay	iew.hh	/^    Cycles renameToIEWDelay;$/;"	m	class:DefaultIEW
renameToROBDelay	O3CPU.py	/^    renameToROBDelay = Param.Cycles(1, "Rename to reorder buffer delay")$/;"	v	class:DerivO3CPU
renameToROBDelay	commit.hh	/^    const Cycles renameToROBDelay;$/;"	m	class:DefaultCommit
renameUnblock	comm.hh	/^    bool renameUnblock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
renameUnblockCycles	rename.hh	/^    Stats::Scalar renameUnblockCycles;$/;"	m	class:DefaultRename
renameUndoneMaps	rename.hh	/^    Stats::Scalar renameUndoneMaps;$/;"	m	class:DefaultRename
renameWidth	O3CPU.py	/^    renameWidth = Param.Unsigned(8, "Rename width")$/;"	v	class:DerivO3CPU
renameWidth	commit.hh	/^    const unsigned renameWidth;$/;"	m	class:DefaultCommit
renameWidth	rename.hh	/^    unsigned renameWidth;$/;"	m	class:DefaultRename
renamedSerializing	rename.hh	/^    Stats::Scalar renamedSerializing;$/;"	m	class:DefaultRename
renamedTempSerializing	rename.hh	/^    Stats::Scalar renamedTempSerializing;$/;"	m	class:DefaultRename
replay	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::replay()$/;"	f	class:MemDepUnit
replayMemInst	iew_impl.hh	/^DefaultIEW<Impl>::replayMemInst(DynInstPtr &inst)$/;"	f	class:DefaultIEW
replayMemInst	inst_queue_impl.hh	/^InstructionQueue<Impl>::replayMemInst(DynInstPtr &replay_inst)$/;"	f	class:InstructionQueue
req	fetch.hh	/^        RequestPtr req;$/;"	m	class:DefaultFetch::FinishTranslationEvent
req	lsq_unit.hh	/^        RequestPtr req;$/;"	m	struct:LSQUnit::SQEntry
reqFlags	probe/elastic_trace.hh	/^        Request::FlagsType reqFlags;$/;"	m	struct:ElasticTrace::TraceInfo
require_caches	O3CPU.py	/^    def require_caches(cls):$/;"	m	class:DerivO3CPU
reschedule	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::reschedule(DynInstPtr &inst)$/;"	f	class:MemDepUnit
rescheduleMemInst	iew_impl.hh	/^DefaultIEW<Impl>::rescheduleMemInst(DynInstPtr &inst)$/;"	f	class:DefaultIEW
rescheduleMemInst	inst_queue_impl.hh	/^InstructionQueue<Impl>::rescheduleMemInst(DynInstPtr &resched_inst)$/;"	f	class:InstructionQueue
reset	dep_graph.hh	/^DependencyGraph<DynInstPtr>::reset()$/;"	f	class:DependencyGraph
resetEntries	iew_impl.hh	/^DefaultIEW<Impl>::resetEntries()$/;"	f	class:DefaultIEW
resetEntries	inst_queue_impl.hh	/^InstructionQueue<Impl>::resetEntries()$/;"	f	class:InstructionQueue
resetEntries	lsq_impl.hh	/^LSQ<Impl>::resetEntries()$/;"	f	class:LSQ
resetEntries	rob_impl.hh	/^ROB<Impl>::resetEntries()$/;"	f	class:ROB
resetStage	decode_impl.hh	/^DefaultDecode<Impl>::resetStage()$/;"	f	class:DefaultDecode
resetStage	fetch_impl.hh	/^DefaultFetch<Impl>::resetStage()$/;"	f	class:DefaultFetch
resetStage	rename_impl.hh	/^DefaultRename<Impl>::resetStage()$/;"	f	class:DefaultRename
resetState	inst_queue_impl.hh	/^InstructionQueue<Impl>::resetState()$/;"	f	class:InstructionQueue
resetState	lsq_unit_impl.hh	/^LSQUnit<Impl>::resetState()$/;"	f	class:LSQUnit
resetState	rob_impl.hh	/^ROB<Impl>::resetState()$/;"	f	class:ROB
resize	dep_graph.hh	/^DependencyGraph<DynInstPtr>::resize(int num_entries)$/;"	f	class:DependencyGraph
resizeEntries	lsq_impl.hh	/^LSQ<Impl>::resizeEntries(unsigned size, ThreadID tid)$/;"	f	class:LSQ
resizeLQ	lsq_unit_impl.hh	/^LSQUnit<Impl>::resizeLQ(unsigned size)$/;"	f	class:LSQUnit
resizeSQ	lsq_unit_impl.hh	/^LSQUnit<Impl>::resizeSQ(unsigned size)$/;"	f	class:LSQUnit
resumeSerialize	rename.hh	/^    bool resumeSerialize;$/;"	m	class:DefaultRename
resumeUnblocking	rename.hh	/^    bool resumeUnblocking;$/;"	m	class:DefaultRename
retireHead	rob_impl.hh	/^ROB<Impl>::retireHead(ThreadID tid)$/;"	f	class:ROB
retryMemInsts	inst_queue.hh	/^    std::list<DynInstPtr> retryMemInsts;$/;"	m	class:InstructionQueue
retryPkt	fetch.hh	/^    PacketPtr retryPkt;$/;"	m	class:DefaultFetch
retryPkt	lsq_unit.hh	/^    PacketPtr retryPkt;$/;"	m	class:LSQUnit
retryTid	fetch.hh	/^    ThreadID retryTid;$/;"	m	class:DefaultFetch
rob	commit.hh	/^    ROB *rob;$/;"	m	class:DefaultCommit
rob	cpu.hh	/^    typename CPUPolicy::ROB rob;$/;"	m	class:FullO3CPU
robDepList	probe/elastic_trace.hh	/^        std::list<InstSeqNum> robDepList;$/;"	m	struct:ElasticTrace::TraceInfo
robEntries	rename.hh	/^        unsigned robEntries;$/;"	m	struct:DefaultRename::FreeEntries
robInfoFromIEW	commit.hh	/^    typename TimeBuffer<TimeStruct>::wire robInfoFromIEW;$/;"	m	class:DefaultCommit
robPolicy	rob.hh	/^    ROBPolicy robPolicy;$/;"	m	class:ROB
robReads	rob.hh	/^    Stats::Scalar robReads;$/;"	m	class:ROB
robSquashing	comm.hh	/^        bool robSquashing; \/\/ *F, D, R, I$/;"	m	struct:TimeBufStruct::commitComm
robStatus	rob.hh	/^    Status robStatus[Impl::MaxThreads];$/;"	m	class:ROB
robWrites	rob.hh	/^    Stats::Scalar robWrites;$/;"	m	class:ROB
roundRobin	commit_impl.hh	/^DefaultCommit<Impl>::roundRobin()$/;"	f	class:DefaultCommit
roundRobin	fetch_impl.hh	/^DefaultFetch<Impl>::roundRobin()$/;"	f	class:DefaultFetch
scheduleNonSpec	inst_queue_impl.hh	/^InstructionQueue<Impl>::scheduleNonSpec(const InstSeqNum &inst)$/;"	f	class:InstructionQueue
scheduleReadyInsts	inst_queue_impl.hh	/^InstructionQueue<Impl>::scheduleReadyInsts()$/;"	f	class:InstructionQueue
scheduleTickEvent	cpu.hh	/^    void scheduleTickEvent(Cycles delay)$/;"	f	class:FullO3CPU
scoreboard	cpu.hh	/^    Scoreboard scoreboard;$/;"	m	class:FullO3CPU
scoreboard	iew.hh	/^    Scoreboard* scoreboard;$/;"	m	class:DefaultIEW
scoreboard	rename.hh	/^    Scoreboard *scoreboard;$/;"	m	class:DefaultRename
sendStore	lsq_unit_impl.hh	/^LSQUnit<Impl>::sendStore(PacketPtr data_pkt)$/;"	f	class:LSQUnit
serializeAfter	rename_impl.hh	/^DefaultRename<Impl>::serializeAfter(InstQueue &inst_list, ThreadID tid)$/;"	f	class:DefaultRename
serializeInst	rename.hh	/^    DynInstPtr serializeInst[Impl::MaxThreads];$/;"	m	class:DefaultRename
serializeOnNextInst	rename.hh	/^    bool serializeOnNextInst[Impl::MaxThreads];$/;"	m	class:DefaultRename
serializeThread	cpu.cc	/^FullO3CPU<Impl>::serializeThread(CheckpointOut &cp, ThreadID tid) const$/;"	f	class:FullO3CPU
setActiveThreads	commit_impl.hh	/^DefaultCommit<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:DefaultCommit
setActiveThreads	decode_impl.hh	/^DefaultDecode<Impl>::setActiveThreads(std::list<ThreadID> *at_ptr)$/;"	f	class:DefaultDecode
setActiveThreads	fetch_impl.hh	/^DefaultFetch<Impl>::setActiveThreads(std::list<ThreadID> *at_ptr)$/;"	f	class:DefaultFetch
setActiveThreads	iew_impl.hh	/^DefaultIEW<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:DefaultIEW
setActiveThreads	inst_queue_impl.hh	/^InstructionQueue<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:InstructionQueue
setActiveThreads	lsq_impl.hh	/^LSQ<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:LSQ
setActiveThreads	rename_impl.hh	/^DefaultRename<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:DefaultRename
setActiveThreads	rob_impl.hh	/^ROB<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:ROB
setArchCCReg	cpu.cc	/^FullO3CPU<Impl>::setArchCCReg(int reg_idx, CCReg val, ThreadID tid)$/;"	f	class:FullO3CPU
setArchFloatReg	cpu.cc	/^FullO3CPU<Impl>::setArchFloatReg(int reg_idx, float val, ThreadID tid)$/;"	f	class:FullO3CPU
setArchFloatRegInt	cpu.cc	/^FullO3CPU<Impl>::setArchFloatRegInt(int reg_idx, uint64_t val, ThreadID tid)$/;"	f	class:FullO3CPU
setArchIntReg	cpu.cc	/^FullO3CPU<Impl>::setArchIntReg(int reg_idx, uint64_t val, ThreadID tid)$/;"	f	class:FullO3CPU
setArchVecElem	cpu.cc	/^FullO3CPU<Impl>::setArchVecElem(const RegIndex& reg_idx, const ElemIndex& ldx,$/;"	f	class:FullO3CPU
setArchVecLane	cpu.hh	/^    setArchVecLane(int reg_idx, int lId, ThreadID tid, const LD& val)$/;"	f	class:FullO3CPU
setArchVecReg	cpu.cc	/^FullO3CPU<Impl>::setArchVecReg(int reg_idx, const VecRegContainer& val,$/;"	f	class:FullO3CPU
setCCReg	cpu.cc	/^FullO3CPU<Impl>::setCCReg(PhysRegIdPtr phys_reg, CCReg val)$/;"	f	class:FullO3CPU
setCCReg	regfile.hh	/^    void setCCReg(PhysRegIdPtr phys_reg, CCReg val)$/;"	f	class:PhysRegFile
setCCReg	thread_context.hh	/^    virtual void setCCReg(int reg_idx, CCReg val) {$/;"	f	class:O3ThreadContext
setCCRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::setCCRegFlat(int reg_idx, TheISA::CCReg val)$/;"	f	class:O3ThreadContext
setCCRegOperand	dyn_inst.hh	/^    void setCCRegOperand(const StaticInst *si, int idx, CCReg val)$/;"	f	class:BaseO3DynInst
setCommitStage	rename.hh	/^    void setCommitStage(Commit *commit_stage)$/;"	f	class:DefaultRename
setContextId	thread_context.hh	/^    virtual void setContextId(int id) { thread->setContextId(id); }$/;"	f	class:O3ThreadContext
setDcachePort	lsq_unit_impl.hh	/^LSQUnit<Impl>::setDcachePort(MasterPort *dcache_port)$/;"	f	class:LSQUnit
setDecodeQueue	decode_impl.hh	/^DefaultDecode<Impl>::setDecodeQueue(TimeBuffer<DecodeStruct> *dq_ptr)$/;"	f	class:DefaultDecode
setDecodeQueue	rename_impl.hh	/^DefaultRename<Impl>::setDecodeQueue(TimeBuffer<DecodeStruct> *dq_ptr)$/;"	f	class:DefaultRename
setEntry	rename_map.hh	/^    void setEntry(const RegId& arch_reg, PhysRegIdPtr phys_reg)$/;"	f	class:SimpleRenameMap
setEntry	rename_map.hh	/^    void setEntry(const RegId& arch_reg, PhysRegIdPtr phys_reg)$/;"	f	class:UnifiedRenameMap
setFault	fetch.hh	/^        void setFault(Fault _fault)$/;"	f	class:DefaultFetch::FinishTranslationEvent
setFetchQueue	commit_impl.hh	/^DefaultCommit<Impl>::setFetchQueue(TimeBuffer<FetchStruct> *fq_ptr)$/;"	f	class:DefaultCommit
setFetchQueue	decode_impl.hh	/^DefaultDecode<Impl>::setFetchQueue(TimeBuffer<FetchStruct> *fq_ptr)$/;"	f	class:DefaultDecode
setFetchQueue	fetch_impl.hh	/^DefaultFetch<Impl>::setFetchQueue(TimeBuffer<FetchStruct> *ftb_ptr)$/;"	f	class:DefaultFetch
setFloatReg	cpu.cc	/^FullO3CPU<Impl>::setFloatReg(PhysRegIdPtr phys_reg, FloatReg val)$/;"	f	class:FullO3CPU
setFloatReg	regfile.hh	/^    void setFloatReg(PhysRegIdPtr phys_reg, FloatReg val)$/;"	f	class:PhysRegFile
setFloatReg	thread_context.hh	/^    virtual void setFloatReg(int reg_idx, FloatReg val) {$/;"	f	class:O3ThreadContext
setFloatRegBits	cpu.cc	/^FullO3CPU<Impl>::setFloatRegBits(PhysRegIdPtr phys_reg, FloatRegBits val)$/;"	f	class:FullO3CPU
setFloatRegBits	regfile.hh	/^    void setFloatRegBits(PhysRegIdPtr phys_reg, FloatRegBits val)$/;"	f	class:PhysRegFile
setFloatRegBits	thread_context.hh	/^    virtual void setFloatRegBits(int reg_idx, FloatRegBits val) {$/;"	f	class:O3ThreadContext
setFloatRegBitsFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::setFloatRegBitsFlat(int reg_idx, FloatRegBits val)$/;"	f	class:O3ThreadContext
setFloatRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::setFloatRegFlat(int reg_idx, FloatReg val)$/;"	f	class:O3ThreadContext
setFloatRegOperand	dyn_inst.hh	/^    void setFloatRegOperand(const StaticInst *si, int idx, FloatReg val)$/;"	f	class:BaseO3DynInst
setFloatRegOperandBits	dyn_inst.hh	/^    void setFloatRegOperandBits(const StaticInst *si, int idx,$/;"	f	class:BaseO3DynInst
setFreeFU	inst_queue.hh	/^        void setFreeFU() { freeFU = true; }$/;"	f	class:InstructionQueue::FUCompletion
setFreeList	rename_impl.hh	/^DefaultRename<Impl>::setFreeList(FreeList *fl_ptr)$/;"	f	class:DefaultRename
setIEWQueue	commit_impl.hh	/^DefaultCommit<Impl>::setIEWQueue(TimeBuffer<IEWStruct> *iq_ptr)$/;"	f	class:DefaultCommit
setIEWQueue	iew_impl.hh	/^DefaultIEW<Impl>::setIEWQueue(TimeBuffer<IEWStruct> *iq_ptr)$/;"	f	class:DefaultIEW
setIEWStage	commit_impl.hh	/^DefaultCommit<Impl>::setIEWStage(IEW *iew_stage)$/;"	f	class:DefaultCommit
setIEWStage	rename.hh	/^    void setIEWStage(IEW *iew_stage)$/;"	f	class:DefaultRename
setIQ	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::setIQ(InstructionQueue<Impl> *iq_ptr)$/;"	f	class:MemDepUnit
setInst	dep_graph.hh	/^    void setInst(PhysRegIndex idx, DynInstPtr &new_inst)$/;"	f	class:DependencyGraph
setIntReg	cpu.cc	/^FullO3CPU<Impl>::setIntReg(PhysRegIdPtr phys_reg, uint64_t val)$/;"	f	class:FullO3CPU
setIntReg	regfile.hh	/^    void setIntReg(PhysRegIdPtr phys_reg, uint64_t val)$/;"	f	class:PhysRegFile
setIntReg	thread_context.hh	/^    virtual void setIntReg(int reg_idx, uint64_t val) {$/;"	f	class:O3ThreadContext
setIntRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::setIntRegFlat(int reg_idx, uint64_t val)$/;"	f	class:O3ThreadContext
setIntRegOperand	dyn_inst.hh	/^    void setIntRegOperand(const StaticInst *si, int idx, IntReg val)$/;"	f	class:BaseO3DynInst
setIssueToExecuteQueue	inst_queue_impl.hh	/^InstructionQueue<Impl>::setIssueToExecuteQueue(TimeBuffer<IssueStruct> *i2e_ptr)$/;"	f	class:InstructionQueue
setMiscReg	cpu.cc	/^FullO3CPU<Impl>::setMiscReg(int misc_reg,$/;"	f	class:FullO3CPU
setMiscReg	dyn_inst.hh	/^    void setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:BaseO3DynInst
setMiscReg	thread_context_impl.hh	/^O3ThreadContext<Impl>::setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:O3ThreadContext
setMiscRegNoEffect	cpu.cc	/^FullO3CPU<Impl>::setMiscRegNoEffect(int misc_reg,$/;"	f	class:FullO3CPU
setMiscRegNoEffect	thread_context_impl.hh	/^O3ThreadContext<Impl>::setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:O3ThreadContext
setMiscRegOperand	dyn_inst.hh	/^    void setMiscRegOperand(const StaticInst *si, int idx,$/;"	f	class:BaseO3DynInst
setProcessPtr	thread_context.hh	/^    virtual void setProcessPtr(Process *p) { thread->setProcessPtr(p); }$/;"	f	class:O3ThreadContext
setROB	commit_impl.hh	/^DefaultCommit<Impl>::setROB(ROB *rob_ptr)$/;"	f	class:DefaultCommit
setReg	scoreboard.hh	/^    void setReg(PhysRegIdPtr phys_reg)$/;"	f	class:Scoreboard
setRegOtherThread	dyn_inst.hh	/^    void setRegOtherThread(const RegId& misc_reg, MiscReg val, ThreadID tid)$/;"	f	class:BaseO3DynInst
setRenameMap	commit_impl.hh	/^DefaultCommit<Impl>::setRenameMap(RenameMap rm_ptr[])$/;"	f	class:DefaultCommit
setRenameMap	rename_impl.hh	/^DefaultRename<Impl>::setRenameMap(RenameMap rm_ptr[])$/;"	f	class:DefaultRename
setRenameQueue	commit_impl.hh	/^DefaultCommit<Impl>::setRenameQueue(TimeBuffer<RenameStruct> *rq_ptr)$/;"	f	class:DefaultCommit
setRenameQueue	iew_impl.hh	/^DefaultIEW<Impl>::setRenameQueue(TimeBuffer<RenameStruct> *rq_ptr)$/;"	f	class:DefaultIEW
setRenameQueue	rename_impl.hh	/^DefaultRename<Impl>::setRenameQueue(TimeBuffer<RenameStruct> *rq_ptr)$/;"	f	class:DefaultRename
setReq	fetch.hh	/^        void setReq(RequestPtr _req)$/;"	f	class:DefaultFetch::FinishTranslationEvent
setScoreboard	iew_impl.hh	/^DefaultIEW<Impl>::setScoreboard(Scoreboard *sb_ptr)$/;"	f	class:DefaultIEW
setScoreboard	rename_impl.hh	/^DefaultRename<Impl>::setScoreboard(Scoreboard *_scoreboard)$/;"	f	class:DefaultRename
setStCondFailures	thread_context.hh	/^    virtual void setStCondFailures(unsigned sc_failures)$/;"	f	class:O3ThreadContext
setStatus	thread_context.hh	/^    virtual void setStatus(Status new_status)$/;"	f	class:O3ThreadContext
setThreadId	thread_context.hh	/^    virtual void setThreadId(int id) { return thread->setThreadId(id); }$/;"	f	class:O3ThreadContext
setThreads	commit_impl.hh	/^DefaultCommit<Impl>::setThreads(std::vector<Thread *> &threads)$/;"	f	class:DefaultCommit
setTimeBuffer	commit_impl.hh	/^DefaultCommit<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultCommit
setTimeBuffer	decode_impl.hh	/^DefaultDecode<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultDecode
setTimeBuffer	fetch_impl.hh	/^DefaultFetch<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *time_buffer)$/;"	f	class:DefaultFetch
setTimeBuffer	iew_impl.hh	/^DefaultIEW<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultIEW
setTimeBuffer	inst_queue_impl.hh	/^InstructionQueue<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:InstructionQueue
setTimeBuffer	rename_impl.hh	/^DefaultRename<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultRename
setVecElem	cpu.cc	/^FullO3CPU<Impl>::setVecElem(PhysRegIdPtr phys_reg, const VecElem& val)$/;"	f	class:FullO3CPU
setVecElem	regfile.hh	/^    void setVecElem(PhysRegIdPtr phys_reg, const VecElem val)$/;"	f	class:PhysRegFile
setVecElem	thread_context.hh	/^    virtual void setVecElem(const RegId& reg, const VecElem& val) {$/;"	f	class:O3ThreadContext
setVecElemFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::setVecElemFlat(const RegIndex& idx,$/;"	f	class:O3ThreadContext
setVecElemOperand	dyn_inst.hh	/^    void setVecElemOperand(const StaticInst *si, int idx,$/;"	f	class:BaseO3DynInst
setVecLane	cpu.hh	/^    setVecLane(PhysRegIdPtr phys_reg, const LD& val)$/;"	f	class:FullO3CPU
setVecLane	regfile.hh	/^    setVecLane(PhysRegIdPtr phys_reg, const LD& val)$/;"	f	class:PhysRegFile
setVecLane	thread_context.hh	/^    virtual void setVecLane(const RegId& reg,$/;"	f	class:O3ThreadContext
setVecLaneFlat	thread_context.hh	/^    void setVecLaneFlat(int idx, int lId, const LD& val)$/;"	f	class:O3ThreadContext
setVecLaneOperand	dyn_inst.hh	/^    setVecLaneOperand(const StaticInst *si, int idx,$/;"	f	class:BaseO3DynInst
setVecLaneOperandT	dyn_inst.hh	/^    setVecLaneOperandT(const StaticInst *si, int idx, const LD& val)$/;"	f	class:BaseO3DynInst
setVecReg	cpu.cc	/^FullO3CPU<Impl>::setVecReg(PhysRegIdPtr phys_reg, const VecRegContainer& val)$/;"	f	class:FullO3CPU
setVecReg	regfile.hh	/^    void setVecReg(PhysRegIdPtr phys_reg, const VecRegContainer& val)$/;"	f	class:PhysRegFile
setVecReg	thread_context.hh	/^    virtual void setVecReg(const RegId& reg, const VecRegContainer& val) {$/;"	f	class:O3ThreadContext
setVecRegFlat	thread_context_impl.hh	/^O3ThreadContext<Impl>::setVecRegFlat(int reg_idx, const VecRegContainer& val)$/;"	f	class:O3ThreadContext
setVecRegOperand	dyn_inst.hh	/^    setVecRegOperand(const StaticInst *si, int idx,$/;"	f	class:BaseO3DynInst
simPalCheck	cpu.cc	/^FullO3CPU<Impl>::simPalCheck(int palFunc, ThreadID tid)$/;"	f	class:FullO3CPU
simPalCheck	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::simPalCheck(int palFunc)$/;"	f	class:BaseO3DynInst
size	comm.hh	/^    int size;$/;"	m	struct:DefaultDecodeDefaultRename
size	comm.hh	/^    int size;$/;"	m	struct:DefaultFetchDefaultDecode
size	comm.hh	/^    int size;$/;"	m	struct:DefaultIEWDefaultCommit
size	comm.hh	/^    int size;$/;"	m	struct:DefaultRenameDefaultIEW
size	comm.hh	/^    int size;$/;"	m	struct:IssueStruct
size	fu_pool.hh	/^        int size;$/;"	m	class:FUPool::FUIdxQueue
size	fu_pool.hh	/^    int size() { return numFU; }$/;"	f	class:FUPool
size	lsq_unit.hh	/^        uint8_t size;$/;"	m	struct:LSQUnit::SQEntry
size	probe/elastic_trace.hh	/^        unsigned size;$/;"	m	struct:ElasticTrace::TraceInfo
skidBuffer	decode.hh	/^    std::queue<DynInstPtr> skidBuffer[Impl::MaxThreads];$/;"	m	class:DefaultDecode
skidBuffer	iew.hh	/^    std::queue<DynInstPtr> skidBuffer[Impl::MaxThreads];$/;"	m	class:DefaultIEW
skidBuffer	rename.hh	/^    InstQueue skidBuffer[Impl::MaxThreads];$/;"	m	class:DefaultRename
skidBufferMax	decode.hh	/^    unsigned skidBufferMax;$/;"	m	class:DefaultDecode
skidBufferMax	iew.hh	/^    unsigned skidBufferMax;$/;"	m	class:DefaultIEW
skidBufferMax	rename.hh	/^    unsigned skidBufferMax;$/;"	m	class:DefaultRename
skidCount	iew_impl.hh	/^DefaultIEW<Impl>::skidCount()$/;"	f	class:DefaultIEW
skidInsert	decode_impl.hh	/^DefaultDecode<Impl>::skidInsert(ThreadID tid)$/;"	f	class:DefaultDecode
skidInsert	iew_impl.hh	/^DefaultIEW<Impl>::skidInsert(ThreadID tid)$/;"	f	class:DefaultIEW
skidInsert	rename_impl.hh	/^DefaultRename<Impl>::skidInsert(ThreadID tid)$/;"	f	class:DefaultRename
skidsEmpty	decode_impl.hh	/^DefaultDecode<Impl>::skidsEmpty()$/;"	f	class:DefaultDecode
skidsEmpty	iew_impl.hh	/^DefaultIEW<Impl>::skidsEmpty()$/;"	f	class:DefaultIEW
skidsEmpty	rename_impl.hh	/^DefaultRename<Impl>::skidsEmpty()$/;"	f	class:DefaultRename
smtCommitPolicy	O3CPU.py	/^    smtCommitPolicy = Param.String('RoundRobin', "SMT Commit Policy")$/;"	v	class:DerivO3CPU
smtFetchPolicy	O3CPU.py	/^    smtFetchPolicy = Param.String('SingleThread', "SMT Fetch policy")$/;"	v	class:DerivO3CPU
smtIQPolicy	O3CPU.py	/^    smtIQPolicy    = Param.String('Partitioned', "SMT IQ Sharing Policy")$/;"	v	class:DerivO3CPU
smtIQThreshold	O3CPU.py	/^    smtIQThreshold = Param.Int(100, "SMT IQ Threshold Sharing Parameter")$/;"	v	class:DerivO3CPU
smtLSQPolicy	O3CPU.py	/^    smtLSQPolicy    = Param.String('Partitioned', "SMT LSQ Sharing Policy")$/;"	v	class:DerivO3CPU
smtLSQThreshold	O3CPU.py	/^    smtLSQThreshold = Param.Int(100, "SMT LSQ Threshold Sharing Parameter")$/;"	v	class:DerivO3CPU
smtNumFetchingThreads	O3CPU.py	/^    smtNumFetchingThreads = Param.Unsigned(1, "SMT Number of Fetching Threads")$/;"	v	class:DerivO3CPU
smtROBPolicy	O3CPU.py	/^    smtROBPolicy   = Param.String('Partitioned', "SMT ROB Sharing Policy")$/;"	v	class:DerivO3CPU
smtROBThreshold	O3CPU.py	/^    smtROBThreshold = Param.Int(100, "SMT ROB Threshold Sharing Parameter")$/;"	v	class:DerivO3CPU
snList	cpu.hh	/^    std::set<InstSeqNum> snList;$/;"	m	class:FullO3CPU
socketId	thread_context.hh	/^    virtual uint32_t socketId() const { return cpu->socketId(); }$/;"	f	class:O3ThreadContext
sortInsts	decode_impl.hh	/^DefaultDecode<Impl>::sortInsts()$/;"	f	class:DefaultDecode
sortInsts	iew_impl.hh	/^DefaultIEW<Impl>::sortInsts()$/;"	f	class:DefaultIEW
sortInsts	rename_impl.hh	/^DefaultRename<Impl>::sortInsts()$/;"	f	class:DefaultRename
sqEmpty	lsq_impl.hh	/^LSQ<Impl>::sqEmpty() const$/;"	f	class:LSQ
sqEmpty	lsq_unit.hh	/^    bool sqEmpty() const { return stores == 0; }$/;"	f	class:LSQUnit
sqEntries	rename.hh	/^        unsigned sqEntries;$/;"	m	struct:DefaultRename::FreeEntries
sqFull	lsq_impl.hh	/^LSQ<Impl>::sqFull()$/;"	f	class:LSQ
sqFull	lsq_impl.hh	/^LSQ<Impl>::sqFull(ThreadID tid)$/;"	f	class:LSQ
sqFull	lsq_unit.hh	/^    bool sqFull() { return stores >= (SQEntries - 1); }$/;"	f	class:LSQUnit
squash	comm.hh	/^        bool squash; \/\/ *F, D, R, I$/;"	m	struct:TimeBufStruct::commitComm
squash	comm.hh	/^        bool squash;$/;"	m	struct:TimeBufStruct::decodeComm
squash	comm.hh	/^    bool squash[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
squash	decode_impl.hh	/^DefaultDecode<Impl>::squash(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultDecode
squash	decode_impl.hh	/^DefaultDecode<Impl>::squash(ThreadID tid)$/;"	f	class:DefaultDecode
squash	fetch_impl.hh	/^DefaultFetch<Impl>::squash(const TheISA::PCState &newPC,$/;"	f	class:DefaultFetch
squash	iew_impl.hh	/^DefaultIEW<Impl>::squash(ThreadID tid)$/;"	f	class:DefaultIEW
squash	inst_queue_impl.hh	/^InstructionQueue<Impl>::squash(ThreadID tid)$/;"	f	class:InstructionQueue
squash	lsq.hh	/^    void squash(const InstSeqNum &squashed_num, ThreadID tid)$/;"	f	class:LSQ
squash	lsq_unit_impl.hh	/^LSQUnit<Impl>::squash(const InstSeqNum &squashed_num)$/;"	f	class:LSQUnit
squash	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::squash(const InstSeqNum &squashed_num,$/;"	f	class:MemDepUnit
squash	rename_impl.hh	/^DefaultRename<Impl>::squash(const InstSeqNum &squash_seq_num, ThreadID tid)$/;"	f	class:DefaultRename
squash	rob_impl.hh	/^ROB<Impl>::squash(InstSeqNum squash_num, ThreadID tid)$/;"	f	class:ROB
squash	store_set.cc	/^StoreSet::squash(InstSeqNum squashed_num, ThreadID tid)$/;"	f	class:StoreSet
squashAfter	commit_impl.hh	/^DefaultCommit<Impl>::squashAfter(ThreadID tid, DynInstPtr &head_inst)$/;"	f	class:DefaultCommit
squashAfterDelaySlot	decode.hh	/^    bool squashAfterDelaySlot[Impl::MaxThreads];$/;"	m	class:DefaultDecode
squashAfterInst	commit.hh	/^    DynInstPtr squashAfterInst[Impl::MaxThreads];$/;"	m	class:DefaultCommit
squashAll	commit_impl.hh	/^DefaultCommit<Impl>::squashAll(ThreadID tid)$/;"	f	class:DefaultCommit
squashDueToBranch	iew_impl.hh	/^DefaultIEW<Impl>::squashDueToBranch(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultIEW
squashDueToMemOrder	iew_impl.hh	/^DefaultIEW<Impl>::squashDueToMemOrder(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultIEW
squashFromDecode	fetch_impl.hh	/^DefaultFetch<Impl>::squashFromDecode(const TheISA::PCState &newPC,$/;"	f	class:DefaultFetch
squashFromSquashAfter	commit_impl.hh	/^DefaultCommit<Impl>::squashFromSquashAfter(ThreadID tid)$/;"	f	class:DefaultCommit
squashFromTC	commit_impl.hh	/^DefaultCommit<Impl>::squashFromTC(ThreadID tid)$/;"	f	class:DefaultCommit
squashFromTC	cpu.cc	/^FullO3CPU<Impl>::squashFromTC(ThreadID tid)$/;"	f	class:FullO3CPU
squashFromTrap	commit_impl.hh	/^DefaultCommit<Impl>::squashFromTrap(ThreadID tid)$/;"	f	class:DefaultCommit
squashInst	comm.hh	/^        DynInstPtr squashInst; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
squashInst	comm.hh	/^        DynInstPtr squashInst;$/;"	m	struct:TimeBufStruct::decodeComm
squashInst	decode.hh	/^    DynInstPtr squashInst[Impl::MaxThreads];$/;"	m	class:DefaultDecode
squashInstIt	cpu.cc	/^FullO3CPU<Impl>::squashInstIt(const ListIt &instIt, ThreadID tid)$/;"	f	class:FullO3CPU
squashIt	rob.hh	/^    InstIt squashIt[Impl::MaxThreads];$/;"	m	class:ROB
squashWidth	O3CPU.py	/^    squashWidth = Param.Unsigned(8, "Squash width")$/;"	v	class:DerivO3CPU
squashWidth	rob.hh	/^    unsigned squashWidth;$/;"	m	class:ROB
squashed	mem_dep_unit.hh	/^        bool squashed;$/;"	m	class:MemDepUnit::MemDepEntry
squashedSeqNum	comm.hh	/^    InstSeqNum squashedSeqNum[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
squashedSeqNum	inst_queue.hh	/^    InstSeqNum squashedSeqNum[Impl::MaxThreads];$/;"	m	class:InstructionQueue
squashedSeqNum	rob.hh	/^    InstSeqNum squashedSeqNum[Impl::MaxThreads];$/;"	m	class:ROB
sreqHigh	lsq_unit.hh	/^        RequestPtr sreqHigh;$/;"	m	struct:LSQUnit::SQEntry
sreqLow	lsq_unit.hh	/^        RequestPtr sreqLow;$/;"	m	struct:LSQUnit::SQEntry
stalled	lsq_unit.hh	/^    bool stalled;$/;"	m	class:LSQUnit
stallingLoadIdx	lsq_unit.hh	/^    int stallingLoadIdx;$/;"	m	class:LSQUnit
stallingStoreIsn	lsq_unit.hh	/^    InstSeqNum stallingStoreIsn;$/;"	m	class:LSQUnit
stalls	decode.hh	/^    Stalls stalls[Impl::MaxThreads];$/;"	m	class:DefaultDecode
stalls	fetch.hh	/^    Stalls stalls[Impl::MaxThreads];$/;"	m	class:DefaultFetch
stalls	rename.hh	/^    Stalls stalls[Impl::MaxThreads];$/;"	m	class:DefaultRename
startTraceInst	probe/ElasticTrace.py	/^                                    "committed instruction.")$/;"	v	class:ElasticTrace
startTraceInst	probe/elastic_trace.hh	/^    const InstSeqNum startTraceInst;$/;"	m	class:ElasticTrace
startup	cpu.cc	/^FullO3CPU<Impl>::startup()$/;"	f	class:FullO3CPU
startupStage	commit_impl.hh	/^DefaultCommit<Impl>::startupStage()$/;"	f	class:DefaultCommit
startupStage	decode_impl.hh	/^DefaultDecode<Impl>::startupStage()$/;"	f	class:DefaultDecode
startupStage	fetch_impl.hh	/^DefaultFetch<Impl>::startupStage()$/;"	f	class:DefaultFetch
startupStage	iew_impl.hh	/^DefaultIEW<Impl>::startupStage()$/;"	f	class:DefaultIEW
startupStage	rename_impl.hh	/^DefaultRename<Impl>::startupStage()$/;"	f	class:DefaultRename
statComBranches	commit.hh	/^    Stats::Vector statComBranches;$/;"	m	class:DefaultCommit
statComFloating	commit.hh	/^    Stats::Vector statComFloating;$/;"	m	class:DefaultCommit
statComFunctionCalls	commit.hh	/^    Stats::Vector statComFunctionCalls;$/;"	m	class:DefaultCommit
statComInteger	commit.hh	/^    Stats::Vector statComInteger;$/;"	m	class:DefaultCommit
statComLoads	commit.hh	/^    Stats::Vector statComLoads;$/;"	m	class:DefaultCommit
statComMembars	commit.hh	/^    Stats::Vector statComMembars;$/;"	m	class:DefaultCommit
statComRefs	commit.hh	/^    Stats::Vector statComRefs;$/;"	m	class:DefaultCommit
statComSwp	commit.hh	/^    Stats::Vector statComSwp;$/;"	m	class:DefaultCommit
statComVector	commit.hh	/^    Stats::Vector statComVector;$/;"	m	class:DefaultCommit
statCommittedInstType	commit.hh	/^    Stats::Vector2d statCommittedInstType;$/;"	m	class:DefaultCommit
statFuBusy	inst_queue.hh	/^    Stats::Vector statFuBusy;$/;"	m	class:InstructionQueue
statIssuedInstType	inst_queue.hh	/^    Stats::Vector2d statIssuedInstType;$/;"	m	class:InstructionQueue
status	thread_context.hh	/^    virtual Status status() const { return thread->status(); }$/;"	f	class:O3ThreadContext
storeBarrier	mem_dep_unit.hh	/^    bool storeBarrier;$/;"	m	class:MemDepUnit
storeBarrierSN	mem_dep_unit.hh	/^    InstSeqNum storeBarrierSN;$/;"	m	class:MemDepUnit
storeHead	lsq_unit.hh	/^    int storeHead;$/;"	m	class:LSQUnit
storeInFlight	lsq_unit.hh	/^    bool storeInFlight;$/;"	m	class:LSQUnit
storeList	store_set.hh	/^    std::map<InstSeqNum, int, ltseqnum> storeList;$/;"	m	class:StoreSet
storePostSend	lsq_unit_impl.hh	/^LSQUnit<Impl>::storePostSend(PacketPtr pkt)$/;"	f	class:LSQUnit
storeQueue	lsq_unit.hh	/^    std::vector<SQEntry> storeQueue;$/;"	m	class:LSQUnit
storeTail	lsq_unit.hh	/^    int storeTail;$/;"	m	class:LSQUnit
storeTick	dyn_inst.hh	/^    int32_t storeTick;$/;"	m	class:BaseO3DynInst
storeWBIdx	lsq_unit.hh	/^    int storeWBIdx;$/;"	m	class:LSQUnit
store_set_clear_period	O3CPU.py	/^    store_set_clear_period = Param.Unsigned(250000,$/;"	v	class:DerivO3CPU
stores	lsq_unit.hh	/^    int stores;$/;"	m	class:LSQUnit
storesInProgress	rename.hh	/^    int storesInProgress[Impl::MaxThreads];$/;"	m	class:DefaultRename
storesToWB	lsq_unit.hh	/^    int storesToWB;$/;"	m	class:LSQUnit
strictlyOrdered	comm.hh	/^        bool strictlyOrdered; \/\/ *I$/;"	m	struct:TimeBufStruct::commitComm
strictlyOrderedLoad	comm.hh	/^        DynInstPtr strictlyOrderedLoad; \/\/ *I$/;"	m	struct:TimeBufStruct::commitComm
support_take_over	O3CPU.py	/^    def support_take_over(cls):$/;"	m	class:DerivO3CPU
suspend	thread_context_impl.hh	/^O3ThreadContext<Impl>::suspend()$/;"	f	class:O3ThreadContext
suspendContext	cpu.cc	/^FullO3CPU<Impl>::suspendContext(ThreadID tid)$/;"	f	class:FullO3CPU
switchMode	rename_map.cc	/^UnifiedRenameMap::switchMode(VecMode newVecMode, UnifiedFreeList* freeList)$/;"	f	class:UnifiedRenameMap
switchOut	cpu.cc	/^FullO3CPU<Impl>::switchOut()$/;"	f	class:FullO3CPU
switchToActive	fetch_impl.hh	/^DefaultFetch<Impl>::switchToActive()$/;"	f	class:DefaultFetch
switchToInactive	fetch_impl.hh	/^DefaultFetch<Impl>::switchToInactive()$/;"	f	class:DefaultFetch
syscall	cpu.cc	/^FullO3CPU<Impl>::syscall(int64_t callnum, ThreadID tid, Fault *fault)$/;"	f	class:FullO3CPU
syscall	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::syscall(int64_t callnum, Fault *fault)$/;"	f	class:BaseO3DynInst
syscall	thread_context.hh	/^    virtual void syscall(int64_t callnum, Fault *fault)$/;"	f	class:O3ThreadContext
syscall	thread_state.hh	/^    void syscall(int64_t callnum, Fault *fault)$/;"	f	struct:O3ThreadState
system	cpu.hh	/^    System *system;$/;"	m	class:FullO3CPU
tail	rob.hh	/^    InstIt tail;$/;"	m	class:ROB
takeOverFrom	commit_impl.hh	/^DefaultCommit<Impl>::takeOverFrom()$/;"	f	class:DefaultCommit
takeOverFrom	cpu.cc	/^FullO3CPU<Impl>::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:FullO3CPU
takeOverFrom	decode.hh	/^    void takeOverFrom() { resetStage(); }$/;"	f	class:DefaultDecode
takeOverFrom	fetch_impl.hh	/^DefaultFetch<Impl>::takeOverFrom()$/;"	f	class:DefaultFetch
takeOverFrom	fu_pool.hh	/^    void takeOverFrom() {};$/;"	f	class:FUPool
takeOverFrom	iew_impl.hh	/^DefaultIEW<Impl>::takeOverFrom()$/;"	f	class:DefaultIEW
takeOverFrom	inst_queue_impl.hh	/^InstructionQueue<Impl>::takeOverFrom()$/;"	f	class:InstructionQueue
takeOverFrom	lsq_impl.hh	/^LSQ<Impl>::takeOverFrom()$/;"	f	class:LSQ
takeOverFrom	lsq_unit_impl.hh	/^LSQUnit<Impl>::takeOverFrom()$/;"	f	class:LSQUnit
takeOverFrom	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::takeOverFrom()$/;"	f	class:MemDepUnit
takeOverFrom	rename_impl.hh	/^DefaultRename<Impl>::takeOverFrom()$/;"	f	class:DefaultRename
takeOverFrom	rob_impl.hh	/^ROB<Impl>::takeOverFrom()$/;"	f	class:ROB
takeOverFrom	thread_context_impl.hh	/^O3ThreadContext<Impl>::takeOverFrom(ThreadContext *old_context)$/;"	f	class:O3ThreadContext
tc	thread_state.hh	/^    ThreadContext *tc;$/;"	m	struct:O3ThreadState
tcBase	cpu.hh	/^    tcBase(ThreadID tid)$/;"	f	class:FullO3CPU
tcSquash	commit.hh	/^    bool tcSquash[Impl::MaxThreads];$/;"	m	class:DefaultCommit
tempStore	probe/elastic_trace.hh	/^    std::unordered_map<InstSeqNum, InstExecInfo*> tempStore;$/;"	m	class:ElasticTrace
thread	commit.hh	/^    std::vector<Thread *> thread;$/;"	m	class:DefaultCommit
thread	cpu.hh	/^    std::vector<Thread *> thread;$/;"	m	class:FullO3CPU
thread	lsq.hh	/^    LSQUnit *thread;$/;"	m	class:LSQ
thread	thread_context.hh	/^    O3ThreadState<Impl> *thread;$/;"	m	class:O3ThreadContext
threadEntries	rob.hh	/^    unsigned threadEntries[Impl::MaxThreads];$/;"	m	class:ROB
threadFetched	fetch.hh	/^    ThreadID threadFetched;$/;"	m	class:DefaultFetch
threadId	thread_context.hh	/^    virtual int threadId() const { return thread->threadId(); }$/;"	f	class:O3ThreadContext
threadMap	cpu.hh	/^    std::map<ThreadID, unsigned> threadMap;$/;"	m	class:FullO3CPU
tick	commit_impl.hh	/^DefaultCommit<Impl>::tick()$/;"	f	class:DefaultCommit
tick	cpu.cc	/^FullO3CPU<Impl>::tick()$/;"	f	class:FullO3CPU
tick	decode_impl.hh	/^DefaultDecode<Impl>::tick()$/;"	f	class:DefaultDecode
tick	fetch_impl.hh	/^DefaultFetch<Impl>::tick()$/;"	f	class:DefaultFetch
tick	iew_impl.hh	/^DefaultIEW<Impl>::tick()$/;"	f	class:DefaultIEW
tick	lsq.hh	/^    void tick(ThreadID tid)$/;"	f	class:LSQ
tick	lsq_impl.hh	/^LSQ<Impl>::tick()$/;"	f	class:LSQ
tick	lsq_unit.hh	/^    void tick() { usedStorePorts = 0; }$/;"	f	class:LSQUnit
tick	rename_impl.hh	/^DefaultRename<Impl>::tick()$/;"	f	class:DefaultRename
tickEvent	cpu.hh	/^    EventFunctionWrapper tickEvent;$/;"	m	class:FullO3CPU
tids	cpu.hh	/^    std::vector<ThreadID> tids;$/;"	m	class:FullO3CPU
timeBuffer	commit.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultCommit
timeBuffer	cpu.hh	/^    TimeBuffer<TimeStruct> timeBuffer;$/;"	m	class:FullO3CPU
timeBuffer	decode.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultDecode
timeBuffer	fetch.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultFetch
timeBuffer	iew.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultIEW
timeBuffer	inst_queue.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:InstructionQueue
timeBuffer	rename.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultRename
timesIdled	cpu.hh	/^    Stats::Scalar timesIdled;$/;"	m	class:FullO3CPU
toCommit	iew.hh	/^    typename TimeBuffer<IEWStruct>::wire toCommit;$/;"	m	class:DefaultIEW
toCommitTick	probe/elastic_trace.hh	/^        Tick toCommitTick;$/;"	m	struct:ElasticTrace::InstExecInfo
toCommitTick	probe/elastic_trace.hh	/^        Tick toCommitTick;$/;"	m	struct:ElasticTrace::TraceInfo
toDecode	fetch.hh	/^    typename TimeBuffer<FetchStruct>::wire toDecode;$/;"	m	class:DefaultFetch
toDecode	rename.hh	/^    typename TimeBuffer<TimeStruct>::wire toDecode;$/;"	m	class:DefaultRename
toFetch	decode.hh	/^    typename TimeBuffer<TimeStruct>::wire toFetch;$/;"	m	class:DefaultDecode
toFetch	iew.hh	/^    typename TimeBuffer<TimeStruct>::wire toFetch;$/;"	m	class:DefaultIEW
toIEW	commit.hh	/^    typename TimeBuffer<TimeStruct>::wire toIEW;$/;"	m	class:DefaultCommit
toIEW	rename.hh	/^    typename TimeBuffer<RenameStruct>::wire toIEW;$/;"	m	class:DefaultRename
toIEWIndex	rename.hh	/^    unsigned toIEWIndex;$/;"	m	class:DefaultRename
toRename	decode.hh	/^    typename TimeBuffer<DecodeStruct>::wire toRename;$/;"	m	class:DefaultDecode
toRename	iew.hh	/^    typename TimeBuffer<TimeStruct>::wire toRename;$/;"	m	class:DefaultIEW
toRenameIndex	decode.hh	/^    unsigned toRenameIndex;$/;"	m	class:DefaultDecode
totalCpi	cpu.hh	/^    Stats::Formula totalCpi;$/;"	m	class:FullO3CPU
totalInsts	cpu.cc	/^FullO3CPU<Impl>::totalInsts() const$/;"	f	class:FullO3CPU
totalIpc	cpu.hh	/^    Stats::Formula totalIpc;$/;"	m	class:FullO3CPU
totalNumPhysRegs	regfile.hh	/^    unsigned totalNumPhysRegs() const { return totalNumRegs; }$/;"	f	class:PhysRegFile
totalNumRegs	regfile.hh	/^    unsigned totalNumRegs;$/;"	m	class:PhysRegFile
totalOps	cpu.cc	/^FullO3CPU<Impl>::totalOps() const$/;"	f	class:FullO3CPU
totalWidth	inst_queue.hh	/^    unsigned totalWidth;$/;"	m	class:InstructionQueue
traceCommit	probe/simple_trace.cc	/^void SimpleTrace::traceCommit(const O3CPUImpl::DynInstPtr &dynInst)$/;"	f	class:SimpleTrace
traceFetch	probe/simple_trace.cc	/^void SimpleTrace::traceFetch(const O3CPUImpl::DynInstPtr &dynInst)$/;"	f	class:SimpleTrace
traceInfoMap	probe/elastic_trace.hh	/^    std::unordered_map<InstSeqNum, TraceInfo*> traceInfoMap;$/;"	m	class:ElasticTrace
traceVirtAddr	probe/ElasticTrace.py	/^                                "to be traced.")$/;"	v	class:ElasticTrace
traceVirtAddr	probe/elastic_trace.hh	/^    const bool traceVirtAddr;$/;"	m	class:ElasticTrace
trap	cpu.cc	/^FullO3CPU<Impl>::trap(const Fault &fault, ThreadID tid,$/;"	f	class:FullO3CPU
trap	dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::trap(const Fault &fault)$/;"	f	class:BaseO3DynInst
trapInFlight	commit.hh	/^    bool trapInFlight[Impl::MaxThreads];$/;"	m	class:DefaultCommit
trapLatency	O3CPU.py	/^    trapLatency = Param.Cycles(13, "Trap latency")$/;"	v	class:DerivO3CPU
trapLatency	commit.hh	/^    const Cycles trapLatency;$/;"	m	class:DefaultCommit
trapPending	thread_state.hh	/^    bool trapPending;$/;"	m	struct:O3ThreadState
trapSquash	commit.hh	/^    bool trapSquash[Impl::MaxThreads];$/;"	m	class:DefaultCommit
tryDrain	cpu.cc	/^FullO3CPU<Impl>::tryDrain()$/;"	f	class:FullO3CPU
type	FUPool.py	/^    type = 'FUPool'$/;"	v	class:FUPool
type	O3CPU.py	/^    type = 'DerivO3CPU'$/;"	v	class:DerivO3CPU
type	O3Checker.py	/^    type = 'O3Checker'$/;"	v	class:O3Checker
type	probe/ElasticTrace.py	/^    type = 'ElasticTrace'$/;"	v	class:ElasticTrace
type	probe/SimpleTrace.py	/^    type = 'SimpleTrace'$/;"	v	class:SimpleTrace
type	probe/elastic_trace.hh	/^        RecordType type;$/;"	m	struct:ElasticTrace::TraceInfo
typeToStr	probe/elastic_trace.cc	/^ElasticTrace::TraceInfo::typeToStr() const$/;"	f	class:ElasticTrace::TraceInfo
unblock	decode_impl.hh	/^DefaultDecode<Impl>::unblock(ThreadID tid)$/;"	f	class:DefaultDecode
unblock	iew_impl.hh	/^DefaultIEW<Impl>::unblock(ThreadID tid)$/;"	f	class:DefaultIEW
unblock	rename_impl.hh	/^DefaultRename<Impl>::unblock(ThreadID tid)$/;"	f	class:DefaultRename
unitBusy	fu_pool.hh	/^    std::vector<bool> unitBusy;$/;"	m	class:FUPool
unitsToBeFreed	fu_pool.hh	/^    std::vector<int> unitsToBeFreed;$/;"	m	class:FUPool
unscheduleTickEvent	cpu.hh	/^    void unscheduleTickEvent()$/;"	f	class:FullO3CPU
unserializeThread	cpu.cc	/^FullO3CPU<Impl>::unserializeThread(CheckpointIn &cp, ThreadID tid)$/;"	f	class:FullO3CPU
unsetReg	scoreboard.hh	/^    void unsetReg(PhysRegIdPtr phys_reg)$/;"	f	class:Scoreboard
updateComInstStats	commit_impl.hh	/^DefaultCommit<Impl>::updateComInstStats(DynInstPtr &inst)$/;"	f	class:DefaultCommit
updateCommitOrderDep	probe/elastic_trace.cc	/^ElasticTrace::updateCommitOrderDep(TraceInfo* new_record,$/;"	f	class:ElasticTrace
updateExeInstStats	iew_impl.hh	/^DefaultIEW<Impl>::updateExeInstStats(DynInstPtr &inst)$/;"	f	class:DefaultIEW
updateFetchStatus	fetch_impl.hh	/^DefaultFetch<Impl>::updateFetchStatus()$/;"	f	class:DefaultFetch
updateHead	rob_impl.hh	/^ROB<Impl>::updateHead()$/;"	f	class:ROB
updateIssueOrderDep	probe/elastic_trace.cc	/^ElasticTrace::updateIssueOrderDep(TraceInfo* new_record)$/;"	f	class:ElasticTrace
updateLSQNextCycle	iew.hh	/^    bool updateLSQNextCycle;$/;"	m	class:DefaultIEW
updateMiscRegs	dyn_inst.hh	/^    void updateMiscRegs()$/;"	f	class:BaseO3DynInst
updateRegDep	probe/elastic_trace.cc	/^ElasticTrace::updateRegDep(const DynInstPtr &dyn_inst)$/;"	f	class:ElasticTrace
updateStatus	commit_impl.hh	/^DefaultCommit<Impl>::updateStatus()$/;"	f	class:DefaultCommit
updateStatus	decode_impl.hh	/^DefaultDecode<Impl>::updateStatus()$/;"	f	class:DefaultDecode
updateStatus	iew_impl.hh	/^DefaultIEW<Impl>::updateStatus()$/;"	f	class:DefaultIEW
updateStatus	rename_impl.hh	/^DefaultRename<Impl>::updateStatus()$/;"	f	class:DefaultRename
updateTail	rob_impl.hh	/^ROB<Impl>::updateTail()$/;"	f	class:ROB
updateThreadPriority	cpu.cc	/^FullO3CPU<Impl>::updateThreadPriority()$/;"	f	class:FullO3CPU
updatedQueues	iew.hh	/^    bool updatedQueues;$/;"	m	class:DefaultIEW
usedIQ	comm.hh	/^        bool usedIQ;$/;"	m	struct:TimeBufStruct::iewComm
usedLSQ	comm.hh	/^        bool usedLSQ;$/;"	m	struct:TimeBufStruct::iewComm
usedROB	comm.hh	/^        bool usedROB; \/\/ *R$/;"	m	struct:TimeBufStruct::commitComm
usedStorePorts	lsq_unit.hh	/^    int usedStorePorts;$/;"	m	class:LSQUnit
validInsts	rename_impl.hh	/^DefaultRename<Impl>::validInsts()$/;"	f	class:DefaultRename
validInstsFromRename	iew_impl.hh	/^DefaultIEW<Impl>::validInstsFromRename()$/;"	f	class:DefaultIEW
validLFST	store_set.hh	/^    std::vector<bool> validLFST;$/;"	m	class:StoreSet
validSSIT	store_set.hh	/^    std::vector<bool> validSSIT;$/;"	m	class:StoreSet
vecAluAccesses	inst_queue.hh	/^    Stats::Scalar vecAluAccesses;$/;"	m	class:InstructionQueue
vecElemIds	regfile.hh	/^    std::vector<PhysRegId> vecElemIds;$/;"	m	class:PhysRegFile
vecElemList	free_list.hh	/^    SimpleFreeList vecElemList;$/;"	m	class:UnifiedFreeList
vecElemMap	rename_map.hh	/^    SimpleRenameMap vecElemMap;$/;"	m	class:UnifiedRenameMap
vecInstQueueReads	inst_queue.hh	/^    Stats::Scalar vecInstQueueReads;$/;"	m	class:InstructionQueue
vecInstQueueWakeupAccesses	inst_queue.hh	/^    Stats::Scalar vecInstQueueWakeupAccesses;$/;"	m	class:InstructionQueue
vecInstQueueWrites	inst_queue.hh	/^    Stats::Scalar vecInstQueueWrites;$/;"	m	class:InstructionQueue
vecList	free_list.hh	/^    SimpleFreeList vecList;$/;"	m	class:UnifiedFreeList
vecMap	rename_map.hh	/^    SimpleRenameMap vecMap;$/;"	m	class:UnifiedRenameMap
vecMode	cpu.hh	/^    Enums::VecRegRenameMode vecMode;$/;"	m	class:FullO3CPU
vecMode	regfile.hh	/^    VecMode vecMode;$/;"	m	class:PhysRegFile
vecRegIds	regfile.hh	/^    std::vector<PhysRegId> vecRegIds;$/;"	m	class:PhysRegFile
vecRegfileReads	cpu.hh	/^    mutable Stats::Scalar vecRegfileReads;$/;"	m	class:FullO3CPU
vecRegfileWrites	cpu.hh	/^    Stats::Scalar vecRegfileWrites;$/;"	m	class:FullO3CPU
vecRenameLookups	rename.hh	/^    Stats::Scalar vecRenameLookups;$/;"	m	class:DefaultRename
vectorRegFile	regfile.hh	/^    std::vector<VecRegContainer> vectorRegFile;$/;"	m	class:PhysRegFile
verifyMemoryMode	cpu.cc	/^FullO3CPU<Impl>::verifyMemoryMode() const$/;"	f	class:FullO3CPU
violation	inst_queue_impl.hh	/^InstructionQueue<Impl>::violation(DynInstPtr &store,$/;"	f	class:InstructionQueue
violation	lsq.hh	/^    bool violation(ThreadID tid)$/;"	f	class:LSQ
violation	lsq_impl.hh	/^LSQ<Impl>::violation()$/;"	f	class:LSQ
violation	lsq_unit.hh	/^    bool violation() { return memDepViolator; }$/;"	f	class:LSQUnit
violation	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::violation(DynInstPtr &store_inst,$/;"	f	class:MemDepUnit
violation	store_set.cc	/^StoreSet::violation(Addr store_PC, Addr load_PC)$/;"	f	class:StoreSet
virtAddr	probe/elastic_trace.hh	/^        Addr virtAddr;$/;"	m	struct:ElasticTrace::TraceInfo
wakeCPU	cpu.cc	/^FullO3CPU<Impl>::wakeCPU()$/;"	f	class:FullO3CPU
wakeCPU	iew_impl.hh	/^DefaultIEW<Impl>::wakeCPU()$/;"	f	class:DefaultIEW
wakeDependents	iew_impl.hh	/^DefaultIEW<Impl>::wakeDependents(DynInstPtr &inst)$/;"	f	class:DefaultIEW
wakeDependents	inst_queue_impl.hh	/^InstructionQueue<Impl>::wakeDependents(DynInstPtr &completed_inst)$/;"	f	class:InstructionQueue
wakeDependents	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::wakeDependents(DynInstPtr &inst)$/;"	f	class:MemDepUnit
wakeFromQuiesce	fetch_impl.hh	/^DefaultFetch<Impl>::wakeFromQuiesce()$/;"	f	class:DefaultFetch
wakeup	cpu.cc	/^FullO3CPU<Impl>::wakeup(ThreadID tid)$/;"	f	class:FullO3CPU
wbCycle	iew.hh	/^    unsigned wbCycle;$/;"	m	class:DefaultIEW
wbFanout	iew.hh	/^    Stats::Formula wbFanout;$/;"	m	class:DefaultIEW
wbNumInst	iew.hh	/^    unsigned wbNumInst;$/;"	m	class:DefaultIEW
wbOutstanding	inst_queue.hh	/^    int wbOutstanding;$/;"	m	class:InstructionQueue
wbRate	iew.hh	/^    Stats::Formula wbRate;$/;"	m	class:DefaultIEW
wbStatus	iew.hh	/^    StageStatus wbStatus;$/;"	m	class:DefaultIEW
wbWidth	O3CPU.py	/^    wbWidth = Param.Unsigned(8, "Writeback width")$/;"	v	class:DerivO3CPU
wbWidth	iew.hh	/^    unsigned wbWidth;$/;"	m	class:DefaultIEW
willWB	lsq.hh	/^    bool willWB(ThreadID tid)$/;"	f	class:LSQ
willWB	lsq_impl.hh	/^LSQ<Impl>::willWB()$/;"	f	class:LSQ
willWB	lsq_unit.hh	/^    bool willWB() { return storeQueue[storeWBIdx].canWB &&$/;"	f	class:LSQUnit
write	cpu.hh	/^    Fault write(RequestPtr &req, RequestPtr &sreqLow, RequestPtr &sreqHigh,$/;"	f	class:FullO3CPU
write	lsq.hh	/^LSQ<Impl>::write(RequestPtr req, RequestPtr sreqLow, RequestPtr sreqHigh,$/;"	f	class:LSQ
write	lsq_unit.hh	/^LSQUnit<Impl>::write(Request *req, Request *sreqLow, Request *sreqHigh,$/;"	f	class:LSQUnit
writeDepTrace	probe/elastic_trace.cc	/^ElasticTrace::writeDepTrace(uint32_t num_to_write)$/;"	f	class:ElasticTrace
writeback	lsq_unit_impl.hh	/^LSQUnit<Impl>::writeback(DynInstPtr &inst, PacketPtr pkt)$/;"	f	class:LSQUnit
writebackCount	iew.hh	/^    Stats::Vector writebackCount;$/;"	m	class:DefaultIEW
writebackInsts	iew_impl.hh	/^DefaultIEW<Impl>::writebackInsts()$/;"	f	class:DefaultIEW
writebackPendingStore	lsq_unit_impl.hh	/^LSQUnit<Impl>::writebackPendingStore()$/;"	f	class:LSQUnit
writebackStores	lsq_impl.hh	/^LSQ<Impl>::writebackStores()$/;"	f	class:LSQ
writebackStores	lsq_unit_impl.hh	/^LSQUnit<Impl>::writebackStores()$/;"	f	class:LSQUnit
wroteToTimeBuffer	commit.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultCommit
wroteToTimeBuffer	decode.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultDecode
wroteToTimeBuffer	fetch.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultFetch
wroteToTimeBuffer	iew.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultIEW
wroteToTimeBuffer	rename.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultRename
x	fetch_impl.hh	/^int x = 0;$/;"	v
youngestSeqNum	commit.hh	/^    InstSeqNum youngestSeqNum[Impl::MaxThreads];$/;"	m	class:DefaultCommit
zeroReg	rename_map.hh	/^    RegId zeroReg;$/;"	m	class:SimpleRenameMap
~BaseO3DynInst	dyn_inst_impl.hh	/^template <class Impl>BaseO3DynInst<Impl>::~BaseO3DynInst()$/;"	f	class:BaseO3DynInst
~DependencyGraph	dep_graph.hh	/^DependencyGraph<DynInstPtr>::~DependencyGraph()$/;"	f	class:DependencyGraph
~FUPool	fu_pool.cc	/^FUPool::~FUPool()$/;"	f	class:FUPool
~FullO3CPU	cpu.cc	/^FullO3CPU<Impl>::~FullO3CPU()$/;"	f	class:FullO3CPU
~InstructionQueue	inst_queue_impl.hh	/^InstructionQueue<Impl>::~InstructionQueue()$/;"	f	class:InstructionQueue
~LSQ	lsq.hh	/^    ~LSQ() {$/;"	f	class:LSQ
~MemDepEntry	mem_dep_unit.hh	/^        ~MemDepEntry()$/;"	f	class:MemDepUnit::MemDepEntry
~MemDepUnit	mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::~MemDepUnit()$/;"	f	class:MemDepUnit
~PhysRegFile	regfile.hh	/^    ~PhysRegFile() {}$/;"	f	class:PhysRegFile
~SQEntry	lsq_unit.hh	/^        ~SQEntry()$/;"	f	struct:LSQUnit::SQEntry
~Scoreboard	scoreboard.hh	/^    ~Scoreboard() {}$/;"	f	class:Scoreboard
~SimpleRenameMap	rename_map.hh	/^    ~SimpleRenameMap() {};$/;"	f	class:SimpleRenameMap
~StoreSet	store_set.cc	/^StoreSet::~StoreSet()$/;"	f	class:StoreSet
~UnifiedRenameMap	rename_map.hh	/^    ~UnifiedRenameMap() {};$/;"	f	class:UnifiedRenameMap
